{"version":3,"sources":["webpack:///component---src-layouts-index-js-b5551bb79721d0767188.js","webpack:///./.cache/json/layout-index.json?2af0","webpack:///./.cache/layouts/index.js","webpack:///./~/deep-equal/index.js","webpack:///./~/deep-equal/lib/is_arguments.js","webpack:///./~/deep-equal/lib/keys.js","webpack:///./~/exenv/index.js","webpack:///./~/react-helmet/lib/Helmet.js","webpack:///./~/react-helmet/lib/HelmetConstants.js","webpack:///./~/react-helmet/lib/HelmetUtils.js","webpack:///./~/react-side-effect/lib/index.js","webpack:///./~/shallowequal/index.js","webpack:///./~/svg.js/dist/svg.js","webpack:///./src/components/Header/index.js","webpack:///./src/components/Logo/index.js","webpack:///./src/layouts/index.js"],"names":["webpackJsonp","103","module","exports","layoutContext","195","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_react","_react2","_index","_index2","_layoutIndex","_layoutIndex2","props","createElement","284","isUndefinedOrNull","value","undefined","isBuffer","x","copy","slice","objEquiv","a","b","opts","isArguments","pSlice","deepEqual","ka","objectKeys","kb","e","sort","Array","actual","expected","Date","getTime","strict","285","supported","object","toString","unsupported","propertyIsEnumerable","supportsArgumentsClass","286","shim","keys","push","293","__WEBPACK_AMD_DEFINE_RESULT__","canUseDOM","window","document","ExecutionEnvironment","canUseWorkers","Worker","canUseEventListeners","addEventListener","attachEvent","canUseViewport","screen","404","_objectWithoutProperties","indexOf","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","Helmet","_createClass","defineProperties","descriptor","defineProperty","protoProps","staticProps","_propTypes","_propTypes2","_reactSideEffect","_reactSideEffect2","_deepEqual","_deepEqual2","_HelmetUtils","_HelmetConstants","Component","_class","_temp","_React$Component","HelmetWrapper","this","apply","shouldComponentUpdate","nextProps","mapNestedChildrenToProps","child","nestedChildren","type","TAG_NAMES","SCRIPT","NOSCRIPT","innerHTML","STYLE","cssText","Error","flattenArrayTypeChildren","_ref","_extends2","arrayTypeChildren","newChildProps","concat","mapObjectTypeChildren","_ref2","_extends3","_extends4","newProps","TITLE","titleAttributes","BODY","bodyAttributes","HTML","htmlAttributes","mapArrayTypeChildrenToProps","newFlattenedProps","forEach","arrayChildName","_extends5","warnOnInvalidChildren","mapChildrenToProps","children","_this2","Children","_child$props","childProps","convertReactPropstoHtmlAttributes","LINK","META","render","_props","set","propTypes","base","oneOfType","arrayOf","node","defaultTitle","string","defer","bool","encodeSpecialCharacters","link","meta","noscript","onChangeClientState","func","script","style","title","titleTemplate","defaultProps","peek","rewind","mappedState","mapStateOnServer","baseTag","linkTags","metaTags","noscriptTags","scriptTags","styleTags","NullComponent","HelmetSideEffects","reducePropsToState","handleClientStateChange","HelmetExport","renderStatic","182","ATTRIBUTE_NAMES","BASE","HEAD","REACT_TAG_MAP","VALID_TAG_NAMES","map","name","TAG_PROPERTIES","CHARSET","CSS_TEXT","HREF","HTTPEQUIV","INNER_HTML","ITEM_PROP","NAME","PROPERTY","REL","SRC","accesskey","charset","class","contenteditable","contextmenu","http-equiv","itemprop","tabindex","HELMET_PROPS","DEFAULT_TITLE","DEFER","ENCODE_SPECIAL_CHARACTERS","ON_CHANGE_CLIENT_STATE","TITLE_TEMPLATE","HTML_TAG_MAP","reduce","SELF_CLOSING_TAGS","HELMET_ATTRIBUTE","405","global","warn","requestAnimationFrame","_typeof","Symbol","iterator","_objectAssign","_objectAssign2","str","encode","String","replace","getTitleFromPropsList","propsList","innermostTitle","getInnermostProperty","innermostTemplate","innermostDefaultTitle","getOnChangeClientState","getAttributesFromPropsList","tagType","filter","tagAttrs","current","getBaseTagFromPropsList","primaryAttributes","reverse","innermostBaseTag","tag","attributeKey","lowerCaseAttributeKey","toLowerCase","getTagsFromPropsList","tagName","approvedSeenTags","isArray","approvedTags","instanceTags","instanceSeenTags","primaryAttributeKey","tagUnion","property","rafPolyfill","clock","now","callback","currentTime","setTimeout","cafPolyfill","id","clearTimeout","webkitRequestAnimationFrame","mozRequestAnimationFrame","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","msg","console","_helmetCallback","newState","commitTagChanges","cb","updateAttributes","updateTitle","tagUpdates","updateTags","addedTags","removedTags","_tagUpdates$tagType","newTags","oldTags","flattenArray","possibleArray","join","attributes","elementTag","getElementsByTagName","helmetAttributeString","getAttribute","helmetAttributes","split","attributesToRemove","attributeKeys","attribute","setAttribute","indexToSave","splice","_i","removeAttribute","tags","headElement","head","querySelector","tagNodes","querySelectorAll","indexToDelete","newElement","styleSheet","appendChild","createTextNode","some","existingTag","index","isEqualNode","parentNode","removeChild","generateElementAttributesAsString","attr","generateTitleAsString","attributeString","flattenedTitle","generateTagsAsString","attributeHtml","tagContent","isSelfClosing","convertElementAttributestoReactProps","initProps","initAttributes","generateTitleAsReactComponent","_initProps","generateTagsAsReactComponent","_mappedTag","mappedTag","mappedAttribute","content","dangerouslySetInnerHTML","__html","getMethodsForTag","toComponent","_ref$title","423","_exenv","_exenv2","_shallowequal","_shallowequal2","handleStateChangeOnClient","getDisplayName","WrappedComponent","displayName","emitChange","state","mountedInstances","SideEffect","_Component","recordedState","componentWillMount","componentDidUpdate","componentWillUnmount","440","objA","objB","compare","compareContext","ret","keysA","keysB","bHasOwnProperty","bind","idx","valueA","valueB","441","root","factory","pathRegReplace","c","d","SVG","regex","dots","array_clone","arr","clone","is","el","matches","selector","matchesSelector","msMatchesSelector","mozMatchesSelector","webkitMatchesSelector","oMatchesSelector","camelCase","s","m","g","toUpperCase","capitalize","charAt","fullHex","hex","substring","compToHex","comp","proportionalSize","element","width","height","box","bbox","deltaTransformPoint","matrix","y","arrayToMatrix","f","parseMatrix","Matrix","ensureCentre","o","cx","cy","arrayToString","il","assignNewId","childNodes","SVGElement","adopt","eid","nodeName","fullBox","w","h","x2","y2","idFromReference","url","match","reference","Doc","parser","draw","prepare","ns","xmlns","xlink","svgjs","createElementNS","createSVGRect","did","extend","modules","methods","pop","Set","inherit","invent","config","initializer","construct","parent","Container","Nested","Gradient","Element","namespace","defs","setData","JSON","parse","body","documentElement","nested","size","poly","polyline","path","native","numberAndUnit","rgb","transforms","whitespace","isHex","isRgb","isCss","isBlank","isNumber","isPercent","isImage","delimiter","hyphen","pathLetters","isPathLetter","numbersWithDots","utils","array","block","result","radians","Math","PI","degrees","r","filterSVGElements","nodes","defaults","attrs","fill-opacity","stroke-opacity","stroke-width","stroke-linejoin","stroke-linecap","fill","stroke","opacity","rx","ry","offset","stop-opacity","stop-color","font-size","font-family","text-anchor","Color","color","test","exec","parseInt","toHex","toRgb","brightness","morph","destination","at","pos","isColor","fallback","valueOf","lastValue","lastDestination","settle","seen","trim","parseFloat","PointArray","toLine","x1","y1","points","len","move","isNaN","getBBox","pathHandlers","M","p","p0","L","H","V","C","S","Q","T","Z","A","mlhvqtcsa","j","jl","PathArray","l","equalCommands","pathArray","sourceArray","destinationArray","paramCnt","prev","curr","Point","Number","unit","isFinite","toJSON","plus","number","minus","times","divide","to","relative","_stroke","_event","dom","center","withData","writeDataToDom","cloneNode","add","after","remove","removeElement","addTo","put","putIn","inside","show","hide","visible","classes","hasClass","addClass","removeClass","toggleClass","get","doc","parents","svg","well","Parent","firstChild","each","lines","fn","stringify","easing","-","<>","cos",">","sin","<","from","MorphObj","Situation","init","reversed","reversing","duration","delay","start","finish","ease","loop","loops","animations","styles","once","FX","_target","situations","active","situation","paused","lastPos","absPos","_speed","animate","queue","timeToAbsPos","timestamp","absPosToTime","startAnimFrame","stopAnimFrame","animationFrame","step","startCurrent","initAnimations","shift","dequeue","stop","initialTransformation","matrixify","clearQueue","clearCurrent","jumpToEnd","atEnd","reset","temp","atStart","isAbsPos","durDivSpd","speed","pause","last","play","progress","easeIt","wrapper","detail","off","on","_callStart","during","eased","afterAll","duringAll","method","args","ignoreTime","absPosInt","lastLoop","max","floor","Boolean","min","fire","fx","eachAt","multiply","undo","extract","isEased","real","v","G","transform","num","Text","plot","leading","viewbox","ViewBox","update","Stop","Box","left","top","merge","xMin","Infinity","xMax","yMin","yMax","pts","BBox","contains","Exception","topParent","Shape","clientLeft","clientTop","clientWidth","clientHeight","tbox","rbox","RBox","getBoundingClientRect","addOffset","pageXOffset","pageYOffset","screenCTM","inverse","abcdef","px","py","skewX","atan2","transformedX","sqrt","transformedY","skewY","scaleX","scaleY","rotation","translate","scale","around","rotate","flip","skew","tan","createSVGMatrix","ctm","getCTM","rect","getScreenCTM","point","createSVGPoint","matrixTransform","n","nodeValue","image","Image","pattern","setAttributeNS","rebuild","Rotate","Scale","Skew","Translate","untransform","kv","toParent","pCtm","toDoc","Transformation","inversed","params","_undo","insertBefore","has","first","deep","clear","hasChildNodes","lastChild","_defs","ungroup","depth","Defs","flatten","view","we","he","wm","hm","reg","offsetWidth","offsetHeight","zoom","event","listeners","handlerMap","listenerId","listener","binding","options","ev","_svgjsListenerId","removeEventListener","data","Event","dispatchEvent","CustomEvent","cancelable","gbox","trans","group","siblings","position","next","previous","forward","backward","front","back","before","Mask","targets","unmask","mask","maskWith","masker","ClipPath","unclip","clip","clipWith","clipper","gradient","fy","Pattern","patternUnits","getElementById","version","spof","Bare","words","text","symbol","Use","file","use","Rect","Circle","circle","Ellipse","ellipse","Line","line","Polyline","Polygon","polygon","_array","morphArray","Path","load","img","_loaded","ratio","_error","src","loaded","error","_rebuild","_build","oy","nodeType","newLined","textContent","build","tspan","newLine","textPath","blankLineOffset","dy","plain","Tspan","dx","t","getComputedTextLength","TextPath","track","linkTo","Marker","ref","marker","sugar","prefix","extension","dmove","radius","getTotalLength","pointAt","getPointAtLength","font","members","elements","remember","k","memory","forget","_memory","select","query","bubbles","createEvent","initCustomEvent","lastTime","vendors","currTime","timeToCall","199","_gatsbyLink","_gatsbyLink2","_Logo","_Logo2","Header","className","href","data-target","200","_svg","_svg2","butterfly","rightWing","leftWing","click","viewBox","xmlnsXlink","strokeWidth","fillRule","201","_reactHelmet","_reactHelmet2","_Header","_Header2","Layout","httpEquiv","rel","media","sizes","margin","maxWidth","padding","paddingTop","335","336"],"mappings":"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","file":"component---src-layouts-index-js-b5551bb79721d0767188.js","sourcesContent":["webpackJsonp([114276838955818,60335399758886],{\n\n/***/ 103:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"layoutContext\":{}}\n\n/***/ }),\n\n/***/ 195:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _index = __webpack_require__(201);\n\t\n\tvar _index2 = _interopRequireDefault(_index);\n\t\n\tvar _layoutIndex = __webpack_require__(103);\n\t\n\tvar _layoutIndex2 = _interopRequireDefault(_layoutIndex);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = function (props) {\n\t  return _react2.default.createElement(_index2.default, _extends({}, props, _layoutIndex2.default));\n\t};\n\t\n\tmodule.exports = exports[\"default\"];\n\n/***/ }),\n\n/***/ 284:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar pSlice = Array.prototype.slice;\n\tvar objectKeys = __webpack_require__(286);\n\tvar isArguments = __webpack_require__(285);\n\t\n\tvar deepEqual = module.exports = function (actual, expected, opts) {\n\t  if (!opts) opts = {};\n\t  // 7.1. All identical values are equivalent, as determined by ===.\n\t  if (actual === expected) {\n\t    return true;\n\t\n\t  } else if (actual instanceof Date && expected instanceof Date) {\n\t    return actual.getTime() === expected.getTime();\n\t\n\t  // 7.3. Other pairs that do not both pass typeof value == 'object',\n\t  // equivalence is determined by ==.\n\t  } else if (!actual || !expected || typeof actual != 'object' && typeof expected != 'object') {\n\t    return opts.strict ? actual === expected : actual == expected;\n\t\n\t  // 7.4. For all other Object pairs, including Array objects, equivalence is\n\t  // determined by having the same number of owned properties (as verified\n\t  // with Object.prototype.hasOwnProperty.call), the same set of keys\n\t  // (although not necessarily the same order), equivalent values for every\n\t  // corresponding key, and an identical 'prototype' property. Note: this\n\t  // accounts for both named and indexed properties on Arrays.\n\t  } else {\n\t    return objEquiv(actual, expected, opts);\n\t  }\n\t}\n\t\n\tfunction isUndefinedOrNull(value) {\n\t  return value === null || value === undefined;\n\t}\n\t\n\tfunction isBuffer (x) {\n\t  if (!x || typeof x !== 'object' || typeof x.length !== 'number') return false;\n\t  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {\n\t    return false;\n\t  }\n\t  if (x.length > 0 && typeof x[0] !== 'number') return false;\n\t  return true;\n\t}\n\t\n\tfunction objEquiv(a, b, opts) {\n\t  var i, key;\n\t  if (isUndefinedOrNull(a) || isUndefinedOrNull(b))\n\t    return false;\n\t  // an identical 'prototype' property.\n\t  if (a.prototype !== b.prototype) return false;\n\t  //~~~I've managed to break Object.keys through screwy arguments passing.\n\t  //   Converting to array solves the problem.\n\t  if (isArguments(a)) {\n\t    if (!isArguments(b)) {\n\t      return false;\n\t    }\n\t    a = pSlice.call(a);\n\t    b = pSlice.call(b);\n\t    return deepEqual(a, b, opts);\n\t  }\n\t  if (isBuffer(a)) {\n\t    if (!isBuffer(b)) {\n\t      return false;\n\t    }\n\t    if (a.length !== b.length) return false;\n\t    for (i = 0; i < a.length; i++) {\n\t      if (a[i] !== b[i]) return false;\n\t    }\n\t    return true;\n\t  }\n\t  try {\n\t    var ka = objectKeys(a),\n\t        kb = objectKeys(b);\n\t  } catch (e) {//happens when one is a string literal and the other isn't\n\t    return false;\n\t  }\n\t  // having the same number of owned properties (keys incorporates\n\t  // hasOwnProperty)\n\t  if (ka.length != kb.length)\n\t    return false;\n\t  //the same set of keys (although not necessarily the same order),\n\t  ka.sort();\n\t  kb.sort();\n\t  //~~~cheap key test\n\t  for (i = ka.length - 1; i >= 0; i--) {\n\t    if (ka[i] != kb[i])\n\t      return false;\n\t  }\n\t  //equivalent values for every corresponding key, and\n\t  //~~~possibly expensive deep test\n\t  for (i = ka.length - 1; i >= 0; i--) {\n\t    key = ka[i];\n\t    if (!deepEqual(a[key], b[key], opts)) return false;\n\t  }\n\t  return typeof a === typeof b;\n\t}\n\n\n/***/ }),\n\n/***/ 285:\n/***/ (function(module, exports) {\n\n\tvar supportsArgumentsClass = (function(){\n\t  return Object.prototype.toString.call(arguments)\n\t})() == '[object Arguments]';\n\t\n\texports = module.exports = supportsArgumentsClass ? supported : unsupported;\n\t\n\texports.supported = supported;\n\tfunction supported(object) {\n\t  return Object.prototype.toString.call(object) == '[object Arguments]';\n\t};\n\t\n\texports.unsupported = unsupported;\n\tfunction unsupported(object){\n\t  return object &&\n\t    typeof object == 'object' &&\n\t    typeof object.length == 'number' &&\n\t    Object.prototype.hasOwnProperty.call(object, 'callee') &&\n\t    !Object.prototype.propertyIsEnumerable.call(object, 'callee') ||\n\t    false;\n\t};\n\n\n/***/ }),\n\n/***/ 286:\n/***/ (function(module, exports) {\n\n\texports = module.exports = typeof Object.keys === 'function'\n\t  ? Object.keys : shim;\n\t\n\texports.shim = shim;\n\tfunction shim (obj) {\n\t  var keys = [];\n\t  for (var key in obj) keys.push(key);\n\t  return keys;\n\t}\n\n\n/***/ }),\n\n/***/ 293:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/*!\n\t  Copyright (c) 2015 Jed Watson.\n\t  Based on code that is Copyright 2013-2015, Facebook, Inc.\n\t  All rights reserved.\n\t*/\n\t/* global define */\n\t\n\t(function () {\n\t\t'use strict';\n\t\n\t\tvar canUseDOM = !!(\n\t\t\ttypeof window !== 'undefined' &&\n\t\t\twindow.document &&\n\t\t\twindow.document.createElement\n\t\t);\n\t\n\t\tvar ExecutionEnvironment = {\n\t\n\t\t\tcanUseDOM: canUseDOM,\n\t\n\t\t\tcanUseWorkers: typeof Worker !== 'undefined',\n\t\n\t\t\tcanUseEventListeners:\n\t\t\t\tcanUseDOM && !!(window.addEventListener || window.attachEvent),\n\t\n\t\t\tcanUseViewport: canUseDOM && !!window.screen\n\t\n\t\t};\n\t\n\t\tif (true) {\n\t\t\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function () {\n\t\t\t\treturn ExecutionEnvironment;\n\t\t\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\t} else if (typeof module !== 'undefined' && module.exports) {\n\t\t\tmodule.exports = ExecutionEnvironment;\n\t\t} else {\n\t\t\twindow.ExecutionEnvironment = ExecutionEnvironment;\n\t\t}\n\t\n\t}());\n\n\n/***/ }),\n\n/***/ 404:\n/***/ (function(module, exports, __webpack_require__) {\n\n\texports.__esModule = true;\n\texports.Helmet = undefined;\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(7);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _reactSideEffect = __webpack_require__(423);\n\t\n\tvar _reactSideEffect2 = _interopRequireDefault(_reactSideEffect);\n\t\n\tvar _deepEqual = __webpack_require__(284);\n\t\n\tvar _deepEqual2 = _interopRequireDefault(_deepEqual);\n\t\n\tvar _HelmetUtils = __webpack_require__(405);\n\t\n\tvar _HelmetConstants = __webpack_require__(182);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Helmet = function Helmet(Component) {\n\t    var _class, _temp;\n\t\n\t    return _temp = _class = function (_React$Component) {\n\t        _inherits(HelmetWrapper, _React$Component);\n\t\n\t        function HelmetWrapper() {\n\t            _classCallCheck(this, HelmetWrapper);\n\t\n\t            return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));\n\t        }\n\t\n\t        HelmetWrapper.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n\t            return !(0, _deepEqual2.default)(this.props, nextProps);\n\t        };\n\t\n\t        HelmetWrapper.prototype.mapNestedChildrenToProps = function mapNestedChildrenToProps(child, nestedChildren) {\n\t            if (!nestedChildren) {\n\t                return null;\n\t            }\n\t\n\t            switch (child.type) {\n\t                case _HelmetConstants.TAG_NAMES.SCRIPT:\n\t                case _HelmetConstants.TAG_NAMES.NOSCRIPT:\n\t                    return {\n\t                        innerHTML: nestedChildren\n\t                    };\n\t\n\t                case _HelmetConstants.TAG_NAMES.STYLE:\n\t                    return {\n\t                        cssText: nestedChildren\n\t                    };\n\t            }\n\t\n\t            throw new Error(\"<\" + child.type + \" /> elements are self-closing and can not contain children. Refer to our API for more information.\");\n\t        };\n\t\n\t        HelmetWrapper.prototype.flattenArrayTypeChildren = function flattenArrayTypeChildren(_ref) {\n\t            var _extends2;\n\t\n\t            var child = _ref.child,\n\t                arrayTypeChildren = _ref.arrayTypeChildren,\n\t                newChildProps = _ref.newChildProps,\n\t                nestedChildren = _ref.nestedChildren;\n\t\n\t            return _extends({}, arrayTypeChildren, (_extends2 = {}, _extends2[child.type] = [].concat(arrayTypeChildren[child.type] || [], [_extends({}, newChildProps, this.mapNestedChildrenToProps(child, nestedChildren))]), _extends2));\n\t        };\n\t\n\t        HelmetWrapper.prototype.mapObjectTypeChildren = function mapObjectTypeChildren(_ref2) {\n\t            var _extends3, _extends4;\n\t\n\t            var child = _ref2.child,\n\t                newProps = _ref2.newProps,\n\t                newChildProps = _ref2.newChildProps,\n\t                nestedChildren = _ref2.nestedChildren;\n\t\n\t            switch (child.type) {\n\t                case _HelmetConstants.TAG_NAMES.TITLE:\n\t                    return _extends({}, newProps, (_extends3 = {}, _extends3[child.type] = nestedChildren, _extends3.titleAttributes = _extends({}, newChildProps), _extends3));\n\t\n\t                case _HelmetConstants.TAG_NAMES.BODY:\n\t                    return _extends({}, newProps, {\n\t                        bodyAttributes: _extends({}, newChildProps)\n\t                    });\n\t\n\t                case _HelmetConstants.TAG_NAMES.HTML:\n\t                    return _extends({}, newProps, {\n\t                        htmlAttributes: _extends({}, newChildProps)\n\t                    });\n\t            }\n\t\n\t            return _extends({}, newProps, (_extends4 = {}, _extends4[child.type] = _extends({}, newChildProps), _extends4));\n\t        };\n\t\n\t        HelmetWrapper.prototype.mapArrayTypeChildrenToProps = function mapArrayTypeChildrenToProps(arrayTypeChildren, newProps) {\n\t            var newFlattenedProps = _extends({}, newProps);\n\t\n\t            Object.keys(arrayTypeChildren).forEach(function (arrayChildName) {\n\t                var _extends5;\n\t\n\t                newFlattenedProps = _extends({}, newFlattenedProps, (_extends5 = {}, _extends5[arrayChildName] = arrayTypeChildren[arrayChildName], _extends5));\n\t            });\n\t\n\t            return newFlattenedProps;\n\t        };\n\t\n\t        HelmetWrapper.prototype.warnOnInvalidChildren = function warnOnInvalidChildren(child, nestedChildren) {\n\t            if (false) {\n\t                if (!_HelmetConstants.VALID_TAG_NAMES.some(function (name) {\n\t                    return child.type === name;\n\t                })) {\n\t                    if (typeof child.type === \"function\") {\n\t                        return (0, _HelmetUtils.warn)(\"You may be attempting to nest <Helmet> components within each other, which is not allowed. Refer to our API for more information.\");\n\t                    }\n\t\n\t                    return (0, _HelmetUtils.warn)(\"Only elements types \" + _HelmetConstants.VALID_TAG_NAMES.join(\", \") + \" are allowed. Helmet does not support rendering <\" + child.type + \"> elements. Refer to our API for more information.\");\n\t                }\n\t\n\t                if (nestedChildren && typeof nestedChildren !== \"string\" && (!Array.isArray(nestedChildren) || nestedChildren.some(function (nestedChild) {\n\t                    return typeof nestedChild !== \"string\";\n\t                }))) {\n\t                    throw new Error(\"Helmet expects a string as a child of <\" + child.type + \">. Did you forget to wrap your children in braces? ( <\" + child.type + \">{``}</\" + child.type + \"> ) Refer to our API for more information.\");\n\t                }\n\t            }\n\t\n\t            return true;\n\t        };\n\t\n\t        HelmetWrapper.prototype.mapChildrenToProps = function mapChildrenToProps(children, newProps) {\n\t            var _this2 = this;\n\t\n\t            var arrayTypeChildren = {};\n\t\n\t            _react2.default.Children.forEach(children, function (child) {\n\t                if (!child || !child.props) {\n\t                    return;\n\t                }\n\t\n\t                var _child$props = child.props,\n\t                    nestedChildren = _child$props.children,\n\t                    childProps = _objectWithoutProperties(_child$props, [\"children\"]);\n\t\n\t                var newChildProps = (0, _HelmetUtils.convertReactPropstoHtmlAttributes)(childProps);\n\t\n\t                _this2.warnOnInvalidChildren(child, nestedChildren);\n\t\n\t                switch (child.type) {\n\t                    case _HelmetConstants.TAG_NAMES.LINK:\n\t                    case _HelmetConstants.TAG_NAMES.META:\n\t                    case _HelmetConstants.TAG_NAMES.NOSCRIPT:\n\t                    case _HelmetConstants.TAG_NAMES.SCRIPT:\n\t                    case _HelmetConstants.TAG_NAMES.STYLE:\n\t                        arrayTypeChildren = _this2.flattenArrayTypeChildren({\n\t                            child: child,\n\t                            arrayTypeChildren: arrayTypeChildren,\n\t                            newChildProps: newChildProps,\n\t                            nestedChildren: nestedChildren\n\t                        });\n\t                        break;\n\t\n\t                    default:\n\t                        newProps = _this2.mapObjectTypeChildren({\n\t                            child: child,\n\t                            newProps: newProps,\n\t                            newChildProps: newChildProps,\n\t                            nestedChildren: nestedChildren\n\t                        });\n\t                        break;\n\t                }\n\t            });\n\t\n\t            newProps = this.mapArrayTypeChildrenToProps(arrayTypeChildren, newProps);\n\t            return newProps;\n\t        };\n\t\n\t        HelmetWrapper.prototype.render = function render() {\n\t            var _props = this.props,\n\t                children = _props.children,\n\t                props = _objectWithoutProperties(_props, [\"children\"]);\n\t\n\t            var newProps = _extends({}, props);\n\t\n\t            if (children) {\n\t                newProps = this.mapChildrenToProps(children, newProps);\n\t            }\n\t\n\t            return _react2.default.createElement(Component, newProps);\n\t        };\n\t\n\t        _createClass(HelmetWrapper, null, [{\n\t            key: \"canUseDOM\",\n\t\n\t\n\t            // Component.peek comes from react-side-effect:\n\t            // For testing, you may use a static peek() method available on the returned component.\n\t            // It lets you get the current state without resetting the mounted instance stack.\n\t            // Don’t use it for anything other than testing.\n\t\n\t            /**\n\t            * @param {Object} base: {\"target\": \"_blank\", \"href\": \"http://mysite.com/\"}\n\t            * @param {Object} bodyAttributes: {\"className\": \"root\"}\n\t            * @param {String} defaultTitle: \"Default Title\"\n\t            * @param {Boolean} defer: true\n\t            * @param {Boolean} encodeSpecialCharacters: true\n\t            * @param {Object} htmlAttributes: {\"lang\": \"en\", \"amp\": undefined}\n\t            * @param {Array} link: [{\"rel\": \"canonical\", \"href\": \"http://mysite.com/example\"}]\n\t            * @param {Array} meta: [{\"name\": \"description\", \"content\": \"Test description\"}]\n\t            * @param {Array} noscript: [{\"innerHTML\": \"<img src='http://mysite.com/js/test.js'\"}]\n\t            * @param {Function} onChangeClientState: \"(newState) => console.log(newState)\"\n\t            * @param {Array} script: [{\"type\": \"text/javascript\", \"src\": \"http://mysite.com/js/test.js\"}]\n\t            * @param {Array} style: [{\"type\": \"text/css\", \"cssText\": \"div { display: block; color: blue; }\"}]\n\t            * @param {String} title: \"Title\"\n\t            * @param {Object} titleAttributes: {\"itemprop\": \"name\"}\n\t            * @param {String} titleTemplate: \"MySite.com - %s\"\n\t            */\n\t            set: function set(canUseDOM) {\n\t                Component.canUseDOM = canUseDOM;\n\t            }\n\t        }]);\n\t\n\t        return HelmetWrapper;\n\t    }(_react2.default.Component), _class.propTypes = {\n\t        base: _propTypes2.default.object,\n\t        bodyAttributes: _propTypes2.default.object,\n\t        children: _propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.node), _propTypes2.default.node]),\n\t        defaultTitle: _propTypes2.default.string,\n\t        defer: _propTypes2.default.bool,\n\t        encodeSpecialCharacters: _propTypes2.default.bool,\n\t        htmlAttributes: _propTypes2.default.object,\n\t        link: _propTypes2.default.arrayOf(_propTypes2.default.object),\n\t        meta: _propTypes2.default.arrayOf(_propTypes2.default.object),\n\t        noscript: _propTypes2.default.arrayOf(_propTypes2.default.object),\n\t        onChangeClientState: _propTypes2.default.func,\n\t        script: _propTypes2.default.arrayOf(_propTypes2.default.object),\n\t        style: _propTypes2.default.arrayOf(_propTypes2.default.object),\n\t        title: _propTypes2.default.string,\n\t        titleAttributes: _propTypes2.default.object,\n\t        titleTemplate: _propTypes2.default.string\n\t    }, _class.defaultProps = {\n\t        defer: true,\n\t        encodeSpecialCharacters: true\n\t    }, _class.peek = Component.peek, _class.rewind = function () {\n\t        var mappedState = Component.rewind();\n\t        if (!mappedState) {\n\t            // provide fallback if mappedState is undefined\n\t            mappedState = (0, _HelmetUtils.mapStateOnServer)({\n\t                baseTag: [],\n\t                bodyAttributes: {},\n\t                encodeSpecialCharacters: true,\n\t                htmlAttributes: {},\n\t                linkTags: [],\n\t                metaTags: [],\n\t                noscriptTags: [],\n\t                scriptTags: [],\n\t                styleTags: [],\n\t                title: \"\",\n\t                titleAttributes: {}\n\t            });\n\t        }\n\t\n\t        return mappedState;\n\t    }, _temp;\n\t};\n\t\n\tvar NullComponent = function NullComponent() {\n\t    return null;\n\t};\n\t\n\tvar HelmetSideEffects = (0, _reactSideEffect2.default)(_HelmetUtils.reducePropsToState, _HelmetUtils.handleClientStateChange, _HelmetUtils.mapStateOnServer)(NullComponent);\n\t\n\tvar HelmetExport = Helmet(HelmetSideEffects);\n\tHelmetExport.renderStatic = HelmetExport.rewind;\n\t\n\texports.Helmet = HelmetExport;\n\texports.default = HelmetExport;\n\n/***/ }),\n\n/***/ 182:\n/***/ (function(module, exports) {\n\n\texports.__esModule = true;\n\tvar ATTRIBUTE_NAMES = exports.ATTRIBUTE_NAMES = {\n\t    BODY: \"bodyAttributes\",\n\t    HTML: \"htmlAttributes\",\n\t    TITLE: \"titleAttributes\"\n\t};\n\t\n\tvar TAG_NAMES = exports.TAG_NAMES = {\n\t    BASE: \"base\",\n\t    BODY: \"body\",\n\t    HEAD: \"head\",\n\t    HTML: \"html\",\n\t    LINK: \"link\",\n\t    META: \"meta\",\n\t    NOSCRIPT: \"noscript\",\n\t    SCRIPT: \"script\",\n\t    STYLE: \"style\",\n\t    TITLE: \"title\"\n\t};\n\t\n\tvar VALID_TAG_NAMES = exports.VALID_TAG_NAMES = Object.keys(TAG_NAMES).map(function (name) {\n\t    return TAG_NAMES[name];\n\t});\n\t\n\tvar TAG_PROPERTIES = exports.TAG_PROPERTIES = {\n\t    CHARSET: \"charset\",\n\t    CSS_TEXT: \"cssText\",\n\t    HREF: \"href\",\n\t    HTTPEQUIV: \"http-equiv\",\n\t    INNER_HTML: \"innerHTML\",\n\t    ITEM_PROP: \"itemprop\",\n\t    NAME: \"name\",\n\t    PROPERTY: \"property\",\n\t    REL: \"rel\",\n\t    SRC: \"src\"\n\t};\n\t\n\tvar REACT_TAG_MAP = exports.REACT_TAG_MAP = {\n\t    accesskey: \"accessKey\",\n\t    charset: \"charSet\",\n\t    class: \"className\",\n\t    contenteditable: \"contentEditable\",\n\t    contextmenu: \"contextMenu\",\n\t    \"http-equiv\": \"httpEquiv\",\n\t    itemprop: \"itemProp\",\n\t    tabindex: \"tabIndex\"\n\t};\n\t\n\tvar HELMET_PROPS = exports.HELMET_PROPS = {\n\t    DEFAULT_TITLE: \"defaultTitle\",\n\t    DEFER: \"defer\",\n\t    ENCODE_SPECIAL_CHARACTERS: \"encodeSpecialCharacters\",\n\t    ON_CHANGE_CLIENT_STATE: \"onChangeClientState\",\n\t    TITLE_TEMPLATE: \"titleTemplate\"\n\t};\n\t\n\tvar HTML_TAG_MAP = exports.HTML_TAG_MAP = Object.keys(REACT_TAG_MAP).reduce(function (obj, key) {\n\t    obj[REACT_TAG_MAP[key]] = key;\n\t    return obj;\n\t}, {});\n\t\n\tvar SELF_CLOSING_TAGS = exports.SELF_CLOSING_TAGS = [TAG_NAMES.NOSCRIPT, TAG_NAMES.SCRIPT, TAG_NAMES.STYLE];\n\t\n\tvar HELMET_ATTRIBUTE = exports.HELMET_ATTRIBUTE = \"data-react-helmet\";\n\n/***/ }),\n\n/***/ 405:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {exports.__esModule = true;\n\texports.warn = exports.requestAnimationFrame = exports.reducePropsToState = exports.mapStateOnServer = exports.handleClientStateChange = exports.convertReactPropstoHtmlAttributes = undefined;\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _objectAssign = __webpack_require__(5);\n\t\n\tvar _objectAssign2 = _interopRequireDefault(_objectAssign);\n\t\n\tvar _HelmetConstants = __webpack_require__(182);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar encodeSpecialCharacters = function encodeSpecialCharacters(str) {\n\t    var encode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\t\n\t    if (encode === false) {\n\t        return String(str);\n\t    }\n\t\n\t    return String(str).replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\").replace(/\"/g, \"&quot;\").replace(/'/g, \"&#x27;\");\n\t};\n\t\n\tvar getTitleFromPropsList = function getTitleFromPropsList(propsList) {\n\t    var innermostTitle = getInnermostProperty(propsList, _HelmetConstants.TAG_NAMES.TITLE);\n\t    var innermostTemplate = getInnermostProperty(propsList, _HelmetConstants.HELMET_PROPS.TITLE_TEMPLATE);\n\t\n\t    if (innermostTemplate && innermostTitle) {\n\t        // use function arg to avoid need to escape $ characters\n\t        return innermostTemplate.replace(/%s/g, function () {\n\t            return innermostTitle;\n\t        });\n\t    }\n\t\n\t    var innermostDefaultTitle = getInnermostProperty(propsList, _HelmetConstants.HELMET_PROPS.DEFAULT_TITLE);\n\t\n\t    return innermostTitle || innermostDefaultTitle || undefined;\n\t};\n\t\n\tvar getOnChangeClientState = function getOnChangeClientState(propsList) {\n\t    return getInnermostProperty(propsList, _HelmetConstants.HELMET_PROPS.ON_CHANGE_CLIENT_STATE) || function () {};\n\t};\n\t\n\tvar getAttributesFromPropsList = function getAttributesFromPropsList(tagType, propsList) {\n\t    return propsList.filter(function (props) {\n\t        return typeof props[tagType] !== \"undefined\";\n\t    }).map(function (props) {\n\t        return props[tagType];\n\t    }).reduce(function (tagAttrs, current) {\n\t        return _extends({}, tagAttrs, current);\n\t    }, {});\n\t};\n\t\n\tvar getBaseTagFromPropsList = function getBaseTagFromPropsList(primaryAttributes, propsList) {\n\t    return propsList.filter(function (props) {\n\t        return typeof props[_HelmetConstants.TAG_NAMES.BASE] !== \"undefined\";\n\t    }).map(function (props) {\n\t        return props[_HelmetConstants.TAG_NAMES.BASE];\n\t    }).reverse().reduce(function (innermostBaseTag, tag) {\n\t        if (!innermostBaseTag.length) {\n\t            var keys = Object.keys(tag);\n\t\n\t            for (var i = 0; i < keys.length; i++) {\n\t                var attributeKey = keys[i];\n\t                var lowerCaseAttributeKey = attributeKey.toLowerCase();\n\t\n\t                if (primaryAttributes.indexOf(lowerCaseAttributeKey) !== -1 && tag[lowerCaseAttributeKey]) {\n\t                    return innermostBaseTag.concat(tag);\n\t                }\n\t            }\n\t        }\n\t\n\t        return innermostBaseTag;\n\t    }, []);\n\t};\n\t\n\tvar getTagsFromPropsList = function getTagsFromPropsList(tagName, primaryAttributes, propsList) {\n\t    // Calculate list of tags, giving priority innermost component (end of the propslist)\n\t    var approvedSeenTags = {};\n\t\n\t    return propsList.filter(function (props) {\n\t        if (Array.isArray(props[tagName])) {\n\t            return true;\n\t        }\n\t        if (typeof props[tagName] !== \"undefined\") {\n\t            warn(\"Helmet: \" + tagName + \" should be of type \\\"Array\\\". Instead found type \\\"\" + _typeof(props[tagName]) + \"\\\"\");\n\t        }\n\t        return false;\n\t    }).map(function (props) {\n\t        return props[tagName];\n\t    }).reverse().reduce(function (approvedTags, instanceTags) {\n\t        var instanceSeenTags = {};\n\t\n\t        instanceTags.filter(function (tag) {\n\t            var primaryAttributeKey = void 0;\n\t            var keys = Object.keys(tag);\n\t            for (var i = 0; i < keys.length; i++) {\n\t                var attributeKey = keys[i];\n\t                var lowerCaseAttributeKey = attributeKey.toLowerCase();\n\t\n\t                // Special rule with link tags, since rel and href are both primary tags, rel takes priority\n\t                if (primaryAttributes.indexOf(lowerCaseAttributeKey) !== -1 && !(primaryAttributeKey === _HelmetConstants.TAG_PROPERTIES.REL && tag[primaryAttributeKey].toLowerCase() === \"canonical\") && !(lowerCaseAttributeKey === _HelmetConstants.TAG_PROPERTIES.REL && tag[lowerCaseAttributeKey].toLowerCase() === \"stylesheet\")) {\n\t                    primaryAttributeKey = lowerCaseAttributeKey;\n\t                }\n\t                // Special case for innerHTML which doesn't work lowercased\n\t                if (primaryAttributes.indexOf(attributeKey) !== -1 && (attributeKey === _HelmetConstants.TAG_PROPERTIES.INNER_HTML || attributeKey === _HelmetConstants.TAG_PROPERTIES.CSS_TEXT || attributeKey === _HelmetConstants.TAG_PROPERTIES.ITEM_PROP)) {\n\t                    primaryAttributeKey = attributeKey;\n\t                }\n\t            }\n\t\n\t            if (!primaryAttributeKey || !tag[primaryAttributeKey]) {\n\t                return false;\n\t            }\n\t\n\t            var value = tag[primaryAttributeKey].toLowerCase();\n\t\n\t            if (!approvedSeenTags[primaryAttributeKey]) {\n\t                approvedSeenTags[primaryAttributeKey] = {};\n\t            }\n\t\n\t            if (!instanceSeenTags[primaryAttributeKey]) {\n\t                instanceSeenTags[primaryAttributeKey] = {};\n\t            }\n\t\n\t            if (!approvedSeenTags[primaryAttributeKey][value]) {\n\t                instanceSeenTags[primaryAttributeKey][value] = true;\n\t                return true;\n\t            }\n\t\n\t            return false;\n\t        }).reverse().forEach(function (tag) {\n\t            return approvedTags.push(tag);\n\t        });\n\t\n\t        // Update seen tags with tags from this instance\n\t        var keys = Object.keys(instanceSeenTags);\n\t        for (var i = 0; i < keys.length; i++) {\n\t            var attributeKey = keys[i];\n\t            var tagUnion = (0, _objectAssign2.default)({}, approvedSeenTags[attributeKey], instanceSeenTags[attributeKey]);\n\t\n\t            approvedSeenTags[attributeKey] = tagUnion;\n\t        }\n\t\n\t        return approvedTags;\n\t    }, []).reverse();\n\t};\n\t\n\tvar getInnermostProperty = function getInnermostProperty(propsList, property) {\n\t    for (var i = propsList.length - 1; i >= 0; i--) {\n\t        var props = propsList[i];\n\t\n\t        if (props.hasOwnProperty(property)) {\n\t            return props[property];\n\t        }\n\t    }\n\t\n\t    return null;\n\t};\n\t\n\tvar reducePropsToState = function reducePropsToState(propsList) {\n\t    return {\n\t        baseTag: getBaseTagFromPropsList([_HelmetConstants.TAG_PROPERTIES.HREF], propsList),\n\t        bodyAttributes: getAttributesFromPropsList(_HelmetConstants.ATTRIBUTE_NAMES.BODY, propsList),\n\t        defer: getInnermostProperty(propsList, _HelmetConstants.HELMET_PROPS.DEFER),\n\t        encode: getInnermostProperty(propsList, _HelmetConstants.HELMET_PROPS.ENCODE_SPECIAL_CHARACTERS),\n\t        htmlAttributes: getAttributesFromPropsList(_HelmetConstants.ATTRIBUTE_NAMES.HTML, propsList),\n\t        linkTags: getTagsFromPropsList(_HelmetConstants.TAG_NAMES.LINK, [_HelmetConstants.TAG_PROPERTIES.REL, _HelmetConstants.TAG_PROPERTIES.HREF], propsList),\n\t        metaTags: getTagsFromPropsList(_HelmetConstants.TAG_NAMES.META, [_HelmetConstants.TAG_PROPERTIES.NAME, _HelmetConstants.TAG_PROPERTIES.CHARSET, _HelmetConstants.TAG_PROPERTIES.HTTPEQUIV, _HelmetConstants.TAG_PROPERTIES.PROPERTY, _HelmetConstants.TAG_PROPERTIES.ITEM_PROP], propsList),\n\t        noscriptTags: getTagsFromPropsList(_HelmetConstants.TAG_NAMES.NOSCRIPT, [_HelmetConstants.TAG_PROPERTIES.INNER_HTML], propsList),\n\t        onChangeClientState: getOnChangeClientState(propsList),\n\t        scriptTags: getTagsFromPropsList(_HelmetConstants.TAG_NAMES.SCRIPT, [_HelmetConstants.TAG_PROPERTIES.SRC, _HelmetConstants.TAG_PROPERTIES.INNER_HTML], propsList),\n\t        styleTags: getTagsFromPropsList(_HelmetConstants.TAG_NAMES.STYLE, [_HelmetConstants.TAG_PROPERTIES.CSS_TEXT], propsList),\n\t        title: getTitleFromPropsList(propsList),\n\t        titleAttributes: getAttributesFromPropsList(_HelmetConstants.ATTRIBUTE_NAMES.TITLE, propsList)\n\t    };\n\t};\n\t\n\tvar rafPolyfill = function () {\n\t    var clock = Date.now();\n\t\n\t    return function (callback) {\n\t        var currentTime = Date.now();\n\t\n\t        if (currentTime - clock > 16) {\n\t            clock = currentTime;\n\t            callback(currentTime);\n\t        } else {\n\t            setTimeout(function () {\n\t                rafPolyfill(callback);\n\t            }, 0);\n\t        }\n\t    };\n\t}();\n\t\n\tvar cafPolyfill = function cafPolyfill(id) {\n\t    return clearTimeout(id);\n\t};\n\t\n\tvar requestAnimationFrame = typeof window !== \"undefined\" ? window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || rafPolyfill : global.requestAnimationFrame || rafPolyfill;\n\t\n\tvar cancelAnimationFrame = typeof window !== \"undefined\" ? window.cancelAnimationFrame || window.webkitCancelAnimationFrame || window.mozCancelAnimationFrame || cafPolyfill : global.cancelAnimationFrame || cafPolyfill;\n\t\n\tvar warn = function warn(msg) {\n\t    return console && typeof console.warn === \"function\" && console.warn(msg);\n\t};\n\t\n\tvar _helmetCallback = null;\n\t\n\tvar handleClientStateChange = function handleClientStateChange(newState) {\n\t    if (_helmetCallback) {\n\t        cancelAnimationFrame(_helmetCallback);\n\t    }\n\t\n\t    if (newState.defer) {\n\t        _helmetCallback = requestAnimationFrame(function () {\n\t            commitTagChanges(newState, function () {\n\t                _helmetCallback = null;\n\t            });\n\t        });\n\t    } else {\n\t        commitTagChanges(newState);\n\t        _helmetCallback = null;\n\t    }\n\t};\n\t\n\tvar commitTagChanges = function commitTagChanges(newState, cb) {\n\t    var baseTag = newState.baseTag,\n\t        bodyAttributes = newState.bodyAttributes,\n\t        htmlAttributes = newState.htmlAttributes,\n\t        linkTags = newState.linkTags,\n\t        metaTags = newState.metaTags,\n\t        noscriptTags = newState.noscriptTags,\n\t        onChangeClientState = newState.onChangeClientState,\n\t        scriptTags = newState.scriptTags,\n\t        styleTags = newState.styleTags,\n\t        title = newState.title,\n\t        titleAttributes = newState.titleAttributes;\n\t\n\t    updateAttributes(_HelmetConstants.TAG_NAMES.BODY, bodyAttributes);\n\t    updateAttributes(_HelmetConstants.TAG_NAMES.HTML, htmlAttributes);\n\t\n\t    updateTitle(title, titleAttributes);\n\t\n\t    var tagUpdates = {\n\t        baseTag: updateTags(_HelmetConstants.TAG_NAMES.BASE, baseTag),\n\t        linkTags: updateTags(_HelmetConstants.TAG_NAMES.LINK, linkTags),\n\t        metaTags: updateTags(_HelmetConstants.TAG_NAMES.META, metaTags),\n\t        noscriptTags: updateTags(_HelmetConstants.TAG_NAMES.NOSCRIPT, noscriptTags),\n\t        scriptTags: updateTags(_HelmetConstants.TAG_NAMES.SCRIPT, scriptTags),\n\t        styleTags: updateTags(_HelmetConstants.TAG_NAMES.STYLE, styleTags)\n\t    };\n\t\n\t    var addedTags = {};\n\t    var removedTags = {};\n\t\n\t    Object.keys(tagUpdates).forEach(function (tagType) {\n\t        var _tagUpdates$tagType = tagUpdates[tagType],\n\t            newTags = _tagUpdates$tagType.newTags,\n\t            oldTags = _tagUpdates$tagType.oldTags;\n\t\n\t\n\t        if (newTags.length) {\n\t            addedTags[tagType] = newTags;\n\t        }\n\t        if (oldTags.length) {\n\t            removedTags[tagType] = tagUpdates[tagType].oldTags;\n\t        }\n\t    });\n\t\n\t    cb && cb();\n\t\n\t    onChangeClientState(newState, addedTags, removedTags);\n\t};\n\t\n\tvar flattenArray = function flattenArray(possibleArray) {\n\t    return Array.isArray(possibleArray) ? possibleArray.join(\"\") : possibleArray;\n\t};\n\t\n\tvar updateTitle = function updateTitle(title, attributes) {\n\t    if (typeof title !== \"undefined\" && document.title !== title) {\n\t        document.title = flattenArray(title);\n\t    }\n\t\n\t    updateAttributes(_HelmetConstants.TAG_NAMES.TITLE, attributes);\n\t};\n\t\n\tvar updateAttributes = function updateAttributes(tagName, attributes) {\n\t    var elementTag = document.getElementsByTagName(tagName)[0];\n\t\n\t    if (!elementTag) {\n\t        return;\n\t    }\n\t\n\t    var helmetAttributeString = elementTag.getAttribute(_HelmetConstants.HELMET_ATTRIBUTE);\n\t    var helmetAttributes = helmetAttributeString ? helmetAttributeString.split(\",\") : [];\n\t    var attributesToRemove = [].concat(helmetAttributes);\n\t    var attributeKeys = Object.keys(attributes);\n\t\n\t    for (var i = 0; i < attributeKeys.length; i++) {\n\t        var attribute = attributeKeys[i];\n\t        var value = attributes[attribute] || \"\";\n\t\n\t        if (elementTag.getAttribute(attribute) !== value) {\n\t            elementTag.setAttribute(attribute, value);\n\t        }\n\t\n\t        if (helmetAttributes.indexOf(attribute) === -1) {\n\t            helmetAttributes.push(attribute);\n\t        }\n\t\n\t        var indexToSave = attributesToRemove.indexOf(attribute);\n\t        if (indexToSave !== -1) {\n\t            attributesToRemove.splice(indexToSave, 1);\n\t        }\n\t    }\n\t\n\t    for (var _i = attributesToRemove.length - 1; _i >= 0; _i--) {\n\t        elementTag.removeAttribute(attributesToRemove[_i]);\n\t    }\n\t\n\t    if (helmetAttributes.length === attributesToRemove.length) {\n\t        elementTag.removeAttribute(_HelmetConstants.HELMET_ATTRIBUTE);\n\t    } else if (elementTag.getAttribute(_HelmetConstants.HELMET_ATTRIBUTE) !== attributeKeys.join(\",\")) {\n\t        elementTag.setAttribute(_HelmetConstants.HELMET_ATTRIBUTE, attributeKeys.join(\",\"));\n\t    }\n\t};\n\t\n\tvar updateTags = function updateTags(type, tags) {\n\t    var headElement = document.head || document.querySelector(_HelmetConstants.TAG_NAMES.HEAD);\n\t    var tagNodes = headElement.querySelectorAll(type + \"[\" + _HelmetConstants.HELMET_ATTRIBUTE + \"]\");\n\t    var oldTags = Array.prototype.slice.call(tagNodes);\n\t    var newTags = [];\n\t    var indexToDelete = void 0;\n\t\n\t    if (tags && tags.length) {\n\t        tags.forEach(function (tag) {\n\t            var newElement = document.createElement(type);\n\t\n\t            for (var attribute in tag) {\n\t                if (tag.hasOwnProperty(attribute)) {\n\t                    if (attribute === _HelmetConstants.TAG_PROPERTIES.INNER_HTML) {\n\t                        newElement.innerHTML = tag.innerHTML;\n\t                    } else if (attribute === _HelmetConstants.TAG_PROPERTIES.CSS_TEXT) {\n\t                        if (newElement.styleSheet) {\n\t                            newElement.styleSheet.cssText = tag.cssText;\n\t                        } else {\n\t                            newElement.appendChild(document.createTextNode(tag.cssText));\n\t                        }\n\t                    } else {\n\t                        var value = typeof tag[attribute] === \"undefined\" ? \"\" : tag[attribute];\n\t                        newElement.setAttribute(attribute, value);\n\t                    }\n\t                }\n\t            }\n\t\n\t            newElement.setAttribute(_HelmetConstants.HELMET_ATTRIBUTE, \"true\");\n\t\n\t            // Remove a duplicate tag from domTagstoRemove, so it isn't cleared.\n\t            if (oldTags.some(function (existingTag, index) {\n\t                indexToDelete = index;\n\t                return newElement.isEqualNode(existingTag);\n\t            })) {\n\t                oldTags.splice(indexToDelete, 1);\n\t            } else {\n\t                newTags.push(newElement);\n\t            }\n\t        });\n\t    }\n\t\n\t    oldTags.forEach(function (tag) {\n\t        return tag.parentNode.removeChild(tag);\n\t    });\n\t    newTags.forEach(function (tag) {\n\t        return headElement.appendChild(tag);\n\t    });\n\t\n\t    return {\n\t        oldTags: oldTags,\n\t        newTags: newTags\n\t    };\n\t};\n\t\n\tvar generateElementAttributesAsString = function generateElementAttributesAsString(attributes) {\n\t    return Object.keys(attributes).reduce(function (str, key) {\n\t        var attr = typeof attributes[key] !== \"undefined\" ? key + \"=\\\"\" + attributes[key] + \"\\\"\" : \"\" + key;\n\t        return str ? str + \" \" + attr : attr;\n\t    }, \"\");\n\t};\n\t\n\tvar generateTitleAsString = function generateTitleAsString(type, title, attributes, encode) {\n\t    var attributeString = generateElementAttributesAsString(attributes);\n\t    var flattenedTitle = flattenArray(title);\n\t    return attributeString ? \"<\" + type + \" \" + _HelmetConstants.HELMET_ATTRIBUTE + \"=\\\"true\\\" \" + attributeString + \">\" + encodeSpecialCharacters(flattenedTitle, encode) + \"</\" + type + \">\" : \"<\" + type + \" \" + _HelmetConstants.HELMET_ATTRIBUTE + \"=\\\"true\\\">\" + encodeSpecialCharacters(flattenedTitle, encode) + \"</\" + type + \">\";\n\t};\n\t\n\tvar generateTagsAsString = function generateTagsAsString(type, tags, encode) {\n\t    return tags.reduce(function (str, tag) {\n\t        var attributeHtml = Object.keys(tag).filter(function (attribute) {\n\t            return !(attribute === _HelmetConstants.TAG_PROPERTIES.INNER_HTML || attribute === _HelmetConstants.TAG_PROPERTIES.CSS_TEXT);\n\t        }).reduce(function (string, attribute) {\n\t            var attr = typeof tag[attribute] === \"undefined\" ? attribute : attribute + \"=\\\"\" + encodeSpecialCharacters(tag[attribute], encode) + \"\\\"\";\n\t            return string ? string + \" \" + attr : attr;\n\t        }, \"\");\n\t\n\t        var tagContent = tag.innerHTML || tag.cssText || \"\";\n\t\n\t        var isSelfClosing = _HelmetConstants.SELF_CLOSING_TAGS.indexOf(type) === -1;\n\t\n\t        return str + \"<\" + type + \" \" + _HelmetConstants.HELMET_ATTRIBUTE + \"=\\\"true\\\" \" + attributeHtml + (isSelfClosing ? \"/>\" : \">\" + tagContent + \"</\" + type + \">\");\n\t    }, \"\");\n\t};\n\t\n\tvar convertElementAttributestoReactProps = function convertElementAttributestoReactProps(attributes) {\n\t    var initProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t    return Object.keys(attributes).reduce(function (obj, key) {\n\t        obj[_HelmetConstants.REACT_TAG_MAP[key] || key] = attributes[key];\n\t        return obj;\n\t    }, initProps);\n\t};\n\t\n\tvar convertReactPropstoHtmlAttributes = function convertReactPropstoHtmlAttributes(props) {\n\t    var initAttributes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t    return Object.keys(props).reduce(function (obj, key) {\n\t        obj[_HelmetConstants.HTML_TAG_MAP[key] || key] = props[key];\n\t        return obj;\n\t    }, initAttributes);\n\t};\n\t\n\tvar generateTitleAsReactComponent = function generateTitleAsReactComponent(type, title, attributes) {\n\t    var _initProps;\n\t\n\t    // assigning into an array to define toString function on it\n\t    var initProps = (_initProps = {\n\t        key: title\n\t    }, _initProps[_HelmetConstants.HELMET_ATTRIBUTE] = true, _initProps);\n\t    var props = convertElementAttributestoReactProps(attributes, initProps);\n\t\n\t    return [_react2.default.createElement(_HelmetConstants.TAG_NAMES.TITLE, props, title)];\n\t};\n\t\n\tvar generateTagsAsReactComponent = function generateTagsAsReactComponent(type, tags) {\n\t    return tags.map(function (tag, i) {\n\t        var _mappedTag;\n\t\n\t        var mappedTag = (_mappedTag = {\n\t            key: i\n\t        }, _mappedTag[_HelmetConstants.HELMET_ATTRIBUTE] = true, _mappedTag);\n\t\n\t        Object.keys(tag).forEach(function (attribute) {\n\t            var mappedAttribute = _HelmetConstants.REACT_TAG_MAP[attribute] || attribute;\n\t\n\t            if (mappedAttribute === _HelmetConstants.TAG_PROPERTIES.INNER_HTML || mappedAttribute === _HelmetConstants.TAG_PROPERTIES.CSS_TEXT) {\n\t                var content = tag.innerHTML || tag.cssText;\n\t                mappedTag.dangerouslySetInnerHTML = { __html: content };\n\t            } else {\n\t                mappedTag[mappedAttribute] = tag[attribute];\n\t            }\n\t        });\n\t\n\t        return _react2.default.createElement(type, mappedTag);\n\t    });\n\t};\n\t\n\tvar getMethodsForTag = function getMethodsForTag(type, tags, encode) {\n\t    switch (type) {\n\t        case _HelmetConstants.TAG_NAMES.TITLE:\n\t            return {\n\t                toComponent: function toComponent() {\n\t                    return generateTitleAsReactComponent(type, tags.title, tags.titleAttributes, encode);\n\t                },\n\t                toString: function toString() {\n\t                    return generateTitleAsString(type, tags.title, tags.titleAttributes, encode);\n\t                }\n\t            };\n\t        case _HelmetConstants.ATTRIBUTE_NAMES.BODY:\n\t        case _HelmetConstants.ATTRIBUTE_NAMES.HTML:\n\t            return {\n\t                toComponent: function toComponent() {\n\t                    return convertElementAttributestoReactProps(tags);\n\t                },\n\t                toString: function toString() {\n\t                    return generateElementAttributesAsString(tags);\n\t                }\n\t            };\n\t        default:\n\t            return {\n\t                toComponent: function toComponent() {\n\t                    return generateTagsAsReactComponent(type, tags);\n\t                },\n\t                toString: function toString() {\n\t                    return generateTagsAsString(type, tags, encode);\n\t                }\n\t            };\n\t    }\n\t};\n\t\n\tvar mapStateOnServer = function mapStateOnServer(_ref) {\n\t    var baseTag = _ref.baseTag,\n\t        bodyAttributes = _ref.bodyAttributes,\n\t        encode = _ref.encode,\n\t        htmlAttributes = _ref.htmlAttributes,\n\t        linkTags = _ref.linkTags,\n\t        metaTags = _ref.metaTags,\n\t        noscriptTags = _ref.noscriptTags,\n\t        scriptTags = _ref.scriptTags,\n\t        styleTags = _ref.styleTags,\n\t        _ref$title = _ref.title,\n\t        title = _ref$title === undefined ? \"\" : _ref$title,\n\t        titleAttributes = _ref.titleAttributes;\n\t    return {\n\t        base: getMethodsForTag(_HelmetConstants.TAG_NAMES.BASE, baseTag, encode),\n\t        bodyAttributes: getMethodsForTag(_HelmetConstants.ATTRIBUTE_NAMES.BODY, bodyAttributes, encode),\n\t        htmlAttributes: getMethodsForTag(_HelmetConstants.ATTRIBUTE_NAMES.HTML, htmlAttributes, encode),\n\t        link: getMethodsForTag(_HelmetConstants.TAG_NAMES.LINK, linkTags, encode),\n\t        meta: getMethodsForTag(_HelmetConstants.TAG_NAMES.META, metaTags, encode),\n\t        noscript: getMethodsForTag(_HelmetConstants.TAG_NAMES.NOSCRIPT, noscriptTags, encode),\n\t        script: getMethodsForTag(_HelmetConstants.TAG_NAMES.SCRIPT, scriptTags, encode),\n\t        style: getMethodsForTag(_HelmetConstants.TAG_NAMES.STYLE, styleTags, encode),\n\t        title: getMethodsForTag(_HelmetConstants.TAG_NAMES.TITLE, { title: title, titleAttributes: titleAttributes }, encode)\n\t    };\n\t};\n\t\n\texports.convertReactPropstoHtmlAttributes = convertReactPropstoHtmlAttributes;\n\texports.handleClientStateChange = handleClientStateChange;\n\texports.mapStateOnServer = mapStateOnServer;\n\texports.reducePropsToState = reducePropsToState;\n\texports.requestAnimationFrame = requestAnimationFrame;\n\texports.warn = warn;\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n\n/***/ 423:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _exenv = __webpack_require__(293);\n\t\n\tvar _exenv2 = _interopRequireDefault(_exenv);\n\t\n\tvar _shallowequal = __webpack_require__(440);\n\t\n\tvar _shallowequal2 = _interopRequireDefault(_shallowequal);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tmodule.exports = function withSideEffect(reducePropsToState, handleStateChangeOnClient, mapStateOnServer) {\n\t  if (typeof reducePropsToState !== 'function') {\n\t    throw new Error('Expected reducePropsToState to be a function.');\n\t  }\n\t  if (typeof handleStateChangeOnClient !== 'function') {\n\t    throw new Error('Expected handleStateChangeOnClient to be a function.');\n\t  }\n\t  if (typeof mapStateOnServer !== 'undefined' && typeof mapStateOnServer !== 'function') {\n\t    throw new Error('Expected mapStateOnServer to either be undefined or a function.');\n\t  }\n\t\n\t  function getDisplayName(WrappedComponent) {\n\t    return WrappedComponent.displayName || WrappedComponent.name || 'Component';\n\t  }\n\t\n\t  return function wrap(WrappedComponent) {\n\t    if (typeof WrappedComponent !== 'function') {\n\t      throw new Error('Expected WrappedComponent to be a React component.');\n\t    }\n\t\n\t    var mountedInstances = [];\n\t    var state = void 0;\n\t\n\t    function emitChange() {\n\t      state = reducePropsToState(mountedInstances.map(function (instance) {\n\t        return instance.props;\n\t      }));\n\t\n\t      if (SideEffect.canUseDOM) {\n\t        handleStateChangeOnClient(state);\n\t      } else if (mapStateOnServer) {\n\t        state = mapStateOnServer(state);\n\t      }\n\t    }\n\t\n\t    var SideEffect = function (_Component) {\n\t      _inherits(SideEffect, _Component);\n\t\n\t      function SideEffect() {\n\t        _classCallCheck(this, SideEffect);\n\t\n\t        return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n\t      }\n\t\n\t      // Try to use displayName of wrapped component\n\t      SideEffect.peek = function peek() {\n\t        return state;\n\t      };\n\t\n\t      // Expose canUseDOM so tests can monkeypatch it\n\t\n\t\n\t      SideEffect.rewind = function rewind() {\n\t        if (SideEffect.canUseDOM) {\n\t          throw new Error('You may only call rewind() on the server. Call peek() to read the current state.');\n\t        }\n\t\n\t        var recordedState = state;\n\t        state = undefined;\n\t        mountedInstances = [];\n\t        return recordedState;\n\t      };\n\t\n\t      SideEffect.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n\t        return !(0, _shallowequal2.default)(nextProps, this.props);\n\t      };\n\t\n\t      SideEffect.prototype.componentWillMount = function componentWillMount() {\n\t        mountedInstances.push(this);\n\t        emitChange();\n\t      };\n\t\n\t      SideEffect.prototype.componentDidUpdate = function componentDidUpdate() {\n\t        emitChange();\n\t      };\n\t\n\t      SideEffect.prototype.componentWillUnmount = function componentWillUnmount() {\n\t        var index = mountedInstances.indexOf(this);\n\t        mountedInstances.splice(index, 1);\n\t        emitChange();\n\t      };\n\t\n\t      SideEffect.prototype.render = function render() {\n\t        return _react2.default.createElement(WrappedComponent, this.props);\n\t      };\n\t\n\t      return SideEffect;\n\t    }(_react.Component);\n\t\n\t    SideEffect.displayName = 'SideEffect(' + getDisplayName(WrappedComponent) + ')';\n\t    SideEffect.canUseDOM = _exenv2.default.canUseDOM;\n\t\n\t\n\t    return SideEffect;\n\t  };\n\t};\n\n/***/ }),\n\n/***/ 440:\n/***/ (function(module, exports) {\n\n\tmodule.exports = function shallowEqual(objA, objB, compare, compareContext) {\n\t\n\t    var ret = compare ? compare.call(compareContext, objA, objB) : void 0;\n\t\n\t    if(ret !== void 0) {\n\t        return !!ret;\n\t    }\n\t\n\t    if(objA === objB) {\n\t        return true;\n\t    }\n\t\n\t    if(typeof objA !== 'object' || !objA ||\n\t       typeof objB !== 'object' || !objB) {\n\t        return false;\n\t    }\n\t\n\t    var keysA = Object.keys(objA);\n\t    var keysB = Object.keys(objB);\n\t\n\t    if(keysA.length !== keysB.length) {\n\t        return false;\n\t    }\n\t\n\t    var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB);\n\t\n\t    // Test for A's keys different from B.\n\t    for(var idx = 0; idx < keysA.length; idx++) {\n\t\n\t        var key = keysA[idx];\n\t\n\t        if(!bHasOwnProperty(key)) {\n\t            return false;\n\t        }\n\t\n\t        var valueA = objA[key];\n\t        var valueB = objB[key];\n\t\n\t        ret = compare ? compare.call(compareContext, valueA, valueB, key) : void 0;\n\t\n\t        if(ret === false ||\n\t           ret === void 0 && valueA !== valueB) {\n\t            return false;\n\t        }\n\t\n\t    }\n\t\n\t    return true;\n\t\n\t};\n\n\n/***/ }),\n\n/***/ 441:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/*!\n\t* svg.js - A lightweight library for manipulating and animating SVG.\n\t* @version 2.6.4\n\t* https://svgdotjs.github.io/\n\t*\n\t* @copyright Wout Fierens <wout@mick-wout.com>\n\t* @license MIT\n\t*\n\t* BUILT: Wed Feb 07 2018 22:59:25 GMT+0100 (Mitteleuropäische Zeit)\n\t*/;\n\t(function(root, factory) {\r\n\t  /* istanbul ignore next */\r\n\t  if (true) {\r\n\t    !(__WEBPACK_AMD_DEFINE_RESULT__ = function(){\r\n\t      return factory(root, root.document)\r\n\t    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\r\n\t  } else if (typeof exports === 'object') {\r\n\t    module.exports = root.document ? factory(root, root.document) : function(w){ return factory(w, w.document) }\r\n\t  } else {\r\n\t    root.SVG = factory(root, root.document)\r\n\t  }\r\n\t}(typeof window !== \"undefined\" ? window : this, function(window, document) {\r\n\t\r\n\t// The main wrapping element\r\n\tvar SVG = this.SVG = function(element) {\r\n\t  if (SVG.supported) {\r\n\t    element = new SVG.Doc(element)\r\n\t\r\n\t    if(!SVG.parser.draw)\r\n\t      SVG.prepare()\r\n\t\r\n\t    return element\r\n\t  }\r\n\t}\r\n\t\r\n\t// Default namespaces\r\n\tSVG.ns    = 'http://www.w3.org/2000/svg'\r\n\tSVG.xmlns = 'http://www.w3.org/2000/xmlns/'\r\n\tSVG.xlink = 'http://www.w3.org/1999/xlink'\r\n\tSVG.svgjs = 'http://svgjs.com/svgjs'\r\n\t\r\n\t// Svg support test\r\n\tSVG.supported = (function() {\r\n\t  return !! document.createElementNS &&\r\n\t         !! document.createElementNS(SVG.ns,'svg').createSVGRect\r\n\t})()\r\n\t\r\n\t// Don't bother to continue if SVG is not supported\r\n\tif (!SVG.supported) return false\r\n\t\r\n\t// Element id sequence\r\n\tSVG.did  = 1000\r\n\t\r\n\t// Get next named element id\r\n\tSVG.eid = function(name) {\r\n\t  return 'Svgjs' + capitalize(name) + (SVG.did++)\r\n\t}\r\n\t\r\n\t// Method for element creation\r\n\tSVG.create = function(name) {\r\n\t  // create element\r\n\t  var element = document.createElementNS(this.ns, name)\r\n\t\r\n\t  // apply unique id\r\n\t  element.setAttribute('id', this.eid(name))\r\n\t\r\n\t  return element\r\n\t}\r\n\t\r\n\t// Method for extending objects\r\n\tSVG.extend = function() {\r\n\t  var modules, methods, key, i\r\n\t\r\n\t  // Get list of modules\r\n\t  modules = [].slice.call(arguments)\r\n\t\r\n\t  // Get object with extensions\r\n\t  methods = modules.pop()\r\n\t\r\n\t  for (i = modules.length - 1; i >= 0; i--)\r\n\t    if (modules[i])\r\n\t      for (key in methods)\r\n\t        modules[i].prototype[key] = methods[key]\r\n\t\r\n\t  // Make sure SVG.Set inherits any newly added methods\r\n\t  if (SVG.Set && SVG.Set.inherit)\r\n\t    SVG.Set.inherit()\r\n\t}\r\n\t\r\n\t// Invent new element\r\n\tSVG.invent = function(config) {\r\n\t  // Create element initializer\r\n\t  var initializer = typeof config.create == 'function' ?\r\n\t    config.create :\r\n\t    function() {\r\n\t      this.constructor.call(this, SVG.create(config.create))\r\n\t    }\r\n\t\r\n\t  // Inherit prototype\r\n\t  if (config.inherit)\r\n\t    initializer.prototype = new config.inherit\r\n\t\r\n\t  // Extend with methods\r\n\t  if (config.extend)\r\n\t    SVG.extend(initializer, config.extend)\r\n\t\r\n\t  // Attach construct method to parent\r\n\t  if (config.construct)\r\n\t    SVG.extend(config.parent || SVG.Container, config.construct)\r\n\t\r\n\t  return initializer\r\n\t}\r\n\t\r\n\t// Adopt existing svg elements\r\n\tSVG.adopt = function(node) {\r\n\t  // check for presence of node\r\n\t  if (!node) return null\r\n\t\r\n\t  // make sure a node isn't already adopted\r\n\t  if (node.instance) return node.instance\r\n\t\r\n\t  // initialize variables\r\n\t  var element\r\n\t\r\n\t  // adopt with element-specific settings\r\n\t  if (node.nodeName == 'svg')\r\n\t    element = node.parentNode instanceof window.SVGElement ? new SVG.Nested : new SVG.Doc\r\n\t  else if (node.nodeName == 'linearGradient')\r\n\t    element = new SVG.Gradient('linear')\r\n\t  else if (node.nodeName == 'radialGradient')\r\n\t    element = new SVG.Gradient('radial')\r\n\t  else if (SVG[capitalize(node.nodeName)])\r\n\t    element = new SVG[capitalize(node.nodeName)]\r\n\t  else\r\n\t    element = new SVG.Element(node)\r\n\t\r\n\t  // ensure references\r\n\t  element.type  = node.nodeName\r\n\t  element.node  = node\r\n\t  node.instance = element\r\n\t\r\n\t  // SVG.Class specific preparations\r\n\t  if (element instanceof SVG.Doc)\r\n\t    element.namespace().defs()\r\n\t\r\n\t  // pull svgjs data from the dom (getAttributeNS doesn't work in html5)\r\n\t  element.setData(JSON.parse(node.getAttribute('svgjs:data')) || {})\r\n\t\r\n\t  return element\r\n\t}\r\n\t\r\n\t// Initialize parsing element\r\n\tSVG.prepare = function() {\r\n\t  // Select document body and create invisible svg element\r\n\t  var body = document.getElementsByTagName('body')[0]\r\n\t    , draw = (body ? new SVG.Doc(body) : SVG.adopt(document.documentElement).nested()).size(2, 0)\r\n\t\r\n\t  // Create parser object\r\n\t  SVG.parser = {\r\n\t    body: body || document.documentElement\r\n\t  , draw: draw.style('opacity:0;position:absolute;left:-100%;top:-100%;overflow:hidden').node\r\n\t  , poly: draw.polyline().node\r\n\t  , path: draw.path().node\r\n\t  , native: SVG.create('svg')\r\n\t  }\r\n\t}\r\n\t\r\n\tSVG.parser = {\r\n\t  native: SVG.create('svg')\r\n\t}\r\n\t\r\n\tdocument.addEventListener('DOMContentLoaded', function() {\r\n\t  if(!SVG.parser.draw)\r\n\t    SVG.prepare()\r\n\t}, false)\r\n\t\n\t// Storage for regular expressions\r\n\tSVG.regex = {\r\n\t  // Parse unit value\r\n\t  numberAndUnit:    /^([+-]?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?)([a-z%]*)$/i\r\n\t\r\n\t  // Parse hex value\r\n\t, hex:              /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i\r\n\t\r\n\t  // Parse rgb value\r\n\t, rgb:              /rgb\\((\\d+),(\\d+),(\\d+)\\)/\r\n\t\r\n\t  // Parse reference id\r\n\t, reference:        /#([a-z0-9\\-_]+)/i\r\n\t\r\n\t  // splits a transformation chain\r\n\t, transforms:       /\\)\\s*,?\\s*/\r\n\t\r\n\t  // Whitespace\r\n\t, whitespace:       /\\s/g\r\n\t\r\n\t  // Test hex value\r\n\t, isHex:            /^#[a-f0-9]{3,6}$/i\r\n\t\r\n\t  // Test rgb value\r\n\t, isRgb:            /^rgb\\(/\r\n\t\r\n\t  // Test css declaration\r\n\t, isCss:            /[^:]+:[^;]+;?/\r\n\t\r\n\t  // Test for blank string\r\n\t, isBlank:          /^(\\s+)?$/\r\n\t\r\n\t  // Test for numeric string\r\n\t, isNumber:         /^[+-]?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i\r\n\t\r\n\t  // Test for percent value\r\n\t, isPercent:        /^-?[\\d\\.]+%$/\r\n\t\r\n\t  // Test for image url\r\n\t, isImage:          /\\.(jpg|jpeg|png|gif|svg)(\\?[^=]+.*)?/i\r\n\t\r\n\t  // split at whitespace and comma\r\n\t, delimiter:        /[\\s,]+/\r\n\t\r\n\t  // The following regex are used to parse the d attribute of a path\r\n\t\r\n\t  // Matches all hyphens which are not after an exponent\r\n\t, hyphen:           /([^e])\\-/gi\r\n\t\r\n\t  // Replaces and tests for all path letters\r\n\t, pathLetters:      /[MLHVCSQTAZ]/gi\r\n\t\r\n\t  // yes we need this one, too\r\n\t, isPathLetter:     /[MLHVCSQTAZ]/i\r\n\t\r\n\t  // matches 0.154.23.45\r\n\t, numbersWithDots:  /((\\d?\\.\\d+(?:e[+-]?\\d+)?)((?:\\.\\d+(?:e[+-]?\\d+)?)+))+/gi\r\n\t\r\n\t  // matches .\r\n\t, dots:             /\\./g\r\n\t}\r\n\t\n\tSVG.utils = {\r\n\t  // Map function\r\n\t  map: function(array, block) {\r\n\t    var i\r\n\t      , il = array.length\r\n\t      , result = []\r\n\t\r\n\t    for (i = 0; i < il; i++)\r\n\t      result.push(block(array[i]))\r\n\t\r\n\t    return result\r\n\t  }\r\n\t\r\n\t  // Filter function\r\n\t, filter: function(array, block) {\r\n\t    var i\r\n\t      , il = array.length\r\n\t      , result = []\r\n\t\r\n\t    for (i = 0; i < il; i++)\r\n\t      if (block(array[i]))\r\n\t        result.push(array[i])\r\n\t\r\n\t    return result\r\n\t  }\r\n\t\r\n\t  // Degrees to radians\r\n\t, radians: function(d) {\r\n\t    return d % 360 * Math.PI / 180\r\n\t  }\r\n\t\r\n\t  // Radians to degrees\r\n\t, degrees: function(r) {\r\n\t    return r * 180 / Math.PI % 360\r\n\t  }\r\n\t\r\n\t, filterSVGElements: function(nodes) {\r\n\t    return this.filter( nodes, function(el) { return el instanceof window.SVGElement })\r\n\t  }\r\n\t\r\n\t}\n\t\r\n\tSVG.defaults = {\r\n\t  // Default attribute values\r\n\t  attrs: {\r\n\t    // fill and stroke\r\n\t    'fill-opacity':     1\r\n\t  , 'stroke-opacity':   1\r\n\t  , 'stroke-width':     0\r\n\t  , 'stroke-linejoin':  'miter'\r\n\t  , 'stroke-linecap':   'butt'\r\n\t  , fill:               '#000000'\r\n\t  , stroke:             '#000000'\r\n\t  , opacity:            1\r\n\t    // position\r\n\t  , x:                  0\r\n\t  , y:                  0\r\n\t  , cx:                 0\r\n\t  , cy:                 0\r\n\t    // size\r\n\t  , width:              0\r\n\t  , height:             0\r\n\t    // radius\r\n\t  , r:                  0\r\n\t  , rx:                 0\r\n\t  , ry:                 0\r\n\t    // gradient\r\n\t  , offset:             0\r\n\t  , 'stop-opacity':     1\r\n\t  , 'stop-color':       '#000000'\r\n\t    // text\r\n\t  , 'font-size':        16\r\n\t  , 'font-family':      'Helvetica, Arial, sans-serif'\r\n\t  , 'text-anchor':      'start'\r\n\t  }\r\n\t\r\n\t}\n\t// Module for color convertions\r\n\tSVG.Color = function(color) {\r\n\t  var match\r\n\t\r\n\t  // initialize defaults\r\n\t  this.r = 0\r\n\t  this.g = 0\r\n\t  this.b = 0\r\n\t\r\n\t  if(!color) return\r\n\t\r\n\t  // parse color\r\n\t  if (typeof color === 'string') {\r\n\t    if (SVG.regex.isRgb.test(color)) {\r\n\t      // get rgb values\r\n\t      match = SVG.regex.rgb.exec(color.replace(SVG.regex.whitespace,''))\r\n\t\r\n\t      // parse numeric values\r\n\t      this.r = parseInt(match[1])\r\n\t      this.g = parseInt(match[2])\r\n\t      this.b = parseInt(match[3])\r\n\t\r\n\t    } else if (SVG.regex.isHex.test(color)) {\r\n\t      // get hex values\r\n\t      match = SVG.regex.hex.exec(fullHex(color))\r\n\t\r\n\t      // parse numeric values\r\n\t      this.r = parseInt(match[1], 16)\r\n\t      this.g = parseInt(match[2], 16)\r\n\t      this.b = parseInt(match[3], 16)\r\n\t\r\n\t    }\r\n\t\r\n\t  } else if (typeof color === 'object') {\r\n\t    this.r = color.r\r\n\t    this.g = color.g\r\n\t    this.b = color.b\r\n\t\r\n\t  }\r\n\t\r\n\t}\r\n\t\r\n\tSVG.extend(SVG.Color, {\r\n\t  // Default to hex conversion\r\n\t  toString: function() {\r\n\t    return this.toHex()\r\n\t  }\r\n\t  // Build hex value\r\n\t, toHex: function() {\r\n\t    return '#'\r\n\t      + compToHex(this.r)\r\n\t      + compToHex(this.g)\r\n\t      + compToHex(this.b)\r\n\t  }\r\n\t  // Build rgb value\r\n\t, toRgb: function() {\r\n\t    return 'rgb(' + [this.r, this.g, this.b].join() + ')'\r\n\t  }\r\n\t  // Calculate true brightness\r\n\t, brightness: function() {\r\n\t    return (this.r / 255 * 0.30)\r\n\t         + (this.g / 255 * 0.59)\r\n\t         + (this.b / 255 * 0.11)\r\n\t  }\r\n\t  // Make color morphable\r\n\t, morph: function(color) {\r\n\t    this.destination = new SVG.Color(color)\r\n\t\r\n\t    return this\r\n\t  }\r\n\t  // Get morphed color at given position\r\n\t, at: function(pos) {\r\n\t    // make sure a destination is defined\r\n\t    if (!this.destination) return this\r\n\t\r\n\t    // normalise pos\r\n\t    pos = pos < 0 ? 0 : pos > 1 ? 1 : pos\r\n\t\r\n\t    // generate morphed color\r\n\t    return new SVG.Color({\r\n\t      r: ~~(this.r + (this.destination.r - this.r) * pos)\r\n\t    , g: ~~(this.g + (this.destination.g - this.g) * pos)\r\n\t    , b: ~~(this.b + (this.destination.b - this.b) * pos)\r\n\t    })\r\n\t  }\r\n\t\r\n\t})\r\n\t\r\n\t// Testers\r\n\t\r\n\t// Test if given value is a color string\r\n\tSVG.Color.test = function(color) {\r\n\t  color += ''\r\n\t  return SVG.regex.isHex.test(color)\r\n\t      || SVG.regex.isRgb.test(color)\r\n\t}\r\n\t\r\n\t// Test if given value is a rgb object\r\n\tSVG.Color.isRgb = function(color) {\r\n\t  return color && typeof color.r == 'number'\r\n\t               && typeof color.g == 'number'\r\n\t               && typeof color.b == 'number'\r\n\t}\r\n\t\r\n\t// Test if given value is a color\r\n\tSVG.Color.isColor = function(color) {\r\n\t  return SVG.Color.isRgb(color) || SVG.Color.test(color)\r\n\t}\n\t// Module for array conversion\r\n\tSVG.Array = function(array, fallback) {\r\n\t  array = (array || []).valueOf()\r\n\t\r\n\t  // if array is empty and fallback is provided, use fallback\r\n\t  if (array.length == 0 && fallback)\r\n\t    array = fallback.valueOf()\r\n\t\r\n\t  // parse array\r\n\t  this.value = this.parse(array)\r\n\t}\r\n\t\r\n\tSVG.extend(SVG.Array, {\r\n\t  // Make array morphable\r\n\t  morph: function(array) {\r\n\t    this.destination = this.parse(array)\r\n\t\r\n\t    // normalize length of arrays\r\n\t    if (this.value.length != this.destination.length) {\r\n\t      var lastValue       = this.value[this.value.length - 1]\r\n\t        , lastDestination = this.destination[this.destination.length - 1]\r\n\t\r\n\t      while(this.value.length > this.destination.length)\r\n\t        this.destination.push(lastDestination)\r\n\t      while(this.value.length < this.destination.length)\r\n\t        this.value.push(lastValue)\r\n\t    }\r\n\t\r\n\t    return this\r\n\t  }\r\n\t  // Clean up any duplicate points\r\n\t, settle: function() {\r\n\t    // find all unique values\r\n\t    for (var i = 0, il = this.value.length, seen = []; i < il; i++)\r\n\t      if (seen.indexOf(this.value[i]) == -1)\r\n\t        seen.push(this.value[i])\r\n\t\r\n\t    // set new value\r\n\t    return this.value = seen\r\n\t  }\r\n\t  // Get morphed array at given position\r\n\t, at: function(pos) {\r\n\t    // make sure a destination is defined\r\n\t    if (!this.destination) return this\r\n\t\r\n\t    // generate morphed array\r\n\t    for (var i = 0, il = this.value.length, array = []; i < il; i++)\r\n\t      array.push(this.value[i] + (this.destination[i] - this.value[i]) * pos)\r\n\t\r\n\t    return new SVG.Array(array)\r\n\t  }\r\n\t  // Convert array to string\r\n\t, toString: function() {\r\n\t    return this.value.join(' ')\r\n\t  }\r\n\t  // Real value\r\n\t, valueOf: function() {\r\n\t    return this.value\r\n\t  }\r\n\t  // Parse whitespace separated string\r\n\t, parse: function(array) {\r\n\t    array = array.valueOf()\r\n\t\r\n\t    // if already is an array, no need to parse it\r\n\t    if (Array.isArray(array)) return array\r\n\t\r\n\t    return this.split(array)\r\n\t  }\r\n\t  // Strip unnecessary whitespace\r\n\t, split: function(string) {\r\n\t    return string.trim().split(SVG.regex.delimiter).map(parseFloat)\r\n\t  }\r\n\t  // Reverse array\r\n\t, reverse: function() {\r\n\t    this.value.reverse()\r\n\t\r\n\t    return this\r\n\t  }\r\n\t, clone: function() {\r\n\t    var clone = new this.constructor()\r\n\t    clone.value = array_clone(this.value)\r\n\t    return clone\r\n\t  }\r\n\t})\n\t// Poly points array\r\n\tSVG.PointArray = function(array, fallback) {\r\n\t  SVG.Array.call(this, array, fallback || [[0,0]])\r\n\t}\r\n\t\r\n\t// Inherit from SVG.Array\r\n\tSVG.PointArray.prototype = new SVG.Array\r\n\tSVG.PointArray.prototype.constructor = SVG.PointArray\r\n\t\r\n\tSVG.extend(SVG.PointArray, {\r\n\t  // Convert array to string\r\n\t  toString: function() {\r\n\t    // convert to a poly point string\r\n\t    for (var i = 0, il = this.value.length, array = []; i < il; i++)\r\n\t      array.push(this.value[i].join(','))\r\n\t\r\n\t    return array.join(' ')\r\n\t  }\r\n\t  // Convert array to line object\r\n\t, toLine: function() {\r\n\t    return {\r\n\t      x1: this.value[0][0]\r\n\t    , y1: this.value[0][1]\r\n\t    , x2: this.value[1][0]\r\n\t    , y2: this.value[1][1]\r\n\t    }\r\n\t  }\r\n\t  // Get morphed array at given position\r\n\t, at: function(pos) {\r\n\t    // make sure a destination is defined\r\n\t    if (!this.destination) return this\r\n\t\r\n\t    // generate morphed point string\r\n\t    for (var i = 0, il = this.value.length, array = []; i < il; i++)\r\n\t      array.push([\r\n\t        this.value[i][0] + (this.destination[i][0] - this.value[i][0]) * pos\r\n\t      , this.value[i][1] + (this.destination[i][1] - this.value[i][1]) * pos\r\n\t      ])\r\n\t\r\n\t    return new SVG.PointArray(array)\r\n\t  }\r\n\t  // Parse point string and flat array\r\n\t, parse: function(array) {\r\n\t    var points = []\r\n\t\r\n\t    array = array.valueOf()\r\n\t\r\n\t    // if it is an array\r\n\t    if (Array.isArray(array)) {\r\n\t      // and it is not flat, there is no need to parse it\r\n\t      if(Array.isArray(array[0])) {\r\n\t        return array\r\n\t      }\r\n\t    } else { // Else, it is considered as a string\r\n\t      // parse points\r\n\t      array = array.trim().split(SVG.regex.delimiter).map(parseFloat)\r\n\t    }\r\n\t\r\n\t    // validate points - https://svgwg.org/svg2-draft/shapes.html#DataTypePoints\r\n\t    // Odd number of coordinates is an error. In such cases, drop the last odd coordinate.\r\n\t    if (array.length % 2 !== 0) array.pop()\r\n\t\r\n\t    // wrap points in two-tuples and parse points as floats\r\n\t    for(var i = 0, len = array.length; i < len; i = i + 2)\r\n\t      points.push([ array[i], array[i+1] ])\r\n\t\r\n\t    return points\r\n\t  }\r\n\t  // Move point string\r\n\t, move: function(x, y) {\r\n\t    var box = this.bbox()\r\n\t\r\n\t    // get relative offset\r\n\t    x -= box.x\r\n\t    y -= box.y\r\n\t\r\n\t    // move every point\r\n\t    if (!isNaN(x) && !isNaN(y))\r\n\t      for (var i = this.value.length - 1; i >= 0; i--)\r\n\t        this.value[i] = [this.value[i][0] + x, this.value[i][1] + y]\r\n\t\r\n\t    return this\r\n\t  }\r\n\t  // Resize poly string\r\n\t, size: function(width, height) {\r\n\t    var i, box = this.bbox()\r\n\t\r\n\t    // recalculate position of all points according to new size\r\n\t    for (i = this.value.length - 1; i >= 0; i--) {\r\n\t      if(box.width) this.value[i][0] = ((this.value[i][0] - box.x) * width)  / box.width  + box.x\r\n\t      if(box.height) this.value[i][1] = ((this.value[i][1] - box.y) * height) / box.height + box.y\r\n\t    }\r\n\t\r\n\t    return this\r\n\t  }\r\n\t  // Get bounding box of points\r\n\t, bbox: function() {\r\n\t    SVG.parser.poly.setAttribute('points', this.toString())\r\n\t\r\n\t    return SVG.parser.poly.getBBox()\r\n\t  }\r\n\t})\r\n\t\n\tvar pathHandlers = {\r\n\t  M: function(c, p, p0) {\r\n\t    p.x = p0.x = c[0]\r\n\t    p.y = p0.y = c[1]\r\n\t\r\n\t    return ['M', p.x, p.y]\r\n\t  },\r\n\t  L: function(c, p) {\r\n\t    p.x = c[0]\r\n\t    p.y = c[1]\r\n\t    return ['L', c[0], c[1]]\r\n\t  },\r\n\t  H: function(c, p) {\r\n\t    p.x = c[0]\r\n\t    return ['H', c[0]]\r\n\t  },\r\n\t  V: function(c, p) {\r\n\t    p.y = c[0]\r\n\t    return ['V', c[0]]\r\n\t  },\r\n\t  C: function(c, p) {\r\n\t    p.x = c[4]\r\n\t    p.y = c[5]\r\n\t    return ['C', c[0], c[1], c[2], c[3], c[4], c[5]]\r\n\t  },\r\n\t  S: function(c, p) {\r\n\t    p.x = c[2]\r\n\t    p.y = c[3]\r\n\t    return ['S', c[0], c[1], c[2], c[3]]\r\n\t  },\r\n\t  Q: function(c, p) {\r\n\t    p.x = c[2]\r\n\t    p.y = c[3]\r\n\t    return ['Q', c[0], c[1], c[2], c[3]]\r\n\t  },\r\n\t  T: function(c, p) {\r\n\t    p.x = c[0]\r\n\t    p.y = c[1]\r\n\t    return ['T', c[0], c[1]]\r\n\t  },\r\n\t  Z: function(c, p, p0) {\r\n\t    p.x = p0.x\r\n\t    p.y = p0.y\r\n\t    return ['Z']\r\n\t  },\r\n\t  A: function(c, p) {\r\n\t    p.x = c[5]\r\n\t    p.y = c[6]\r\n\t    return ['A', c[0], c[1], c[2], c[3], c[4], c[5], c[6]]\r\n\t  }\r\n\t}\r\n\t\r\n\tvar mlhvqtcsa = 'mlhvqtcsaz'.split('')\r\n\t\r\n\tfor(var i = 0, il = mlhvqtcsa.length; i < il; ++i){\r\n\t  pathHandlers[mlhvqtcsa[i]] = (function(i){\r\n\t    return function(c, p, p0) {\r\n\t      if(i == 'H') c[0] = c[0] + p.x\r\n\t      else if(i == 'V') c[0] = c[0] + p.y\r\n\t      else if(i == 'A'){\r\n\t        c[5] = c[5] + p.x,\r\n\t        c[6] = c[6] + p.y\r\n\t      }\r\n\t      else\r\n\t        for(var j = 0, jl = c.length; j < jl; ++j) {\r\n\t          c[j] = c[j] + (j%2 ? p.y : p.x)\r\n\t        }\r\n\t\r\n\t      return pathHandlers[i](c, p, p0)\r\n\t    }\r\n\t  })(mlhvqtcsa[i].toUpperCase())\r\n\t}\r\n\t\r\n\t// Path points array\r\n\tSVG.PathArray = function(array, fallback) {\r\n\t  SVG.Array.call(this, array, fallback || [['M', 0, 0]])\r\n\t}\r\n\t\r\n\t// Inherit from SVG.Array\r\n\tSVG.PathArray.prototype = new SVG.Array\r\n\tSVG.PathArray.prototype.constructor = SVG.PathArray\r\n\t\r\n\tSVG.extend(SVG.PathArray, {\r\n\t  // Convert array to string\r\n\t  toString: function() {\r\n\t    return arrayToString(this.value)\r\n\t  }\r\n\t  // Move path string\r\n\t, move: function(x, y) {\r\n\t    // get bounding box of current situation\r\n\t    var box = this.bbox()\r\n\t\r\n\t    // get relative offset\r\n\t    x -= box.x\r\n\t    y -= box.y\r\n\t\r\n\t    if (!isNaN(x) && !isNaN(y)) {\r\n\t      // move every point\r\n\t      for (var l, i = this.value.length - 1; i >= 0; i--) {\r\n\t        l = this.value[i][0]\r\n\t\r\n\t        if (l == 'M' || l == 'L' || l == 'T')  {\r\n\t          this.value[i][1] += x\r\n\t          this.value[i][2] += y\r\n\t\r\n\t        } else if (l == 'H')  {\r\n\t          this.value[i][1] += x\r\n\t\r\n\t        } else if (l == 'V')  {\r\n\t          this.value[i][1] += y\r\n\t\r\n\t        } else if (l == 'C' || l == 'S' || l == 'Q')  {\r\n\t          this.value[i][1] += x\r\n\t          this.value[i][2] += y\r\n\t          this.value[i][3] += x\r\n\t          this.value[i][4] += y\r\n\t\r\n\t          if (l == 'C')  {\r\n\t            this.value[i][5] += x\r\n\t            this.value[i][6] += y\r\n\t          }\r\n\t\r\n\t        } else if (l == 'A')  {\r\n\t          this.value[i][6] += x\r\n\t          this.value[i][7] += y\r\n\t        }\r\n\t\r\n\t      }\r\n\t    }\r\n\t\r\n\t    return this\r\n\t  }\r\n\t  // Resize path string\r\n\t, size: function(width, height) {\r\n\t    // get bounding box of current situation\r\n\t    var i, l, box = this.bbox()\r\n\t\r\n\t    // recalculate position of all points according to new size\r\n\t    for (i = this.value.length - 1; i >= 0; i--) {\r\n\t      l = this.value[i][0]\r\n\t\r\n\t      if (l == 'M' || l == 'L' || l == 'T')  {\r\n\t        this.value[i][1] = ((this.value[i][1] - box.x) * width)  / box.width  + box.x\r\n\t        this.value[i][2] = ((this.value[i][2] - box.y) * height) / box.height + box.y\r\n\t\r\n\t      } else if (l == 'H')  {\r\n\t        this.value[i][1] = ((this.value[i][1] - box.x) * width)  / box.width  + box.x\r\n\t\r\n\t      } else if (l == 'V')  {\r\n\t        this.value[i][1] = ((this.value[i][1] - box.y) * height) / box.height + box.y\r\n\t\r\n\t      } else if (l == 'C' || l == 'S' || l == 'Q')  {\r\n\t        this.value[i][1] = ((this.value[i][1] - box.x) * width)  / box.width  + box.x\r\n\t        this.value[i][2] = ((this.value[i][2] - box.y) * height) / box.height + box.y\r\n\t        this.value[i][3] = ((this.value[i][3] - box.x) * width)  / box.width  + box.x\r\n\t        this.value[i][4] = ((this.value[i][4] - box.y) * height) / box.height + box.y\r\n\t\r\n\t        if (l == 'C')  {\r\n\t          this.value[i][5] = ((this.value[i][5] - box.x) * width)  / box.width  + box.x\r\n\t          this.value[i][6] = ((this.value[i][6] - box.y) * height) / box.height + box.y\r\n\t        }\r\n\t\r\n\t      } else if (l == 'A')  {\r\n\t        // resize radii\r\n\t        this.value[i][1] = (this.value[i][1] * width)  / box.width\r\n\t        this.value[i][2] = (this.value[i][2] * height) / box.height\r\n\t\r\n\t        // move position values\r\n\t        this.value[i][6] = ((this.value[i][6] - box.x) * width)  / box.width  + box.x\r\n\t        this.value[i][7] = ((this.value[i][7] - box.y) * height) / box.height + box.y\r\n\t      }\r\n\t\r\n\t    }\r\n\t\r\n\t    return this\r\n\t  }\r\n\t  // Test if the passed path array use the same path data commands as this path array\r\n\t, equalCommands: function(pathArray) {\r\n\t    var i, il, equalCommands\r\n\t\r\n\t    pathArray = new SVG.PathArray(pathArray)\r\n\t\r\n\t    equalCommands = this.value.length === pathArray.value.length\r\n\t    for(i = 0, il = this.value.length; equalCommands && i < il; i++) {\r\n\t      equalCommands = this.value[i][0] === pathArray.value[i][0]\r\n\t    }\r\n\t\r\n\t    return equalCommands\r\n\t  }\r\n\t  // Make path array morphable\r\n\t, morph: function(pathArray) {\r\n\t    pathArray = new SVG.PathArray(pathArray)\r\n\t\r\n\t    if(this.equalCommands(pathArray)) {\r\n\t      this.destination = pathArray\r\n\t    } else {\r\n\t      this.destination = null\r\n\t    }\r\n\t\r\n\t    return this\r\n\t  }\r\n\t  // Get morphed path array at given position\r\n\t, at: function(pos) {\r\n\t    // make sure a destination is defined\r\n\t    if (!this.destination) return this\r\n\t\r\n\t    var sourceArray = this.value\r\n\t      , destinationArray = this.destination.value\r\n\t      , array = [], pathArray = new SVG.PathArray()\r\n\t      , i, il, j, jl\r\n\t\r\n\t    // Animate has specified in the SVG spec\r\n\t    // See: https://www.w3.org/TR/SVG11/paths.html#PathElement\r\n\t    for (i = 0, il = sourceArray.length; i < il; i++) {\r\n\t      array[i] = [sourceArray[i][0]]\r\n\t      for(j = 1, jl = sourceArray[i].length; j < jl; j++) {\r\n\t        array[i][j] = sourceArray[i][j] + (destinationArray[i][j] - sourceArray[i][j]) * pos\r\n\t      }\r\n\t      // For the two flags of the elliptical arc command, the SVG spec say:\r\n\t      // Flags and booleans are interpolated as fractions between zero and one, with any non-zero value considered to be a value of one/true\r\n\t      // Elliptical arc command as an array followed by corresponding indexes:\r\n\t      // ['A', rx, ry, x-axis-rotation, large-arc-flag, sweep-flag, x, y]\r\n\t      //   0    1   2        3                 4             5      6  7\r\n\t      if(array[i][0] === 'A') {\r\n\t        array[i][4] = +(array[i][4] != 0)\r\n\t        array[i][5] = +(array[i][5] != 0)\r\n\t      }\r\n\t    }\r\n\t\r\n\t    // Directly modify the value of a path array, this is done this way for performance\r\n\t    pathArray.value = array\r\n\t    return pathArray\r\n\t  }\r\n\t  // Absolutize and parse path to array\r\n\t, parse: function(array) {\r\n\t    // if it's already a patharray, no need to parse it\r\n\t    if (array instanceof SVG.PathArray) return array.valueOf()\r\n\t\r\n\t    // prepare for parsing\r\n\t    var i, x0, y0, s, seg, arr\r\n\t      , x = 0\r\n\t      , y = 0\r\n\t      , paramCnt = { 'M':2, 'L':2, 'H':1, 'V':1, 'C':6, 'S':4, 'Q':4, 'T':2, 'A':7, 'Z':0 }\r\n\t\r\n\t    if(typeof array == 'string'){\r\n\t\r\n\t      array = array\r\n\t        .replace(SVG.regex.numbersWithDots, pathRegReplace) // convert 45.123.123 to 45.123 .123\r\n\t        .replace(SVG.regex.pathLetters, ' $& ') // put some room between letters and numbers\r\n\t        .replace(SVG.regex.hyphen, '$1 -')      // add space before hyphen\r\n\t        .trim()                                 // trim\r\n\t        .split(SVG.regex.delimiter)   // split into array\r\n\t\r\n\t    }else{\r\n\t      array = array.reduce(function(prev, curr){\r\n\t        return [].concat.call(prev, curr)\r\n\t      }, [])\r\n\t    }\r\n\t\r\n\t    // array now is an array containing all parts of a path e.g. ['M', '0', '0', 'L', '30', '30' ...]\r\n\t    var arr = []\r\n\t      , p = new SVG.Point()\r\n\t      , p0 = new SVG.Point()\r\n\t      , index = 0\r\n\t      , len = array.length\r\n\t\r\n\t    do{\r\n\t      // Test if we have a path letter\r\n\t      if(SVG.regex.isPathLetter.test(array[index])){\r\n\t        s = array[index]\r\n\t        ++index\r\n\t      // If last letter was a move command and we got no new, it defaults to [L]ine\r\n\t      }else if(s == 'M'){\r\n\t        s = 'L'\r\n\t      }else if(s == 'm'){\r\n\t        s = 'l'\r\n\t      }\r\n\t\r\n\t      arr.push(pathHandlers[s].call(null,\r\n\t          array.slice(index, (index = index + paramCnt[s.toUpperCase()])).map(parseFloat),\r\n\t          p, p0\r\n\t        )\r\n\t      )\r\n\t\r\n\t    }while(len > index)\r\n\t\r\n\t    return arr\r\n\t\r\n\t  }\r\n\t  // Get bounding box of path\r\n\t, bbox: function() {\r\n\t    SVG.parser.path.setAttribute('d', this.toString())\r\n\t\r\n\t    return SVG.parser.path.getBBox()\r\n\t  }\r\n\t\r\n\t})\r\n\t\n\t// Module for unit convertions\r\n\tSVG.Number = SVG.invent({\r\n\t  // Initialize\r\n\t  create: function(value, unit) {\r\n\t    // initialize defaults\r\n\t    this.value = 0\r\n\t    this.unit  = unit || ''\r\n\t\r\n\t    // parse value\r\n\t    if (typeof value === 'number') {\r\n\t      // ensure a valid numeric value\r\n\t      this.value = isNaN(value) ? 0 : !isFinite(value) ? (value < 0 ? -3.4e+38 : +3.4e+38) : value\r\n\t\r\n\t    } else if (typeof value === 'string') {\r\n\t      unit = value.match(SVG.regex.numberAndUnit)\r\n\t\r\n\t      if (unit) {\r\n\t        // make value numeric\r\n\t        this.value = parseFloat(unit[1])\r\n\t\r\n\t        // normalize\r\n\t        if (unit[5] == '%')\r\n\t          this.value /= 100\r\n\t        else if (unit[5] == 's')\r\n\t          this.value *= 1000\r\n\t\r\n\t        // store unit\r\n\t        this.unit = unit[5]\r\n\t      }\r\n\t\r\n\t    } else {\r\n\t      if (value instanceof SVG.Number) {\r\n\t        this.value = value.valueOf()\r\n\t        this.unit  = value.unit\r\n\t      }\r\n\t    }\r\n\t\r\n\t  }\r\n\t  // Add methods\r\n\t, extend: {\r\n\t    // Stringalize\r\n\t    toString: function() {\r\n\t      return (\r\n\t        this.unit == '%' ?\r\n\t          ~~(this.value * 1e8) / 1e6:\r\n\t        this.unit == 's' ?\r\n\t          this.value / 1e3 :\r\n\t          this.value\r\n\t      ) + this.unit\r\n\t    }\r\n\t  , toJSON: function() {\r\n\t      return this.toString()\r\n\t    }\r\n\t  , // Convert to primitive\r\n\t    valueOf: function() {\r\n\t      return this.value\r\n\t    }\r\n\t    // Add number\r\n\t  , plus: function(number) {\r\n\t      number = new SVG.Number(number)\r\n\t      return new SVG.Number(this + number, this.unit || number.unit)\r\n\t    }\r\n\t    // Subtract number\r\n\t  , minus: function(number) {\r\n\t      number = new SVG.Number(number)\r\n\t      return new SVG.Number(this - number, this.unit || number.unit)\r\n\t    }\r\n\t    // Multiply number\r\n\t  , times: function(number) {\r\n\t      number = new SVG.Number(number)\r\n\t      return new SVG.Number(this * number, this.unit || number.unit)\r\n\t    }\r\n\t    // Divide number\r\n\t  , divide: function(number) {\r\n\t      number = new SVG.Number(number)\r\n\t      return new SVG.Number(this / number, this.unit || number.unit)\r\n\t    }\r\n\t    // Convert to different unit\r\n\t  , to: function(unit) {\r\n\t      var number = new SVG.Number(this)\r\n\t\r\n\t      if (typeof unit === 'string')\r\n\t        number.unit = unit\r\n\t\r\n\t      return number\r\n\t    }\r\n\t    // Make number morphable\r\n\t  , morph: function(number) {\r\n\t      this.destination = new SVG.Number(number)\r\n\t\r\n\t      if(number.relative) {\r\n\t        this.destination.value += this.value\r\n\t      }\r\n\t\r\n\t      return this\r\n\t    }\r\n\t    // Get morphed number at given position\r\n\t  , at: function(pos) {\r\n\t      // Make sure a destination is defined\r\n\t      if (!this.destination) return this\r\n\t\r\n\t      // Generate new morphed number\r\n\t      return new SVG.Number(this.destination)\r\n\t          .minus(this)\r\n\t          .times(pos)\r\n\t          .plus(this)\r\n\t    }\r\n\t\r\n\t  }\r\n\t})\r\n\t\n\t\r\n\tSVG.Element = SVG.invent({\r\n\t  // Initialize node\r\n\t  create: function(node) {\r\n\t    // make stroke value accessible dynamically\r\n\t    this._stroke = SVG.defaults.attrs.stroke\r\n\t    this._event = null\r\n\t\r\n\t    // initialize data object\r\n\t    this.dom = {}\r\n\t\r\n\t    // create circular reference\r\n\t    if (this.node = node) {\r\n\t      this.type = node.nodeName\r\n\t      this.node.instance = this\r\n\t\r\n\t      // store current attribute value\r\n\t      this._stroke = node.getAttribute('stroke') || this._stroke\r\n\t    }\r\n\t  }\r\n\t\r\n\t  // Add class methods\r\n\t, extend: {\r\n\t    // Move over x-axis\r\n\t    x: function(x) {\r\n\t      return this.attr('x', x)\r\n\t    }\r\n\t    // Move over y-axis\r\n\t  , y: function(y) {\r\n\t      return this.attr('y', y)\r\n\t    }\r\n\t    // Move by center over x-axis\r\n\t  , cx: function(x) {\r\n\t      return x == null ? this.x() + this.width() / 2 : this.x(x - this.width() / 2)\r\n\t    }\r\n\t    // Move by center over y-axis\r\n\t  , cy: function(y) {\r\n\t      return y == null ? this.y() + this.height() / 2 : this.y(y - this.height() / 2)\r\n\t    }\r\n\t    // Move element to given x and y values\r\n\t  , move: function(x, y) {\r\n\t      return this.x(x).y(y)\r\n\t    }\r\n\t    // Move element by its center\r\n\t  , center: function(x, y) {\r\n\t      return this.cx(x).cy(y)\r\n\t    }\r\n\t    // Set width of element\r\n\t  , width: function(width) {\r\n\t      return this.attr('width', width)\r\n\t    }\r\n\t    // Set height of element\r\n\t  , height: function(height) {\r\n\t      return this.attr('height', height)\r\n\t    }\r\n\t    // Set element size to given width and height\r\n\t  , size: function(width, height) {\r\n\t      var p = proportionalSize(this, width, height)\r\n\t\r\n\t      return this\r\n\t        .width(new SVG.Number(p.width))\r\n\t        .height(new SVG.Number(p.height))\r\n\t    }\r\n\t    // Clone element\r\n\t  , clone: function(parent, withData) {\r\n\t      // write dom data to the dom so the clone can pickup the data\r\n\t      this.writeDataToDom()\r\n\t\r\n\t      // clone element and assign new id\r\n\t      var clone = assignNewId(this.node.cloneNode(true))\r\n\t\r\n\t      // insert the clone in the given parent or after myself\r\n\t      if(parent) parent.add(clone)\r\n\t      else this.after(clone)\r\n\t\r\n\t      return clone\r\n\t    }\r\n\t    // Remove element\r\n\t  , remove: function() {\r\n\t      if (this.parent())\r\n\t        this.parent().removeElement(this)\r\n\t\r\n\t      return this\r\n\t    }\r\n\t    // Replace element\r\n\t  , replace: function(element) {\r\n\t      this.after(element).remove()\r\n\t\r\n\t      return element\r\n\t    }\r\n\t    // Add element to given container and return self\r\n\t  , addTo: function(parent) {\r\n\t      return parent.put(this)\r\n\t    }\r\n\t    // Add element to given container and return container\r\n\t  , putIn: function(parent) {\r\n\t      return parent.add(this)\r\n\t    }\r\n\t    // Get / set id\r\n\t  , id: function(id) {\r\n\t      return this.attr('id', id)\r\n\t    }\r\n\t    // Checks whether the given point inside the bounding box of the element\r\n\t  , inside: function(x, y) {\r\n\t      var box = this.bbox()\r\n\t\r\n\t      return x > box.x\r\n\t          && y > box.y\r\n\t          && x < box.x + box.width\r\n\t          && y < box.y + box.height\r\n\t    }\r\n\t    // Show element\r\n\t  , show: function() {\r\n\t      return this.style('display', '')\r\n\t    }\r\n\t    // Hide element\r\n\t  , hide: function() {\r\n\t      return this.style('display', 'none')\r\n\t    }\r\n\t    // Is element visible?\r\n\t  , visible: function() {\r\n\t      return this.style('display') != 'none'\r\n\t    }\r\n\t    // Return id on string conversion\r\n\t  , toString: function() {\r\n\t      return this.attr('id')\r\n\t    }\r\n\t    // Return array of classes on the node\r\n\t  , classes: function() {\r\n\t      var attr = this.attr('class')\r\n\t\r\n\t      return attr == null ? [] : attr.trim().split(SVG.regex.delimiter)\r\n\t    }\r\n\t    // Return true if class exists on the node, false otherwise\r\n\t  , hasClass: function(name) {\r\n\t      return this.classes().indexOf(name) != -1\r\n\t    }\r\n\t    // Add class to the node\r\n\t  , addClass: function(name) {\r\n\t      if (!this.hasClass(name)) {\r\n\t        var array = this.classes()\r\n\t        array.push(name)\r\n\t        this.attr('class', array.join(' '))\r\n\t      }\r\n\t\r\n\t      return this\r\n\t    }\r\n\t    // Remove class from the node\r\n\t  , removeClass: function(name) {\r\n\t      if (this.hasClass(name)) {\r\n\t        this.attr('class', this.classes().filter(function(c) {\r\n\t          return c != name\r\n\t        }).join(' '))\r\n\t      }\r\n\t\r\n\t      return this\r\n\t    }\r\n\t    // Toggle the presence of a class on the node\r\n\t  , toggleClass: function(name) {\r\n\t      return this.hasClass(name) ? this.removeClass(name) : this.addClass(name)\r\n\t    }\r\n\t    // Get referenced element form attribute value\r\n\t  , reference: function(attr) {\r\n\t      return SVG.get(this.attr(attr))\r\n\t    }\r\n\t    // Returns the parent element instance\r\n\t  , parent: function(type) {\r\n\t      var parent = this\r\n\t\r\n\t      // check for parent\r\n\t      if(!parent.node.parentNode) return null\r\n\t\r\n\t      // get parent element\r\n\t      parent = SVG.adopt(parent.node.parentNode)\r\n\t\r\n\t      if(!type) return parent\r\n\t\r\n\t      // loop trough ancestors if type is given\r\n\t      while(parent && parent.node instanceof window.SVGElement){\r\n\t        if(typeof type === 'string' ? parent.matches(type) : parent instanceof type) return parent\r\n\t        if(parent.node.parentNode.nodeName == '#document') return null // #720\r\n\t        parent = SVG.adopt(parent.node.parentNode)\r\n\t      }\r\n\t    }\r\n\t    // Get parent document\r\n\t  , doc: function() {\r\n\t      return this instanceof SVG.Doc ? this : this.parent(SVG.Doc)\r\n\t    }\r\n\t    // return array of all ancestors of given type up to the root svg\r\n\t  , parents: function(type) {\r\n\t      var parents = [], parent = this\r\n\t\r\n\t      do{\r\n\t        parent = parent.parent(type)\r\n\t        if(!parent || !parent.node) break\r\n\t\r\n\t        parents.push(parent)\r\n\t      } while(parent.parent)\r\n\t\r\n\t      return parents\r\n\t    }\r\n\t    // matches the element vs a css selector\r\n\t  , matches: function(selector){\r\n\t      return matches(this.node, selector)\r\n\t    }\r\n\t    // Returns the svg node to call native svg methods on it\r\n\t  , native: function() {\r\n\t      return this.node\r\n\t    }\r\n\t    // Import raw svg\r\n\t  , svg: function(svg) {\r\n\t      // create temporary holder\r\n\t      var well = document.createElement('svg')\r\n\t\r\n\t      // act as a setter if svg is given\r\n\t      if (svg && this instanceof SVG.Parent) {\r\n\t        // dump raw svg\r\n\t        well.innerHTML = '<svg>' + svg.replace(/\\n/, '').replace(/<(\\w+)([^<]+?)\\/>/g, '<$1$2></$1>') + '</svg>'\r\n\t\r\n\t        // transplant nodes\r\n\t        for (var i = 0, il = well.firstChild.childNodes.length; i < il; i++)\r\n\t          this.node.appendChild(well.firstChild.firstChild)\r\n\t\r\n\t      // otherwise act as a getter\r\n\t      } else {\r\n\t        // create a wrapping svg element in case of partial content\r\n\t        well.appendChild(svg = document.createElement('svg'))\r\n\t\r\n\t        // write svgjs data to the dom\r\n\t        this.writeDataToDom()\r\n\t\r\n\t        // insert a copy of this node\r\n\t        svg.appendChild(this.node.cloneNode(true))\r\n\t\r\n\t        // return target element\r\n\t        return well.innerHTML.replace(/^<svg>/, '').replace(/<\\/svg>$/, '')\r\n\t      }\r\n\t\r\n\t      return this\r\n\t    }\r\n\t  // write svgjs data to the dom\r\n\t  , writeDataToDom: function() {\r\n\t\r\n\t      // dump variables recursively\r\n\t      if(this.each || this.lines){\r\n\t        var fn = this.each ? this : this.lines();\r\n\t        fn.each(function(){\r\n\t          this.writeDataToDom()\r\n\t        })\r\n\t      }\r\n\t\r\n\t      // remove previously set data\r\n\t      this.node.removeAttribute('svgjs:data')\r\n\t\r\n\t      if(Object.keys(this.dom).length)\r\n\t        this.node.setAttribute('svgjs:data', JSON.stringify(this.dom)) // see #428\r\n\t\r\n\t      return this\r\n\t    }\r\n\t  // set given data to the elements data property\r\n\t  , setData: function(o){\r\n\t      this.dom = o\r\n\t      return this\r\n\t    }\r\n\t  , is: function(obj){\r\n\t      return is(this, obj)\r\n\t    }\r\n\t  }\r\n\t})\r\n\t\n\tSVG.easing = {\r\n\t  '-': function(pos){return pos}\r\n\t, '<>':function(pos){return -Math.cos(pos * Math.PI) / 2 + 0.5}\r\n\t, '>': function(pos){return  Math.sin(pos * Math.PI / 2)}\r\n\t, '<': function(pos){return -Math.cos(pos * Math.PI / 2) + 1}\r\n\t}\r\n\t\r\n\tSVG.morph = function(pos){\r\n\t  return function(from, to) {\r\n\t    return new SVG.MorphObj(from, to).at(pos)\r\n\t  }\r\n\t}\r\n\t\r\n\tSVG.Situation = SVG.invent({\r\n\t\r\n\t  create: function(o){\r\n\t    this.init = false\r\n\t    this.reversed = false\r\n\t    this.reversing = false\r\n\t\r\n\t    this.duration = new SVG.Number(o.duration).valueOf()\r\n\t    this.delay = new SVG.Number(o.delay).valueOf()\r\n\t\r\n\t    this.start = +new Date() + this.delay\r\n\t    this.finish = this.start + this.duration\r\n\t    this.ease = o.ease\r\n\t\r\n\t    // this.loop is incremented from 0 to this.loops\r\n\t    // it is also incremented when in an infinite loop (when this.loops is true)\r\n\t    this.loop = 0\r\n\t    this.loops = false\r\n\t\r\n\t    this.animations = {\r\n\t      // functionToCall: [list of morphable objects]\r\n\t      // e.g. move: [SVG.Number, SVG.Number]\r\n\t    }\r\n\t\r\n\t    this.attrs = {\r\n\t      // holds all attributes which are not represented from a function svg.js provides\r\n\t      // e.g. someAttr: SVG.Number\r\n\t    }\r\n\t\r\n\t    this.styles = {\r\n\t      // holds all styles which should be animated\r\n\t      // e.g. fill-color: SVG.Color\r\n\t    }\r\n\t\r\n\t    this.transforms = [\r\n\t      // holds all transformations as transformation objects\r\n\t      // e.g. [SVG.Rotate, SVG.Translate, SVG.Matrix]\r\n\t    ]\r\n\t\r\n\t    this.once = {\r\n\t      // functions to fire at a specific position\r\n\t      // e.g. \"0.5\": function foo(){}\r\n\t    }\r\n\t\r\n\t  }\r\n\t\r\n\t})\r\n\t\r\n\t\r\n\tSVG.FX = SVG.invent({\r\n\t\r\n\t  create: function(element) {\r\n\t    this._target = element\r\n\t    this.situations = []\r\n\t    this.active = false\r\n\t    this.situation = null\r\n\t    this.paused = false\r\n\t    this.lastPos = 0\r\n\t    this.pos = 0\r\n\t    // The absolute position of an animation is its position in the context of its complete duration (including delay and loops)\r\n\t    // When performing a delay, absPos is below 0 and when performing a loop, its value is above 1\r\n\t    this.absPos = 0\r\n\t    this._speed = 1\r\n\t  }\r\n\t\r\n\t, extend: {\r\n\t\r\n\t    /**\r\n\t     * sets or returns the target of this animation\r\n\t     * @param o object || number In case of Object it holds all parameters. In case of number its the duration of the animation\r\n\t     * @param ease function || string Function which should be used for easing or easing keyword\r\n\t     * @param delay Number indicating the delay before the animation starts\r\n\t     * @return target || this\r\n\t     */\r\n\t    animate: function(o, ease, delay){\r\n\t\r\n\t      if(typeof o == 'object'){\r\n\t        ease = o.ease\r\n\t        delay = o.delay\r\n\t        o = o.duration\r\n\t      }\r\n\t\r\n\t      var situation = new SVG.Situation({\r\n\t        duration: o || 1000,\r\n\t        delay: delay || 0,\r\n\t        ease: SVG.easing[ease || '-'] || ease\r\n\t      })\r\n\t\r\n\t      this.queue(situation)\r\n\t\r\n\t      return this\r\n\t    }\r\n\t\r\n\t    /**\r\n\t     * sets a delay before the next element of the queue is called\r\n\t     * @param delay Duration of delay in milliseconds\r\n\t     * @return this.target()\r\n\t     */\r\n\t  , delay: function(delay){\r\n\t      // The delay is performed by an empty situation with its duration\r\n\t      // attribute set to the duration of the delay\r\n\t      var situation = new SVG.Situation({\r\n\t        duration: delay,\r\n\t        delay: 0,\r\n\t        ease: SVG.easing['-']\r\n\t      })\r\n\t\r\n\t      return this.queue(situation)\r\n\t    }\r\n\t\r\n\t    /**\r\n\t     * sets or returns the target of this animation\r\n\t     * @param null || target SVG.Element which should be set as new target\r\n\t     * @return target || this\r\n\t     */\r\n\t  , target: function(target){\r\n\t      if(target && target instanceof SVG.Element){\r\n\t        this._target = target\r\n\t        return this\r\n\t      }\r\n\t\r\n\t      return this._target\r\n\t    }\r\n\t\r\n\t    // returns the absolute position at a given time\r\n\t  , timeToAbsPos: function(timestamp){\r\n\t      return (timestamp - this.situation.start) / (this.situation.duration/this._speed)\r\n\t    }\r\n\t\r\n\t    // returns the timestamp from a given absolute positon\r\n\t  , absPosToTime: function(absPos){\r\n\t      return this.situation.duration/this._speed * absPos + this.situation.start\r\n\t    }\r\n\t\r\n\t    // starts the animationloop\r\n\t  , startAnimFrame: function(){\r\n\t      this.stopAnimFrame()\r\n\t      this.animationFrame = window.requestAnimationFrame(function(){ this.step() }.bind(this))\r\n\t    }\r\n\t\r\n\t    // cancels the animationframe\r\n\t  , stopAnimFrame: function(){\r\n\t      window.cancelAnimationFrame(this.animationFrame)\r\n\t    }\r\n\t\r\n\t    // kicks off the animation - only does something when the queue is currently not active and at least one situation is set\r\n\t  , start: function(){\r\n\t      // dont start if already started\r\n\t      if(!this.active && this.situation){\r\n\t        this.active = true\r\n\t        this.startCurrent()\r\n\t      }\r\n\t\r\n\t      return this\r\n\t    }\r\n\t\r\n\t    // start the current situation\r\n\t  , startCurrent: function(){\r\n\t      this.situation.start = +new Date + this.situation.delay/this._speed\r\n\t      this.situation.finish = this.situation.start + this.situation.duration/this._speed\r\n\t      return this.initAnimations().step()\r\n\t    }\r\n\t\r\n\t    /**\r\n\t     * adds a function / Situation to the animation queue\r\n\t     * @param fn function / situation to add\r\n\t     * @return this\r\n\t     */\r\n\t  , queue: function(fn){\r\n\t      if(typeof fn == 'function' || fn instanceof SVG.Situation)\r\n\t        this.situations.push(fn)\r\n\t\r\n\t      if(!this.situation) this.situation = this.situations.shift()\r\n\t\r\n\t      return this\r\n\t    }\r\n\t\r\n\t    /**\r\n\t     * pulls next element from the queue and execute it\r\n\t     * @return this\r\n\t     */\r\n\t  , dequeue: function(){\r\n\t      // stop current animation\r\n\t      this.stop()\r\n\t\r\n\t      // get next animation from queue\r\n\t      this.situation = this.situations.shift()\r\n\t\r\n\t      if(this.situation){\r\n\t        if(this.situation instanceof SVG.Situation) {\r\n\t          this.start()\r\n\t        } else {\r\n\t          // If it is not a SVG.Situation, then it is a function, we execute it\r\n\t          this.situation.call(this)\r\n\t        }\r\n\t      }\r\n\t\r\n\t      return this\r\n\t    }\r\n\t\r\n\t    // updates all animations to the current state of the element\r\n\t    // this is important when one property could be changed from another property\r\n\t  , initAnimations: function() {\r\n\t      var i, j, source\r\n\t      var s = this.situation\r\n\t\r\n\t      if(s.init) return this\r\n\t\r\n\t      for(i in s.animations){\r\n\t        source = this.target()[i]()\r\n\t\r\n\t        if(!Array.isArray(source)) {\r\n\t          source = [source]\r\n\t        }\r\n\t\r\n\t        if(!Array.isArray(s.animations[i])) {\r\n\t          s.animations[i] = [s.animations[i]]\r\n\t        }\r\n\t\r\n\t        //if(s.animations[i].length > source.length) {\r\n\t        //  source.concat = source.concat(s.animations[i].slice(source.length, s.animations[i].length))\r\n\t        //}\r\n\t\r\n\t        for(j = source.length; j--;) {\r\n\t          // The condition is because some methods return a normal number instead\r\n\t          // of a SVG.Number\r\n\t          if(s.animations[i][j] instanceof SVG.Number)\r\n\t            source[j] = new SVG.Number(source[j])\r\n\t\r\n\t          s.animations[i][j] = source[j].morph(s.animations[i][j])\r\n\t        }\r\n\t      }\r\n\t\r\n\t      for(i in s.attrs){\r\n\t        s.attrs[i] = new SVG.MorphObj(this.target().attr(i), s.attrs[i])\r\n\t      }\r\n\t\r\n\t      for(i in s.styles){\r\n\t        s.styles[i] = new SVG.MorphObj(this.target().style(i), s.styles[i])\r\n\t      }\r\n\t\r\n\t      s.initialTransformation = this.target().matrixify()\r\n\t\r\n\t      s.init = true\r\n\t      return this\r\n\t    }\r\n\t  , clearQueue: function(){\r\n\t      this.situations = []\r\n\t      return this\r\n\t    }\r\n\t  , clearCurrent: function(){\r\n\t      this.situation = null\r\n\t      return this\r\n\t    }\r\n\t    /** stops the animation immediately\r\n\t     * @param jumpToEnd A Boolean indicating whether to complete the current animation immediately.\r\n\t     * @param clearQueue A Boolean indicating whether to remove queued animation as well.\r\n\t     * @return this\r\n\t     */\r\n\t  , stop: function(jumpToEnd, clearQueue){\r\n\t      var active = this.active\r\n\t      this.active = false\r\n\t\r\n\t      if(clearQueue){\r\n\t        this.clearQueue()\r\n\t      }\r\n\t\r\n\t      if(jumpToEnd && this.situation){\r\n\t        // initialize the situation if it was not\r\n\t        !active && this.startCurrent()\r\n\t        this.atEnd()\r\n\t      }\r\n\t\r\n\t      this.stopAnimFrame()\r\n\t\r\n\t      return this.clearCurrent()\r\n\t    }\r\n\t\r\n\t    /** resets the element to the state where the current element has started\r\n\t     * @return this\r\n\t     */\r\n\t  , reset: function(){\r\n\t      if(this.situation){\r\n\t        var temp = this.situation\r\n\t        this.stop()\r\n\t        this.situation = temp\r\n\t        this.atStart()\r\n\t      }\r\n\t      return this\r\n\t    }\r\n\t\r\n\t    // Stop the currently-running animation, remove all queued animations, and complete all animations for the element.\r\n\t  , finish: function(){\r\n\t\r\n\t      this.stop(true, false)\r\n\t\r\n\t      while(this.dequeue().situation && this.stop(true, false));\r\n\t\r\n\t      this.clearQueue().clearCurrent()\r\n\t\r\n\t      return this\r\n\t    }\r\n\t\r\n\t    // set the internal animation pointer at the start position, before any loops, and updates the visualisation\r\n\t  , atStart: function() {\r\n\t      return this.at(0, true)\r\n\t    }\r\n\t\r\n\t    // set the internal animation pointer at the end position, after all the loops, and updates the visualisation\r\n\t  , atEnd: function() {\r\n\t      if (this.situation.loops === true) {\r\n\t        // If in a infinite loop, we end the current iteration\r\n\t        this.situation.loops = this.situation.loop + 1\r\n\t      }\r\n\t\r\n\t      if(typeof this.situation.loops == 'number') {\r\n\t        // If performing a finite number of loops, we go after all the loops\r\n\t        return this.at(this.situation.loops, true)\r\n\t      } else {\r\n\t        // If no loops, we just go at the end\r\n\t        return this.at(1, true)\r\n\t      }\r\n\t    }\r\n\t\r\n\t    // set the internal animation pointer to the specified position and updates the visualisation\r\n\t    // if isAbsPos is true, pos is treated as an absolute position\r\n\t  , at: function(pos, isAbsPos){\r\n\t      var durDivSpd = this.situation.duration/this._speed\r\n\t\r\n\t      this.absPos = pos\r\n\t      // If pos is not an absolute position, we convert it into one\r\n\t      if (!isAbsPos) {\r\n\t        if (this.situation.reversed) this.absPos = 1 - this.absPos\r\n\t        this.absPos += this.situation.loop\r\n\t      }\r\n\t\r\n\t      this.situation.start = +new Date - this.absPos * durDivSpd\r\n\t      this.situation.finish = this.situation.start + durDivSpd\r\n\t\r\n\t      return this.step(true)\r\n\t    }\r\n\t\r\n\t    /**\r\n\t     * sets or returns the speed of the animations\r\n\t     * @param speed null || Number The new speed of the animations\r\n\t     * @return Number || this\r\n\t     */\r\n\t  , speed: function(speed){\r\n\t      if (speed === 0) return this.pause()\r\n\t\r\n\t      if (speed) {\r\n\t        this._speed = speed\r\n\t        // We use an absolute position here so that speed can affect the delay before the animation\r\n\t        return this.at(this.absPos, true)\r\n\t      } else return this._speed\r\n\t    }\r\n\t\r\n\t    // Make loopable\r\n\t  , loop: function(times, reverse) {\r\n\t      var c = this.last()\r\n\t\r\n\t      // store total loops\r\n\t      c.loops = (times != null) ? times : true\r\n\t      c.loop = 0\r\n\t\r\n\t      if(reverse) c.reversing = true\r\n\t      return this\r\n\t    }\r\n\t\r\n\t    // pauses the animation\r\n\t  , pause: function(){\r\n\t      this.paused = true\r\n\t      this.stopAnimFrame()\r\n\t\r\n\t      return this\r\n\t    }\r\n\t\r\n\t    // unpause the animation\r\n\t  , play: function(){\r\n\t      if(!this.paused) return this\r\n\t      this.paused = false\r\n\t      // We use an absolute position here so that the delay before the animation can be paused\r\n\t      return this.at(this.absPos, true)\r\n\t    }\r\n\t\r\n\t    /**\r\n\t     * toggle or set the direction of the animation\r\n\t     * true sets direction to backwards while false sets it to forwards\r\n\t     * @param reversed Boolean indicating whether to reverse the animation or not (default: toggle the reverse status)\r\n\t     * @return this\r\n\t     */\r\n\t  , reverse: function(reversed){\r\n\t      var c = this.last()\r\n\t\r\n\t      if(typeof reversed == 'undefined') c.reversed = !c.reversed\r\n\t      else c.reversed = reversed\r\n\t\r\n\t      return this\r\n\t    }\r\n\t\r\n\t\r\n\t    /**\r\n\t     * returns a float from 0-1 indicating the progress of the current animation\r\n\t     * @param eased Boolean indicating whether the returned position should be eased or not\r\n\t     * @return number\r\n\t     */\r\n\t  , progress: function(easeIt){\r\n\t      return easeIt ? this.situation.ease(this.pos) : this.pos\r\n\t    }\r\n\t\r\n\t    /**\r\n\t     * adds a callback function which is called when the current animation is finished\r\n\t     * @param fn Function which should be executed as callback\r\n\t     * @return number\r\n\t     */\r\n\t  , after: function(fn){\r\n\t      var c = this.last()\r\n\t        , wrapper = function wrapper(e){\r\n\t            if(e.detail.situation == c){\r\n\t              fn.call(this, c)\r\n\t              this.off('finished.fx', wrapper) // prevent memory leak\r\n\t            }\r\n\t          }\r\n\t\r\n\t      this.target().on('finished.fx', wrapper)\r\n\t\r\n\t      return this._callStart()\r\n\t    }\r\n\t\r\n\t    // adds a callback which is called whenever one animation step is performed\r\n\t  , during: function(fn){\r\n\t      var c = this.last()\r\n\t        , wrapper = function(e){\r\n\t            if(e.detail.situation == c){\r\n\t              fn.call(this, e.detail.pos, SVG.morph(e.detail.pos), e.detail.eased, c)\r\n\t            }\r\n\t          }\r\n\t\r\n\t      // see above\r\n\t      this.target().off('during.fx', wrapper).on('during.fx', wrapper)\r\n\t\r\n\t      this.after(function(){\r\n\t        this.off('during.fx', wrapper)\r\n\t      })\r\n\t\r\n\t      return this._callStart()\r\n\t    }\r\n\t\r\n\t    // calls after ALL animations in the queue are finished\r\n\t  , afterAll: function(fn){\r\n\t      var wrapper = function wrapper(e){\r\n\t            fn.call(this)\r\n\t            this.off('allfinished.fx', wrapper)\r\n\t          }\r\n\t\r\n\t      // see above\r\n\t      this.target().off('allfinished.fx', wrapper).on('allfinished.fx', wrapper)\r\n\t\r\n\t      return this._callStart()\r\n\t    }\r\n\t\r\n\t    // calls on every animation step for all animations\r\n\t  , duringAll: function(fn){\r\n\t      var wrapper = function(e){\r\n\t            fn.call(this, e.detail.pos, SVG.morph(e.detail.pos), e.detail.eased, e.detail.situation)\r\n\t          }\r\n\t\r\n\t      this.target().off('during.fx', wrapper).on('during.fx', wrapper)\r\n\t\r\n\t      this.afterAll(function(){\r\n\t        this.off('during.fx', wrapper)\r\n\t      })\r\n\t\r\n\t      return this._callStart()\r\n\t    }\r\n\t\r\n\t  , last: function(){\r\n\t      return this.situations.length ? this.situations[this.situations.length-1] : this.situation\r\n\t    }\r\n\t\r\n\t    // adds one property to the animations\r\n\t  , add: function(method, args, type){\r\n\t      this.last()[type || 'animations'][method] = args\r\n\t      return this._callStart()\r\n\t    }\r\n\t\r\n\t    /** perform one step of the animation\r\n\t     *  @param ignoreTime Boolean indicating whether to ignore time and use position directly or recalculate position based on time\r\n\t     *  @return this\r\n\t     */\r\n\t  , step: function(ignoreTime){\r\n\t\r\n\t      // convert current time to an absolute position\r\n\t      if(!ignoreTime) this.absPos = this.timeToAbsPos(+new Date)\r\n\t\r\n\t      // This part convert an absolute position to a position\r\n\t      if(this.situation.loops !== false) {\r\n\t        var absPos, absPosInt, lastLoop\r\n\t\r\n\t        // If the absolute position is below 0, we just treat it as if it was 0\r\n\t        absPos = Math.max(this.absPos, 0)\r\n\t        absPosInt = Math.floor(absPos)\r\n\t\r\n\t        if(this.situation.loops === true || absPosInt < this.situation.loops) {\r\n\t          this.pos = absPos - absPosInt\r\n\t          lastLoop = this.situation.loop\r\n\t          this.situation.loop = absPosInt\r\n\t        } else {\r\n\t          this.absPos = this.situation.loops\r\n\t          this.pos = 1\r\n\t          // The -1 here is because we don't want to toggle reversed when all the loops have been completed\r\n\t          lastLoop = this.situation.loop - 1\r\n\t          this.situation.loop = this.situation.loops\r\n\t        }\r\n\t\r\n\t        if(this.situation.reversing) {\r\n\t          // Toggle reversed if an odd number of loops as occured since the last call of step\r\n\t          this.situation.reversed = this.situation.reversed != Boolean((this.situation.loop - lastLoop) % 2)\r\n\t        }\r\n\t\r\n\t      } else {\r\n\t        // If there are no loop, the absolute position must not be above 1\r\n\t        this.absPos = Math.min(this.absPos, 1)\r\n\t        this.pos = this.absPos\r\n\t      }\r\n\t\r\n\t      // while the absolute position can be below 0, the position must not be below 0\r\n\t      if(this.pos < 0) this.pos = 0\r\n\t\r\n\t      if(this.situation.reversed) this.pos = 1 - this.pos\r\n\t\r\n\t\r\n\t      // apply easing\r\n\t      var eased = this.situation.ease(this.pos)\r\n\t\r\n\t      // call once-callbacks\r\n\t      for(var i in this.situation.once){\r\n\t        if(i > this.lastPos && i <= eased){\r\n\t          this.situation.once[i].call(this.target(), this.pos, eased)\r\n\t          delete this.situation.once[i]\r\n\t        }\r\n\t      }\r\n\t\r\n\t      // fire during callback with position, eased position and current situation as parameter\r\n\t      if(this.active) this.target().fire('during', {pos: this.pos, eased: eased, fx: this, situation: this.situation})\r\n\t\r\n\t      // the user may call stop or finish in the during callback\r\n\t      // so make sure that we still have a valid situation\r\n\t      if(!this.situation){\r\n\t        return this\r\n\t      }\r\n\t\r\n\t      // apply the actual animation to every property\r\n\t      this.eachAt()\r\n\t\r\n\t      // do final code when situation is finished\r\n\t      if((this.pos == 1 && !this.situation.reversed) || (this.situation.reversed && this.pos == 0)){\r\n\t\r\n\t        // stop animation callback\r\n\t        this.stopAnimFrame()\r\n\t\r\n\t        // fire finished callback with current situation as parameter\r\n\t        this.target().fire('finished', {fx:this, situation: this.situation})\r\n\t\r\n\t        if(!this.situations.length){\r\n\t          this.target().fire('allfinished')\r\n\t\r\n\t          // Recheck the length since the user may call animate in the afterAll callback\r\n\t          if(!this.situations.length){\r\n\t            this.target().off('.fx') // there shouldnt be any binding left, but to make sure...\r\n\t            this.active = false\r\n\t          }\r\n\t        }\r\n\t\r\n\t        // start next animation\r\n\t        if(this.active) this.dequeue()\r\n\t        else this.clearCurrent()\r\n\t\r\n\t      }else if(!this.paused && this.active){\r\n\t        // we continue animating when we are not at the end\r\n\t        this.startAnimFrame()\r\n\t      }\r\n\t\r\n\t      // save last eased position for once callback triggering\r\n\t      this.lastPos = eased\r\n\t      return this\r\n\t\r\n\t    }\r\n\t\r\n\t    // calculates the step for every property and calls block with it\r\n\t  , eachAt: function(){\r\n\t      var i, len, at, self = this, target = this.target(), s = this.situation\r\n\t\r\n\t      // apply animations which can be called trough a method\r\n\t      for(i in s.animations){\r\n\t\r\n\t        at = [].concat(s.animations[i]).map(function(el){\r\n\t          return typeof el !== 'string' && el.at ? el.at(s.ease(self.pos), self.pos) : el\r\n\t        })\r\n\t\r\n\t        target[i].apply(target, at)\r\n\t\r\n\t      }\r\n\t\r\n\t      // apply animation which has to be applied with attr()\r\n\t      for(i in s.attrs){\r\n\t\r\n\t        at = [i].concat(s.attrs[i]).map(function(el){\r\n\t          return typeof el !== 'string' && el.at ? el.at(s.ease(self.pos), self.pos) : el\r\n\t        })\r\n\t\r\n\t        target.attr.apply(target, at)\r\n\t\r\n\t      }\r\n\t\r\n\t      // apply animation which has to be applied with style()\r\n\t      for(i in s.styles){\r\n\t\r\n\t        at = [i].concat(s.styles[i]).map(function(el){\r\n\t          return typeof el !== 'string' && el.at ? el.at(s.ease(self.pos), self.pos) : el\r\n\t        })\r\n\t\r\n\t        target.style.apply(target, at)\r\n\t\r\n\t      }\r\n\t\r\n\t      // animate initialTransformation which has to be chained\r\n\t      if(s.transforms.length){\r\n\t\r\n\t        // get initial initialTransformation\r\n\t        at = s.initialTransformation\r\n\t        for(i = 0, len = s.transforms.length; i < len; i++){\r\n\t\r\n\t          // get next transformation in chain\r\n\t          var a = s.transforms[i]\r\n\t\r\n\t          // multiply matrix directly\r\n\t          if(a instanceof SVG.Matrix){\r\n\t\r\n\t            if(a.relative){\r\n\t              at = at.multiply(new SVG.Matrix().morph(a).at(s.ease(this.pos)))\r\n\t            }else{\r\n\t              at = at.morph(a).at(s.ease(this.pos))\r\n\t            }\r\n\t            continue\r\n\t          }\r\n\t\r\n\t          // when transformation is absolute we have to reset the needed transformation first\r\n\t          if(!a.relative)\r\n\t            a.undo(at.extract())\r\n\t\r\n\t          // and reapply it after\r\n\t          at = at.multiply(a.at(s.ease(this.pos)))\r\n\t\r\n\t        }\r\n\t\r\n\t        // set new matrix on element\r\n\t        target.matrix(at)\r\n\t      }\r\n\t\r\n\t      return this\r\n\t\r\n\t    }\r\n\t\r\n\t\r\n\t    // adds an once-callback which is called at a specific position and never again\r\n\t  , once: function(pos, fn, isEased){\r\n\t      var c = this.last()\r\n\t      if(!isEased) pos = c.ease(pos)\r\n\t\r\n\t      c.once[pos] = fn\r\n\t\r\n\t      return this\r\n\t    }\r\n\t\r\n\t  , _callStart: function() {\r\n\t      setTimeout(function(){this.start()}.bind(this), 0)\r\n\t      return this\r\n\t    }\r\n\t\r\n\t  }\r\n\t\r\n\t, parent: SVG.Element\r\n\t\r\n\t  // Add method to parent elements\r\n\t, construct: {\r\n\t    // Get fx module or create a new one, then animate with given duration and ease\r\n\t    animate: function(o, ease, delay) {\r\n\t      return (this.fx || (this.fx = new SVG.FX(this))).animate(o, ease, delay)\r\n\t    }\r\n\t  , delay: function(delay){\r\n\t      return (this.fx || (this.fx = new SVG.FX(this))).delay(delay)\r\n\t    }\r\n\t  , stop: function(jumpToEnd, clearQueue) {\r\n\t      if (this.fx)\r\n\t        this.fx.stop(jumpToEnd, clearQueue)\r\n\t\r\n\t      return this\r\n\t    }\r\n\t  , finish: function() {\r\n\t      if (this.fx)\r\n\t        this.fx.finish()\r\n\t\r\n\t      return this\r\n\t    }\r\n\t    // Pause current animation\r\n\t  , pause: function() {\r\n\t      if (this.fx)\r\n\t        this.fx.pause()\r\n\t\r\n\t      return this\r\n\t    }\r\n\t    // Play paused current animation\r\n\t  , play: function() {\r\n\t      if (this.fx)\r\n\t        this.fx.play()\r\n\t\r\n\t      return this\r\n\t    }\r\n\t    // Set/Get the speed of the animations\r\n\t  , speed: function(speed) {\r\n\t      if (this.fx)\r\n\t        if (speed == null)\r\n\t          return this.fx.speed()\r\n\t        else\r\n\t          this.fx.speed(speed)\r\n\t\r\n\t      return this\r\n\t    }\r\n\t  }\r\n\t\r\n\t})\r\n\t\r\n\t// MorphObj is used whenever no morphable object is given\r\n\tSVG.MorphObj = SVG.invent({\r\n\t\r\n\t  create: function(from, to){\r\n\t    // prepare color for morphing\r\n\t    if(SVG.Color.isColor(to)) return new SVG.Color(from).morph(to)\r\n\t    // prepare value list for morphing\r\n\t    if(SVG.regex.delimiter.test(from)) return new SVG.Array(from).morph(to)\r\n\t    // prepare number for morphing\r\n\t    if(SVG.regex.numberAndUnit.test(to)) return new SVG.Number(from).morph(to)\r\n\t\r\n\t    // prepare for plain morphing\r\n\t    this.value = from\r\n\t    this.destination = to\r\n\t  }\r\n\t\r\n\t, extend: {\r\n\t    at: function(pos, real){\r\n\t      return real < 1 ? this.value : this.destination\r\n\t    },\r\n\t\r\n\t    valueOf: function(){\r\n\t      return this.value\r\n\t    }\r\n\t  }\r\n\t\r\n\t})\r\n\t\r\n\tSVG.extend(SVG.FX, {\r\n\t  // Add animatable attributes\r\n\t  attr: function(a, v, relative) {\r\n\t    // apply attributes individually\r\n\t    if (typeof a == 'object') {\r\n\t      for (var key in a)\r\n\t        this.attr(key, a[key])\r\n\t\r\n\t    } else {\r\n\t      this.add(a, v, 'attrs')\r\n\t    }\r\n\t\r\n\t    return this\r\n\t  }\r\n\t  // Add animatable styles\r\n\t, style: function(s, v) {\r\n\t    if (typeof s == 'object')\r\n\t      for (var key in s)\r\n\t        this.style(key, s[key])\r\n\t\r\n\t    else\r\n\t      this.add(s, v, 'styles')\r\n\t\r\n\t    return this\r\n\t  }\r\n\t  // Animatable x-axis\r\n\t, x: function(x, relative) {\r\n\t    if(this.target() instanceof SVG.G){\r\n\t      this.transform({x:x}, relative)\r\n\t      return this\r\n\t    }\r\n\t\r\n\t    var num = new SVG.Number(x)\r\n\t    num.relative = relative\r\n\t    return this.add('x', num)\r\n\t  }\r\n\t  // Animatable y-axis\r\n\t, y: function(y, relative) {\r\n\t    if(this.target() instanceof SVG.G){\r\n\t      this.transform({y:y}, relative)\r\n\t      return this\r\n\t    }\r\n\t\r\n\t    var num = new SVG.Number(y)\r\n\t    num.relative = relative\r\n\t    return this.add('y', num)\r\n\t  }\r\n\t  // Animatable center x-axis\r\n\t, cx: function(x) {\r\n\t    return this.add('cx', new SVG.Number(x))\r\n\t  }\r\n\t  // Animatable center y-axis\r\n\t, cy: function(y) {\r\n\t    return this.add('cy', new SVG.Number(y))\r\n\t  }\r\n\t  // Add animatable move\r\n\t, move: function(x, y) {\r\n\t    return this.x(x).y(y)\r\n\t  }\r\n\t  // Add animatable center\r\n\t, center: function(x, y) {\r\n\t    return this.cx(x).cy(y)\r\n\t  }\r\n\t  // Add animatable size\r\n\t, size: function(width, height) {\r\n\t    if (this.target() instanceof SVG.Text) {\r\n\t      // animate font size for Text elements\r\n\t      this.attr('font-size', width)\r\n\t\r\n\t    } else {\r\n\t      // animate bbox based size for all other elements\r\n\t      var box\r\n\t\r\n\t      if(!width || !height){\r\n\t        box = this.target().bbox()\r\n\t      }\r\n\t\r\n\t      if(!width){\r\n\t        width = box.width / box.height  * height\r\n\t      }\r\n\t\r\n\t      if(!height){\r\n\t        height = box.height / box.width  * width\r\n\t      }\r\n\t\r\n\t      this.add('width' , new SVG.Number(width))\r\n\t          .add('height', new SVG.Number(height))\r\n\t\r\n\t    }\r\n\t\r\n\t    return this\r\n\t  }\r\n\t  // Add animatable width\r\n\t, width: function(width) {\r\n\t    return this.add('width', new SVG.Number(width))\r\n\t  }\r\n\t  // Add animatable height\r\n\t, height: function(height) {\r\n\t    return this.add('height', new SVG.Number(height))\r\n\t  }\r\n\t  // Add animatable plot\r\n\t, plot: function(a, b, c, d) {\r\n\t    // Lines can be plotted with 4 arguments\r\n\t    if(arguments.length == 4) {\r\n\t      return this.plot([a, b, c, d])\r\n\t    }\r\n\t\r\n\t    return this.add('plot', new (this.target().morphArray)(a))\r\n\t  }\r\n\t  // Add leading method\r\n\t, leading: function(value) {\r\n\t    return this.target().leading ?\r\n\t      this.add('leading', new SVG.Number(value)) :\r\n\t      this\r\n\t  }\r\n\t  // Add animatable viewbox\r\n\t, viewbox: function(x, y, width, height) {\r\n\t    if (this.target() instanceof SVG.Container) {\r\n\t      this.add('viewbox', new SVG.ViewBox(x, y, width, height))\r\n\t    }\r\n\t\r\n\t    return this\r\n\t  }\r\n\t, update: function(o) {\r\n\t    if (this.target() instanceof SVG.Stop) {\r\n\t      if (typeof o == 'number' || o instanceof SVG.Number) {\r\n\t        return this.update({\r\n\t          offset:  arguments[0]\r\n\t        , color:   arguments[1]\r\n\t        , opacity: arguments[2]\r\n\t        })\r\n\t      }\r\n\t\r\n\t      if (o.opacity != null) this.attr('stop-opacity', o.opacity)\r\n\t      if (o.color   != null) this.attr('stop-color', o.color)\r\n\t      if (o.offset  != null) this.attr('offset', o.offset)\r\n\t    }\r\n\t\r\n\t    return this\r\n\t  }\r\n\t})\r\n\t\n\tSVG.Box = SVG.invent({\r\n\t  create: function(x, y, width, height) {\r\n\t    if (typeof x == 'object' && !(x instanceof SVG.Element)) {\r\n\t      // chromes getBoundingClientRect has no x and y property\r\n\t      return SVG.Box.call(this, x.left != null ? x.left : x.x , x.top != null ? x.top : x.y, x.width, x.height)\r\n\t    } else if (arguments.length == 4) {\r\n\t      this.x = x\r\n\t      this.y = y\r\n\t      this.width = width\r\n\t      this.height = height\r\n\t    }\r\n\t\r\n\t    // add center, right, bottom...\r\n\t    fullBox(this)\r\n\t  }\r\n\t, extend: {\r\n\t    // Merge rect box with another, return a new instance\r\n\t    merge: function(box) {\r\n\t      var b = new this.constructor()\r\n\t\r\n\t      // merge boxes\r\n\t      b.x      = Math.min(this.x, box.x)\r\n\t      b.y      = Math.min(this.y, box.y)\r\n\t      b.width  = Math.max(this.x + this.width,  box.x + box.width)  - b.x\r\n\t      b.height = Math.max(this.y + this.height, box.y + box.height) - b.y\r\n\t\r\n\t      return fullBox(b)\r\n\t    }\r\n\t\r\n\t  , transform: function(m) {\r\n\t      var xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, p, bbox\r\n\t\r\n\t      var pts = [\r\n\t        new SVG.Point(this.x, this.y),\r\n\t        new SVG.Point(this.x2, this.y),\r\n\t        new SVG.Point(this.x, this.y2),\r\n\t        new SVG.Point(this.x2, this.y2)\r\n\t      ]\r\n\t\r\n\t      pts.forEach(function(p) {\r\n\t        p = p.transform(m)\r\n\t        xMin = Math.min(xMin,p.x)\r\n\t        xMax = Math.max(xMax,p.x)\r\n\t        yMin = Math.min(yMin,p.y)\r\n\t        yMax = Math.max(yMax,p.y)\r\n\t      })\r\n\t\r\n\t      bbox = new this.constructor()\r\n\t      bbox.x = xMin\r\n\t      bbox.width = xMax-xMin\r\n\t      bbox.y = yMin\r\n\t      bbox.height = yMax-yMin\r\n\t\r\n\t      fullBox(bbox)\r\n\t\r\n\t      return bbox\r\n\t    }\r\n\t  }\r\n\t})\r\n\t\r\n\tSVG.BBox = SVG.invent({\r\n\t  // Initialize\r\n\t  create: function(element) {\r\n\t    SVG.Box.apply(this, [].slice.call(arguments))\r\n\t\r\n\t    // get values if element is given\r\n\t    if (element instanceof SVG.Element) {\r\n\t      var box\r\n\t\r\n\t      // yes this is ugly, but Firefox can be a pain when it comes to elements that are not yet rendered\r\n\t      try {\r\n\t\r\n\t        if (!document.documentElement.contains){\r\n\t          // This is IE - it does not support contains() for top-level SVGs\r\n\t          var topParent = element.node\r\n\t          while (topParent.parentNode){\r\n\t            topParent = topParent.parentNode\r\n\t          }\r\n\t          if (topParent != document) throw new Exception('Element not in the dom')\r\n\t        } else {\r\n\t          // the element is NOT in the dom, throw error\r\n\t          if(!document.documentElement.contains(element.node)) throw new Exception('Element not in the dom')\r\n\t        }\r\n\t\r\n\t        // find native bbox\r\n\t        box = element.node.getBBox()\r\n\t      } catch(e) {\r\n\t        if(element instanceof SVG.Shape){\r\n\t          var clone = element.clone(SVG.parser.draw.instance).show()\r\n\t          box = clone.node.getBBox()\r\n\t          clone.remove()\r\n\t        }else{\r\n\t          box = {\r\n\t            x:      element.node.clientLeft\r\n\t          , y:      element.node.clientTop\r\n\t          , width:  element.node.clientWidth\r\n\t          , height: element.node.clientHeight\r\n\t          }\r\n\t        }\r\n\t      }\r\n\t\r\n\t      SVG.Box.call(this, box)\r\n\t    }\r\n\t\r\n\t  }\r\n\t\r\n\t  // Define ancestor\r\n\t, inherit: SVG.Box\r\n\t\r\n\t  // Define Parent\r\n\t, parent: SVG.Element\r\n\t\r\n\t  // Constructor\r\n\t, construct: {\r\n\t    // Get bounding box\r\n\t    bbox: function() {\r\n\t      return new SVG.BBox(this)\r\n\t    }\r\n\t  }\r\n\t\r\n\t})\r\n\t\r\n\tSVG.BBox.prototype.constructor = SVG.BBox\r\n\t\r\n\t\r\n\tSVG.extend(SVG.Element, {\r\n\t  tbox: function(){\r\n\t    console.warn('Use of TBox is deprecated and mapped to RBox. Use .rbox() instead.')\r\n\t    return this.rbox(this.doc())\r\n\t  }\r\n\t})\r\n\t\r\n\tSVG.RBox = SVG.invent({\r\n\t  // Initialize\r\n\t  create: function(element) {\r\n\t    SVG.Box.apply(this, [].slice.call(arguments))\r\n\t\r\n\t    if (element instanceof SVG.Element) {\r\n\t      SVG.Box.call(this, element.node.getBoundingClientRect())\r\n\t    }\r\n\t  }\r\n\t\r\n\t, inherit: SVG.Box\r\n\t\r\n\t  // define Parent\r\n\t, parent: SVG.Element\r\n\t\r\n\t, extend: {\r\n\t    addOffset: function() {\r\n\t      // offset by window scroll position, because getBoundingClientRect changes when window is scrolled\r\n\t      this.x += window.pageXOffset\r\n\t      this.y += window.pageYOffset\r\n\t      return this\r\n\t    }\r\n\t  }\r\n\t\r\n\t  // Constructor\r\n\t, construct: {\r\n\t    // Get rect box\r\n\t    rbox: function(el) {\r\n\t      if (el) return new SVG.RBox(this).transform(el.screenCTM().inverse())\r\n\t      return new SVG.RBox(this).addOffset()\r\n\t    }\r\n\t  }\r\n\t\r\n\t})\r\n\t\r\n\tSVG.RBox.prototype.constructor = SVG.RBox\r\n\t\n\tSVG.Matrix = SVG.invent({\r\n\t  // Initialize\r\n\t  create: function(source) {\r\n\t    var i, base = arrayToMatrix([1, 0, 0, 1, 0, 0])\r\n\t\r\n\t    // ensure source as object\r\n\t    source = source instanceof SVG.Element ?\r\n\t      source.matrixify() :\r\n\t    typeof source === 'string' ?\r\n\t      arrayToMatrix(source.split(SVG.regex.delimiter).map(parseFloat)) :\r\n\t    arguments.length == 6 ?\r\n\t      arrayToMatrix([].slice.call(arguments)) :\r\n\t    Array.isArray(source) ?\r\n\t      arrayToMatrix(source) :\r\n\t    typeof source === 'object' ?\r\n\t      source : base\r\n\t\r\n\t    // merge source\r\n\t    for (i = abcdef.length - 1; i >= 0; --i)\r\n\t      this[abcdef[i]] = source[abcdef[i]] != null ?\r\n\t        source[abcdef[i]] : base[abcdef[i]]\r\n\t  }\r\n\t\r\n\t  // Add methods\r\n\t, extend: {\r\n\t    // Extract individual transformations\r\n\t    extract: function() {\r\n\t      // find delta transform points\r\n\t      var px    = deltaTransformPoint(this, 0, 1)\r\n\t        , py    = deltaTransformPoint(this, 1, 0)\r\n\t        , skewX = 180 / Math.PI * Math.atan2(px.y, px.x) - 90\r\n\t\r\n\t      return {\r\n\t        // translation\r\n\t        x:        this.e\r\n\t      , y:        this.f\r\n\t      , transformedX:(this.e * Math.cos(skewX * Math.PI / 180) + this.f * Math.sin(skewX * Math.PI / 180)) / Math.sqrt(this.a * this.a + this.b * this.b)\r\n\t      , transformedY:(this.f * Math.cos(skewX * Math.PI / 180) + this.e * Math.sin(-skewX * Math.PI / 180)) / Math.sqrt(this.c * this.c + this.d * this.d)\r\n\t        // skew\r\n\t      , skewX:    -skewX\r\n\t      , skewY:    180 / Math.PI * Math.atan2(py.y, py.x)\r\n\t        // scale\r\n\t      , scaleX:   Math.sqrt(this.a * this.a + this.b * this.b)\r\n\t      , scaleY:   Math.sqrt(this.c * this.c + this.d * this.d)\r\n\t        // rotation\r\n\t      , rotation: skewX\r\n\t      , a: this.a\r\n\t      , b: this.b\r\n\t      , c: this.c\r\n\t      , d: this.d\r\n\t      , e: this.e\r\n\t      , f: this.f\r\n\t      , matrix: new SVG.Matrix(this)\r\n\t      }\r\n\t    }\r\n\t    // Clone matrix\r\n\t  , clone: function() {\r\n\t      return new SVG.Matrix(this)\r\n\t    }\r\n\t    // Morph one matrix into another\r\n\t  , morph: function(matrix) {\r\n\t      // store new destination\r\n\t      this.destination = new SVG.Matrix(matrix)\r\n\t\r\n\t      return this\r\n\t    }\r\n\t    // Get morphed matrix at a given position\r\n\t  , at: function(pos) {\r\n\t      // make sure a destination is defined\r\n\t      if (!this.destination) return this\r\n\t\r\n\t      // calculate morphed matrix at a given position\r\n\t      var matrix = new SVG.Matrix({\r\n\t        a: this.a + (this.destination.a - this.a) * pos\r\n\t      , b: this.b + (this.destination.b - this.b) * pos\r\n\t      , c: this.c + (this.destination.c - this.c) * pos\r\n\t      , d: this.d + (this.destination.d - this.d) * pos\r\n\t      , e: this.e + (this.destination.e - this.e) * pos\r\n\t      , f: this.f + (this.destination.f - this.f) * pos\r\n\t      })\r\n\t\r\n\t      return matrix\r\n\t    }\r\n\t    // Multiplies by given matrix\r\n\t  , multiply: function(matrix) {\r\n\t      return new SVG.Matrix(this.native().multiply(parseMatrix(matrix).native()))\r\n\t    }\r\n\t    // Inverses matrix\r\n\t  , inverse: function() {\r\n\t      return new SVG.Matrix(this.native().inverse())\r\n\t    }\r\n\t    // Translate matrix\r\n\t  , translate: function(x, y) {\r\n\t      return new SVG.Matrix(this.native().translate(x || 0, y || 0))\r\n\t    }\r\n\t    // Scale matrix\r\n\t  , scale: function(x, y, cx, cy) {\r\n\t      // support uniformal scale\r\n\t      if (arguments.length == 1) {\r\n\t        y = x\r\n\t      } else if (arguments.length == 3) {\r\n\t        cy = cx\r\n\t        cx = y\r\n\t        y = x\r\n\t      }\r\n\t\r\n\t      return this.around(cx, cy, new SVG.Matrix(x, 0, 0, y, 0, 0))\r\n\t    }\r\n\t    // Rotate matrix\r\n\t  , rotate: function(r, cx, cy) {\r\n\t      // convert degrees to radians\r\n\t      r = SVG.utils.radians(r)\r\n\t\r\n\t      return this.around(cx, cy, new SVG.Matrix(Math.cos(r), Math.sin(r), -Math.sin(r), Math.cos(r), 0, 0))\r\n\t    }\r\n\t    // Flip matrix on x or y, at a given offset\r\n\t  , flip: function(a, o) {\r\n\t      return a == 'x' ?\r\n\t          this.scale(-1, 1, o, 0) :\r\n\t        a == 'y' ?\r\n\t          this.scale(1, -1, 0, o) :\r\n\t          this.scale(-1, -1, a, o != null ? o : a)\r\n\t    }\r\n\t    // Skew\r\n\t  , skew: function(x, y, cx, cy) {\r\n\t      // support uniformal skew\r\n\t      if (arguments.length == 1) {\r\n\t        y = x\r\n\t      } else if (arguments.length == 3) {\r\n\t        cy = cx\r\n\t        cx = y\r\n\t        y = x\r\n\t      }\r\n\t\r\n\t      // convert degrees to radians\r\n\t      x = SVG.utils.radians(x)\r\n\t      y = SVG.utils.radians(y)\r\n\t\r\n\t      return this.around(cx, cy, new SVG.Matrix(1, Math.tan(y), Math.tan(x), 1, 0, 0))\r\n\t    }\r\n\t    // SkewX\r\n\t  , skewX: function(x, cx, cy) {\r\n\t      return this.skew(x, 0, cx, cy)\r\n\t    }\r\n\t    // SkewY\r\n\t  , skewY: function(y, cx, cy) {\r\n\t      return this.skew(0, y, cx, cy)\r\n\t    }\r\n\t    // Transform around a center point\r\n\t  , around: function(cx, cy, matrix) {\r\n\t      return this\r\n\t        .multiply(new SVG.Matrix(1, 0, 0, 1, cx || 0, cy || 0))\r\n\t        .multiply(matrix)\r\n\t        .multiply(new SVG.Matrix(1, 0, 0, 1, -cx || 0, -cy || 0))\r\n\t    }\r\n\t    // Convert to native SVGMatrix\r\n\t  , native: function() {\r\n\t      // create new matrix\r\n\t      var matrix = SVG.parser.native.createSVGMatrix()\r\n\t\r\n\t      // update with current values\r\n\t      for (var i = abcdef.length - 1; i >= 0; i--)\r\n\t        matrix[abcdef[i]] = this[abcdef[i]]\r\n\t\r\n\t      return matrix\r\n\t    }\r\n\t    // Convert matrix to string\r\n\t  , toString: function() {\r\n\t      return 'matrix(' + this.a + ',' + this.b + ',' + this.c + ',' + this.d + ',' + this.e + ',' + this.f + ')'\r\n\t    }\r\n\t  }\r\n\t\r\n\t  // Define parent\r\n\t, parent: SVG.Element\r\n\t\r\n\t  // Add parent method\r\n\t, construct: {\r\n\t    // Get current matrix\r\n\t    ctm: function() {\r\n\t      return new SVG.Matrix(this.node.getCTM())\r\n\t    },\r\n\t    // Get current screen matrix\r\n\t    screenCTM: function() {\r\n\t      /* https://bugzilla.mozilla.org/show_bug.cgi?id=1344537\r\n\t         This is needed because FF does not return the transformation matrix\r\n\t         for the inner coordinate system when getScreenCTM() is called on nested svgs.\r\n\t         However all other Browsers do that */\r\n\t      if(this instanceof SVG.Nested) {\r\n\t        var rect = this.rect(1,1)\r\n\t        var m = rect.node.getScreenCTM()\r\n\t        rect.remove()\r\n\t        return new SVG.Matrix(m)\r\n\t      }\r\n\t      return new SVG.Matrix(this.node.getScreenCTM())\r\n\t    }\r\n\t\r\n\t  }\r\n\t\r\n\t})\r\n\t\n\tSVG.Point = SVG.invent({\r\n\t  // Initialize\r\n\t  create: function(x,y) {\r\n\t    var i, source, base = {x:0, y:0}\r\n\t\r\n\t    // ensure source as object\r\n\t    source = Array.isArray(x) ?\r\n\t      {x:x[0], y:x[1]} :\r\n\t    typeof x === 'object' ?\r\n\t      {x:x.x, y:x.y} :\r\n\t    x != null ?\r\n\t      {x:x, y:(y != null ? y : x)} : base // If y has no value, then x is used has its value\r\n\t\r\n\t    // merge source\r\n\t    this.x = source.x\r\n\t    this.y = source.y\r\n\t  }\r\n\t\r\n\t  // Add methods\r\n\t, extend: {\r\n\t    // Clone point\r\n\t    clone: function() {\r\n\t      return new SVG.Point(this)\r\n\t    }\r\n\t    // Morph one point into another\r\n\t  , morph: function(x, y) {\r\n\t      // store new destination\r\n\t      this.destination = new SVG.Point(x, y)\r\n\t\r\n\t      return this\r\n\t    }\r\n\t    // Get morphed point at a given position\r\n\t  , at: function(pos) {\r\n\t      // make sure a destination is defined\r\n\t      if (!this.destination) return this\r\n\t\r\n\t      // calculate morphed matrix at a given position\r\n\t      var point = new SVG.Point({\r\n\t        x: this.x + (this.destination.x - this.x) * pos\r\n\t      , y: this.y + (this.destination.y - this.y) * pos\r\n\t      })\r\n\t\r\n\t      return point\r\n\t    }\r\n\t    // Convert to native SVGPoint\r\n\t  , native: function() {\r\n\t      // create new point\r\n\t      var point = SVG.parser.native.createSVGPoint()\r\n\t\r\n\t      // update with current values\r\n\t      point.x = this.x\r\n\t      point.y = this.y\r\n\t\r\n\t      return point\r\n\t    }\r\n\t    // transform point with matrix\r\n\t  , transform: function(matrix) {\r\n\t      return new SVG.Point(this.native().matrixTransform(matrix.native()))\r\n\t    }\r\n\t\r\n\t  }\r\n\t\r\n\t})\r\n\t\r\n\tSVG.extend(SVG.Element, {\r\n\t\r\n\t  // Get point\r\n\t  point: function(x, y) {\r\n\t    return new SVG.Point(x,y).transform(this.screenCTM().inverse());\r\n\t  }\r\n\t\r\n\t})\r\n\t\n\tSVG.extend(SVG.Element, {\r\n\t  // Set svg element attribute\r\n\t  attr: function(a, v, n) {\r\n\t    // act as full getter\r\n\t    if (a == null) {\r\n\t      // get an object of attributes\r\n\t      a = {}\r\n\t      v = this.node.attributes\r\n\t      for (n = v.length - 1; n >= 0; n--)\r\n\t        a[v[n].nodeName] = SVG.regex.isNumber.test(v[n].nodeValue) ? parseFloat(v[n].nodeValue) : v[n].nodeValue\r\n\t\r\n\t      return a\r\n\t\r\n\t    } else if (typeof a == 'object') {\r\n\t      // apply every attribute individually if an object is passed\r\n\t      for (v in a) this.attr(v, a[v])\r\n\t\r\n\t    } else if (v === null) {\r\n\t        // remove value\r\n\t        this.node.removeAttribute(a)\r\n\t\r\n\t    } else if (v == null) {\r\n\t      // act as a getter if the first and only argument is not an object\r\n\t      v = this.node.getAttribute(a)\r\n\t      return v == null ?\r\n\t        SVG.defaults.attrs[a] :\r\n\t      SVG.regex.isNumber.test(v) ?\r\n\t        parseFloat(v) : v\r\n\t\r\n\t    } else {\r\n\t      // BUG FIX: some browsers will render a stroke if a color is given even though stroke width is 0\r\n\t      if (a == 'stroke-width')\r\n\t        this.attr('stroke', parseFloat(v) > 0 ? this._stroke : null)\r\n\t      else if (a == 'stroke')\r\n\t        this._stroke = v\r\n\t\r\n\t      // convert image fill and stroke to patterns\r\n\t      if (a == 'fill' || a == 'stroke') {\r\n\t        if (SVG.regex.isImage.test(v))\r\n\t          v = this.doc().defs().image(v, 0, 0)\r\n\t\r\n\t        if (v instanceof SVG.Image)\r\n\t          v = this.doc().defs().pattern(0, 0, function() {\r\n\t            this.add(v)\r\n\t          })\r\n\t      }\r\n\t\r\n\t      // ensure correct numeric values (also accepts NaN and Infinity)\r\n\t      if (typeof v === 'number')\r\n\t        v = new SVG.Number(v)\r\n\t\r\n\t      // ensure full hex color\r\n\t      else if (SVG.Color.isColor(v))\r\n\t        v = new SVG.Color(v)\r\n\t\r\n\t      // parse array values\r\n\t      else if (Array.isArray(v))\r\n\t        v = new SVG.Array(v)\r\n\t\r\n\t      // if the passed attribute is leading...\r\n\t      if (a == 'leading') {\r\n\t        // ... call the leading method instead\r\n\t        if (this.leading)\r\n\t          this.leading(v)\r\n\t      } else {\r\n\t        // set given attribute on node\r\n\t        typeof n === 'string' ?\r\n\t          this.node.setAttributeNS(n, a, v.toString()) :\r\n\t          this.node.setAttribute(a, v.toString())\r\n\t      }\r\n\t\r\n\t      // rebuild if required\r\n\t      if (this.rebuild && (a == 'font-size' || a == 'x'))\r\n\t        this.rebuild(a, v)\r\n\t    }\r\n\t\r\n\t    return this\r\n\t  }\r\n\t})\n\tSVG.extend(SVG.Element, {\r\n\t  // Add transformations\r\n\t  transform: function(o, relative) {\r\n\t    // get target in case of the fx module, otherwise reference this\r\n\t    var target = this\r\n\t      , matrix, bbox\r\n\t\r\n\t    // act as a getter\r\n\t    if (typeof o !== 'object') {\r\n\t      // get current matrix\r\n\t      matrix = new SVG.Matrix(target).extract()\r\n\t\r\n\t      return typeof o === 'string' ? matrix[o] : matrix\r\n\t    }\r\n\t\r\n\t    // get current matrix\r\n\t    matrix = new SVG.Matrix(target)\r\n\t\r\n\t    // ensure relative flag\r\n\t    relative = !!relative || !!o.relative\r\n\t\r\n\t    // act on matrix\r\n\t    if (o.a != null) {\r\n\t      matrix = relative ?\r\n\t        // relative\r\n\t        matrix.multiply(new SVG.Matrix(o)) :\r\n\t        // absolute\r\n\t        new SVG.Matrix(o)\r\n\t\r\n\t    // act on rotation\r\n\t    } else if (o.rotation != null) {\r\n\t      // ensure centre point\r\n\t      ensureCentre(o, target)\r\n\t\r\n\t      // apply transformation\r\n\t      matrix = relative ?\r\n\t        // relative\r\n\t        matrix.rotate(o.rotation, o.cx, o.cy) :\r\n\t        // absolute\r\n\t        matrix.rotate(o.rotation - matrix.extract().rotation, o.cx, o.cy)\r\n\t\r\n\t    // act on scale\r\n\t    } else if (o.scale != null || o.scaleX != null || o.scaleY != null) {\r\n\t      // ensure centre point\r\n\t      ensureCentre(o, target)\r\n\t\r\n\t      // ensure scale values on both axes\r\n\t      o.scaleX = o.scale != null ? o.scale : o.scaleX != null ? o.scaleX : 1\r\n\t      o.scaleY = o.scale != null ? o.scale : o.scaleY != null ? o.scaleY : 1\r\n\t\r\n\t      if (!relative) {\r\n\t        // absolute; multiply inversed values\r\n\t        var e = matrix.extract()\r\n\t        o.scaleX = o.scaleX * 1 / e.scaleX\r\n\t        o.scaleY = o.scaleY * 1 / e.scaleY\r\n\t      }\r\n\t\r\n\t      matrix = matrix.scale(o.scaleX, o.scaleY, o.cx, o.cy)\r\n\t\r\n\t    // act on skew\r\n\t    } else if (o.skew != null || o.skewX != null || o.skewY != null) {\r\n\t      // ensure centre point\r\n\t      ensureCentre(o, target)\r\n\t\r\n\t      // ensure skew values on both axes\r\n\t      o.skewX = o.skew != null ? o.skew : o.skewX != null ? o.skewX : 0\r\n\t      o.skewY = o.skew != null ? o.skew : o.skewY != null ? o.skewY : 0\r\n\t\r\n\t      if (!relative) {\r\n\t        // absolute; reset skew values\r\n\t        var e = matrix.extract()\r\n\t        matrix = matrix.multiply(new SVG.Matrix().skew(e.skewX, e.skewY, o.cx, o.cy).inverse())\r\n\t      }\r\n\t\r\n\t      matrix = matrix.skew(o.skewX, o.skewY, o.cx, o.cy)\r\n\t\r\n\t    // act on flip\r\n\t    } else if (o.flip) {\r\n\t      if(o.flip == 'x' || o.flip == 'y') {\r\n\t        o.offset = o.offset == null ? target.bbox()['c' + o.flip] : o.offset\r\n\t      } else {\r\n\t        if(o.offset == null) {\r\n\t          bbox = target.bbox()\r\n\t          o.flip = bbox.cx\r\n\t          o.offset = bbox.cy\r\n\t        } else {\r\n\t          o.flip = o.offset\r\n\t        }\r\n\t      }\r\n\t\r\n\t      matrix = new SVG.Matrix().flip(o.flip, o.offset)\r\n\t\r\n\t    // act on translate\r\n\t    } else if (o.x != null || o.y != null) {\r\n\t      if (relative) {\r\n\t        // relative\r\n\t        matrix = matrix.translate(o.x, o.y)\r\n\t      } else {\r\n\t        // absolute\r\n\t        if (o.x != null) matrix.e = o.x\r\n\t        if (o.y != null) matrix.f = o.y\r\n\t      }\r\n\t    }\r\n\t\r\n\t    return this.attr('transform', matrix)\r\n\t  }\r\n\t})\r\n\t\r\n\tSVG.extend(SVG.FX, {\r\n\t  transform: function(o, relative) {\r\n\t    // get target in case of the fx module, otherwise reference this\r\n\t    var target = this.target()\r\n\t      , matrix, bbox\r\n\t\r\n\t    // act as a getter\r\n\t    if (typeof o !== 'object') {\r\n\t      // get current matrix\r\n\t      matrix = new SVG.Matrix(target).extract()\r\n\t\r\n\t      return typeof o === 'string' ? matrix[o] : matrix\r\n\t    }\r\n\t\r\n\t    // ensure relative flag\r\n\t    relative = !!relative || !!o.relative\r\n\t\r\n\t    // act on matrix\r\n\t    if (o.a != null) {\r\n\t      matrix = new SVG.Matrix(o)\r\n\t\r\n\t    // act on rotation\r\n\t    } else if (o.rotation != null) {\r\n\t      // ensure centre point\r\n\t      ensureCentre(o, target)\r\n\t\r\n\t      // apply transformation\r\n\t      matrix = new SVG.Rotate(o.rotation, o.cx, o.cy)\r\n\t\r\n\t    // act on scale\r\n\t    } else if (o.scale != null || o.scaleX != null || o.scaleY != null) {\r\n\t      // ensure centre point\r\n\t      ensureCentre(o, target)\r\n\t\r\n\t      // ensure scale values on both axes\r\n\t      o.scaleX = o.scale != null ? o.scale : o.scaleX != null ? o.scaleX : 1\r\n\t      o.scaleY = o.scale != null ? o.scale : o.scaleY != null ? o.scaleY : 1\r\n\t\r\n\t      matrix = new SVG.Scale(o.scaleX, o.scaleY, o.cx, o.cy)\r\n\t\r\n\t    // act on skew\r\n\t    } else if (o.skewX != null || o.skewY != null) {\r\n\t      // ensure centre point\r\n\t      ensureCentre(o, target)\r\n\t\r\n\t      // ensure skew values on both axes\r\n\t      o.skewX = o.skewX != null ? o.skewX : 0\r\n\t      o.skewY = o.skewY != null ? o.skewY : 0\r\n\t\r\n\t      matrix = new SVG.Skew(o.skewX, o.skewY, o.cx, o.cy)\r\n\t\r\n\t    // act on flip\r\n\t    } else if (o.flip) {\r\n\t      if(o.flip == 'x' || o.flip == 'y') {\r\n\t        o.offset = o.offset == null ? target.bbox()['c' + o.flip] : o.offset\r\n\t      } else {\r\n\t        if(o.offset == null) {\r\n\t          bbox = target.bbox()\r\n\t          o.flip = bbox.cx\r\n\t          o.offset = bbox.cy\r\n\t        } else {\r\n\t          o.flip = o.offset\r\n\t        }\r\n\t      }\r\n\t\r\n\t      matrix = new SVG.Matrix().flip(o.flip, o.offset)\r\n\t\r\n\t    // act on translate\r\n\t    } else if (o.x != null || o.y != null) {\r\n\t      matrix = new SVG.Translate(o.x, o.y)\r\n\t    }\r\n\t\r\n\t    if(!matrix) return this\r\n\t\r\n\t    matrix.relative = relative\r\n\t\r\n\t    this.last().transforms.push(matrix)\r\n\t\r\n\t    return this._callStart()\r\n\t  }\r\n\t})\r\n\t\r\n\tSVG.extend(SVG.Element, {\r\n\t  // Reset all transformations\r\n\t  untransform: function() {\r\n\t    return this.attr('transform', null)\r\n\t  },\r\n\t  // merge the whole transformation chain into one matrix and returns it\r\n\t  matrixify: function() {\r\n\t\r\n\t    var matrix = (this.attr('transform') || '')\r\n\t      // split transformations\r\n\t      .split(SVG.regex.transforms).slice(0,-1).map(function(str){\r\n\t        // generate key => value pairs\r\n\t        var kv = str.trim().split('(')\r\n\t        return [kv[0], kv[1].split(SVG.regex.delimiter).map(function(str){ return parseFloat(str) })]\r\n\t      })\r\n\t      // merge every transformation into one matrix\r\n\t      .reduce(function(matrix, transform){\r\n\t\r\n\t        if(transform[0] == 'matrix') return matrix.multiply(arrayToMatrix(transform[1]))\r\n\t        return matrix[transform[0]].apply(matrix, transform[1])\r\n\t\r\n\t      }, new SVG.Matrix())\r\n\t\r\n\t    return matrix\r\n\t  },\r\n\t  // add an element to another parent without changing the visual representation on the screen\r\n\t  toParent: function(parent) {\r\n\t    if(this == parent) return this\r\n\t    var ctm = this.screenCTM()\r\n\t    var pCtm = parent.screenCTM().inverse()\r\n\t\r\n\t    this.addTo(parent).untransform().transform(pCtm.multiply(ctm))\r\n\t\r\n\t    return this\r\n\t  },\r\n\t  // same as above with parent equals root-svg\r\n\t  toDoc: function() {\r\n\t    return this.toParent(this.doc())\r\n\t  }\r\n\t\r\n\t})\r\n\t\r\n\tSVG.Transformation = SVG.invent({\r\n\t\r\n\t  create: function(source, inversed){\r\n\t\r\n\t    if(arguments.length > 1 && typeof inversed != 'boolean'){\r\n\t      return this.constructor.call(this, [].slice.call(arguments))\r\n\t    }\r\n\t\r\n\t    if(Array.isArray(source)){\r\n\t      for(var i = 0, len = this.arguments.length; i < len; ++i){\r\n\t        this[this.arguments[i]] = source[i]\r\n\t      }\r\n\t    } else if(typeof source == 'object'){\r\n\t      for(var i = 0, len = this.arguments.length; i < len; ++i){\r\n\t        this[this.arguments[i]] = source[this.arguments[i]]\r\n\t      }\r\n\t    }\r\n\t\r\n\t    this.inversed = false\r\n\t\r\n\t    if(inversed === true){\r\n\t      this.inversed = true\r\n\t    }\r\n\t\r\n\t  }\r\n\t\r\n\t, extend: {\r\n\t\r\n\t    arguments: []\r\n\t  , method: ''\r\n\t\r\n\t  , at: function(pos){\r\n\t\r\n\t      var params = []\r\n\t\r\n\t      for(var i = 0, len = this.arguments.length; i < len; ++i){\r\n\t        params.push(this[this.arguments[i]])\r\n\t      }\r\n\t\r\n\t      var m = this._undo || new SVG.Matrix()\r\n\t\r\n\t      m = new SVG.Matrix().morph(SVG.Matrix.prototype[this.method].apply(m, params)).at(pos)\r\n\t\r\n\t      return this.inversed ? m.inverse() : m\r\n\t\r\n\t    }\r\n\t\r\n\t  , undo: function(o){\r\n\t      for(var i = 0, len = this.arguments.length; i < len; ++i){\r\n\t        o[this.arguments[i]] = typeof this[this.arguments[i]] == 'undefined' ? 0 : o[this.arguments[i]]\r\n\t      }\r\n\t\r\n\t      // The method SVG.Matrix.extract which was used before calling this\r\n\t      // method to obtain a value for the parameter o doesn't return a cx and\r\n\t      // a cy so we use the ones that were provided to this object at its creation\r\n\t      o.cx = this.cx\r\n\t      o.cy = this.cy\r\n\t\r\n\t      this._undo = new SVG[capitalize(this.method)](o, true).at(1)\r\n\t\r\n\t      return this\r\n\t    }\r\n\t\r\n\t  }\r\n\t\r\n\t})\r\n\t\r\n\tSVG.Translate = SVG.invent({\r\n\t\r\n\t  parent: SVG.Matrix\r\n\t, inherit: SVG.Transformation\r\n\t\r\n\t, create: function(source, inversed){\r\n\t    this.constructor.apply(this, [].slice.call(arguments))\r\n\t  }\r\n\t\r\n\t, extend: {\r\n\t    arguments: ['transformedX', 'transformedY']\r\n\t  , method: 'translate'\r\n\t  }\r\n\t\r\n\t})\r\n\t\r\n\tSVG.Rotate = SVG.invent({\r\n\t\r\n\t  parent: SVG.Matrix\r\n\t, inherit: SVG.Transformation\r\n\t\r\n\t, create: function(source, inversed){\r\n\t    this.constructor.apply(this, [].slice.call(arguments))\r\n\t  }\r\n\t\r\n\t, extend: {\r\n\t    arguments: ['rotation', 'cx', 'cy']\r\n\t  , method: 'rotate'\r\n\t  , at: function(pos){\r\n\t      var m = new SVG.Matrix().rotate(new SVG.Number().morph(this.rotation - (this._undo ? this._undo.rotation : 0)).at(pos), this.cx, this.cy)\r\n\t      return this.inversed ? m.inverse() : m\r\n\t    }\r\n\t  , undo: function(o){\r\n\t      this._undo = o\r\n\t      return this\r\n\t    }\r\n\t  }\r\n\t\r\n\t})\r\n\t\r\n\tSVG.Scale = SVG.invent({\r\n\t\r\n\t  parent: SVG.Matrix\r\n\t, inherit: SVG.Transformation\r\n\t\r\n\t, create: function(source, inversed){\r\n\t    this.constructor.apply(this, [].slice.call(arguments))\r\n\t  }\r\n\t\r\n\t, extend: {\r\n\t    arguments: ['scaleX', 'scaleY', 'cx', 'cy']\r\n\t  , method: 'scale'\r\n\t  }\r\n\t\r\n\t})\r\n\t\r\n\tSVG.Skew = SVG.invent({\r\n\t\r\n\t  parent: SVG.Matrix\r\n\t, inherit: SVG.Transformation\r\n\t\r\n\t, create: function(source, inversed){\r\n\t    this.constructor.apply(this, [].slice.call(arguments))\r\n\t  }\r\n\t\r\n\t, extend: {\r\n\t    arguments: ['skewX', 'skewY', 'cx', 'cy']\r\n\t  , method: 'skew'\r\n\t  }\r\n\t\r\n\t})\r\n\t\n\tSVG.extend(SVG.Element, {\r\n\t  // Dynamic style generator\r\n\t  style: function(s, v) {\r\n\t    if (arguments.length == 0) {\r\n\t      // get full style\r\n\t      return this.node.style.cssText || ''\r\n\t\r\n\t    } else if (arguments.length < 2) {\r\n\t      // apply every style individually if an object is passed\r\n\t      if (typeof s == 'object') {\r\n\t        for (v in s) this.style(v, s[v])\r\n\t\r\n\t      } else if (SVG.regex.isCss.test(s)) {\r\n\t        // parse css string\r\n\t        s = s.split(/\\s*;\\s*/)\r\n\t          // filter out suffix ; and stuff like ;;\r\n\t          .filter(function(e) { return !!e })\r\n\t          .map(function(e){ return e.split(/\\s*:\\s*/) })\r\n\t\r\n\t        // apply every definition individually\r\n\t        while (v = s.pop()) {\r\n\t          this.style(v[0], v[1])\r\n\t        }\r\n\t      } else {\r\n\t        // act as a getter if the first and only argument is not an object\r\n\t        return this.node.style[camelCase(s)]\r\n\t      }\r\n\t\r\n\t    } else {\r\n\t      this.node.style[camelCase(s)] = v === null || SVG.regex.isBlank.test(v) ? '' : v\r\n\t    }\r\n\t\r\n\t    return this\r\n\t  }\r\n\t})\n\tSVG.Parent = SVG.invent({\r\n\t  // Initialize node\r\n\t  create: function(element) {\r\n\t    this.constructor.call(this, element)\r\n\t  }\r\n\t\r\n\t  // Inherit from\r\n\t, inherit: SVG.Element\r\n\t\r\n\t  // Add class methods\r\n\t, extend: {\r\n\t    // Returns all child elements\r\n\t    children: function() {\r\n\t      return SVG.utils.map(SVG.utils.filterSVGElements(this.node.childNodes), function(node) {\r\n\t        return SVG.adopt(node)\r\n\t      })\r\n\t    }\r\n\t    // Add given element at a position\r\n\t  , add: function(element, i) {\r\n\t      if (i == null)\r\n\t        this.node.appendChild(element.node)\r\n\t      else if (element.node != this.node.childNodes[i])\r\n\t        this.node.insertBefore(element.node, this.node.childNodes[i])\r\n\t\r\n\t      return this\r\n\t    }\r\n\t    // Basically does the same as `add()` but returns the added element instead\r\n\t  , put: function(element, i) {\r\n\t      this.add(element, i)\r\n\t      return element\r\n\t    }\r\n\t    // Checks if the given element is a child\r\n\t  , has: function(element) {\r\n\t      return this.index(element) >= 0\r\n\t    }\r\n\t    // Gets index of given element\r\n\t  , index: function(element) {\r\n\t      return [].slice.call(this.node.childNodes).indexOf(element.node)\r\n\t    }\r\n\t    // Get a element at the given index\r\n\t  , get: function(i) {\r\n\t      return SVG.adopt(this.node.childNodes[i])\r\n\t    }\r\n\t    // Get first child\r\n\t  , first: function() {\r\n\t      return this.get(0)\r\n\t    }\r\n\t    // Get the last child\r\n\t  , last: function() {\r\n\t      return this.get(this.node.childNodes.length - 1)\r\n\t    }\r\n\t    // Iterates over all children and invokes a given block\r\n\t  , each: function(block, deep) {\r\n\t      var i, il\r\n\t        , children = this.children()\r\n\t\r\n\t      for (i = 0, il = children.length; i < il; i++) {\r\n\t        if (children[i] instanceof SVG.Element)\r\n\t          block.apply(children[i], [i, children])\r\n\t\r\n\t        if (deep && (children[i] instanceof SVG.Container))\r\n\t          children[i].each(block, deep)\r\n\t      }\r\n\t\r\n\t      return this\r\n\t    }\r\n\t    // Remove a given child\r\n\t  , removeElement: function(element) {\r\n\t      this.node.removeChild(element.node)\r\n\t\r\n\t      return this\r\n\t    }\r\n\t    // Remove all elements in this container\r\n\t  , clear: function() {\r\n\t      // remove children\r\n\t      while(this.node.hasChildNodes())\r\n\t        this.node.removeChild(this.node.lastChild)\r\n\t\r\n\t      // remove defs reference\r\n\t      delete this._defs\r\n\t\r\n\t      return this\r\n\t    }\r\n\t  , // Get defs\r\n\t    defs: function() {\r\n\t      return this.doc().defs()\r\n\t    }\r\n\t  }\r\n\t\r\n\t})\r\n\t\n\tSVG.extend(SVG.Parent, {\r\n\t\r\n\t  ungroup: function(parent, depth) {\r\n\t    if(depth === 0 || this instanceof SVG.Defs || this.node == SVG.parser.draw) return this\r\n\t\r\n\t    parent = parent || (this instanceof SVG.Doc ? this : this.parent(SVG.Parent))\r\n\t    depth = depth || Infinity\r\n\t\r\n\t    this.each(function(){\r\n\t      if(this instanceof SVG.Defs) return this\r\n\t      if(this instanceof SVG.Parent) return this.ungroup(parent, depth-1)\r\n\t      return this.toParent(parent)\r\n\t    })\r\n\t\r\n\t    this.node.firstChild || this.remove()\r\n\t\r\n\t    return this\r\n\t  },\r\n\t\r\n\t  flatten: function(parent, depth) {\r\n\t    return this.ungroup(parent, depth)\r\n\t  }\r\n\t\r\n\t})\n\tSVG.Container = SVG.invent({\r\n\t  // Initialize node\r\n\t  create: function(element) {\r\n\t    this.constructor.call(this, element)\r\n\t  }\r\n\t\r\n\t  // Inherit from\r\n\t, inherit: SVG.Parent\r\n\t\r\n\t})\n\t\r\n\tSVG.ViewBox = SVG.invent({\r\n\t\r\n\t  create: function(source) {\r\n\t    var i, base = [0, 0, 0, 0]\r\n\t\r\n\t    var x, y, width, height, box, view, we, he\r\n\t      , wm   = 1 // width multiplier\r\n\t      , hm   = 1 // height multiplier\r\n\t      , reg  = /[+-]?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?/gi\r\n\t\r\n\t    if(source instanceof SVG.Element){\r\n\t\r\n\t      we = source\r\n\t      he = source\r\n\t      view = (source.attr('viewBox') || '').match(reg)\r\n\t      box = source.bbox\r\n\t\r\n\t      // get dimensions of current node\r\n\t      width  = new SVG.Number(source.width())\r\n\t      height = new SVG.Number(source.height())\r\n\t\r\n\t      // find nearest non-percentual dimensions\r\n\t      while (width.unit == '%') {\r\n\t        wm *= width.value\r\n\t        width = new SVG.Number(we instanceof SVG.Doc ? we.parent().offsetWidth : we.parent().width())\r\n\t        we = we.parent()\r\n\t      }\r\n\t      while (height.unit == '%') {\r\n\t        hm *= height.value\r\n\t        height = new SVG.Number(he instanceof SVG.Doc ? he.parent().offsetHeight : he.parent().height())\r\n\t        he = he.parent()\r\n\t      }\r\n\t\r\n\t      // ensure defaults\r\n\t      this.x      = 0\r\n\t      this.y      = 0\r\n\t      this.width  = width  * wm\r\n\t      this.height = height * hm\r\n\t      this.zoom   = 1\r\n\t\r\n\t      if (view) {\r\n\t        // get width and height from viewbox\r\n\t        x      = parseFloat(view[0])\r\n\t        y      = parseFloat(view[1])\r\n\t        width  = parseFloat(view[2])\r\n\t        height = parseFloat(view[3])\r\n\t\r\n\t        // calculate zoom accoring to viewbox\r\n\t        this.zoom = ((this.width / this.height) > (width / height)) ?\r\n\t          this.height / height :\r\n\t          this.width  / width\r\n\t\r\n\t        // calculate real pixel dimensions on parent SVG.Doc element\r\n\t        this.x      = x\r\n\t        this.y      = y\r\n\t        this.width  = width\r\n\t        this.height = height\r\n\t\r\n\t      }\r\n\t\r\n\t    }else{\r\n\t\r\n\t      // ensure source as object\r\n\t      source = typeof source === 'string' ?\r\n\t        source.match(reg).map(function(el){ return parseFloat(el) }) :\r\n\t      Array.isArray(source) ?\r\n\t        source :\r\n\t      typeof source == 'object' ?\r\n\t        [source.x, source.y, source.width, source.height] :\r\n\t      arguments.length == 4 ?\r\n\t        [].slice.call(arguments) :\r\n\t        base\r\n\t\r\n\t      this.x = source[0]\r\n\t      this.y = source[1]\r\n\t      this.width = source[2]\r\n\t      this.height = source[3]\r\n\t    }\r\n\t\r\n\t\r\n\t  }\r\n\t\r\n\t, extend: {\r\n\t\r\n\t    toString: function() {\r\n\t      return this.x + ' ' + this.y + ' ' + this.width + ' ' + this.height\r\n\t    }\r\n\t  , morph: function(x, y, width, height){\r\n\t      this.destination = new SVG.ViewBox(x, y, width, height)\r\n\t      return this\r\n\t    }\r\n\t\r\n\t  , at: function(pos) {\r\n\t\r\n\t      if(!this.destination) return this\r\n\t\r\n\t      return new SVG.ViewBox([\r\n\t          this.x + (this.destination.x - this.x) * pos\r\n\t        , this.y + (this.destination.y - this.y) * pos\r\n\t        , this.width + (this.destination.width - this.width) * pos\r\n\t        , this.height + (this.destination.height - this.height) * pos\r\n\t      ])\r\n\t\r\n\t    }\r\n\t\r\n\t  }\r\n\t\r\n\t  // Define parent\r\n\t, parent: SVG.Container\r\n\t\r\n\t  // Add parent method\r\n\t, construct: {\r\n\t\r\n\t    // get/set viewbox\r\n\t    viewbox: function(x, y, width, height) {\r\n\t      if (arguments.length == 0)\r\n\t        // act as a getter if there are no arguments\r\n\t        return new SVG.ViewBox(this)\r\n\t\r\n\t      // otherwise act as a setter\r\n\t      return this.attr('viewBox', new SVG.ViewBox(x, y, width, height))\r\n\t    }\r\n\t\r\n\t  }\r\n\t\r\n\t})\n\t// Add events to elements\r\n\t;[  'click'\r\n\t  , 'dblclick'\r\n\t  , 'mousedown'\r\n\t  , 'mouseup'\r\n\t  , 'mouseover'\r\n\t  , 'mouseout'\r\n\t  , 'mousemove'\r\n\t  // , 'mouseenter' -> not supported by IE\r\n\t  // , 'mouseleave' -> not supported by IE\r\n\t  , 'touchstart'\r\n\t  , 'touchmove'\r\n\t  , 'touchleave'\r\n\t  , 'touchend'\r\n\t  , 'touchcancel' ].forEach(function(event) {\r\n\t\r\n\t  // add event to SVG.Element\r\n\t  SVG.Element.prototype[event] = function(f) {\r\n\t    // bind event to element rather than element node\r\n\t    SVG.on(this.node, event, f)\r\n\t    return this\r\n\t  }\r\n\t})\r\n\t\r\n\t// Initialize listeners stack\r\n\tSVG.listeners = []\r\n\tSVG.handlerMap = []\r\n\tSVG.listenerId = 0\r\n\t\r\n\t// Add event binder in the SVG namespace\r\n\tSVG.on = function(node, event, listener, binding, options) {\r\n\t  // create listener, get object-index\r\n\t  var l     = listener.bind(binding || node.instance || node)\r\n\t    , index = (SVG.handlerMap.indexOf(node) + 1 || SVG.handlerMap.push(node)) - 1\r\n\t    , ev    = event.split('.')[0]\r\n\t    , ns    = event.split('.')[1] || '*'\r\n\t\r\n\t\r\n\t  // ensure valid object\r\n\t  SVG.listeners[index]         = SVG.listeners[index]         || {}\r\n\t  SVG.listeners[index][ev]     = SVG.listeners[index][ev]     || {}\r\n\t  SVG.listeners[index][ev][ns] = SVG.listeners[index][ev][ns] || {}\r\n\t\r\n\t  if(!listener._svgjsListenerId)\r\n\t    listener._svgjsListenerId = ++SVG.listenerId\r\n\t\r\n\t  // reference listener\r\n\t  SVG.listeners[index][ev][ns][listener._svgjsListenerId] = l\r\n\t\r\n\t  // add listener\r\n\t  node.addEventListener(ev, l, options || false)\r\n\t}\r\n\t\r\n\t// Add event unbinder in the SVG namespace\r\n\tSVG.off = function(node, event, listener) {\r\n\t  var index = SVG.handlerMap.indexOf(node)\r\n\t    , ev    = event && event.split('.')[0]\r\n\t    , ns    = event && event.split('.')[1]\r\n\t    , namespace = ''\r\n\t\r\n\t  if(index == -1) return\r\n\t\r\n\t  if (listener) {\r\n\t    if(typeof listener == 'function') listener = listener._svgjsListenerId\r\n\t    if(!listener) return\r\n\t\r\n\t    // remove listener reference\r\n\t    if (SVG.listeners[index][ev] && SVG.listeners[index][ev][ns || '*']) {\r\n\t      // remove listener\r\n\t      node.removeEventListener(ev, SVG.listeners[index][ev][ns || '*'][listener], false)\r\n\t\r\n\t      delete SVG.listeners[index][ev][ns || '*'][listener]\r\n\t    }\r\n\t\r\n\t  } else if (ns && ev) {\r\n\t    // remove all listeners for a namespaced event\r\n\t    if (SVG.listeners[index][ev] && SVG.listeners[index][ev][ns]) {\r\n\t      for (listener in SVG.listeners[index][ev][ns])\r\n\t        SVG.off(node, [ev, ns].join('.'), listener)\r\n\t\r\n\t      delete SVG.listeners[index][ev][ns]\r\n\t    }\r\n\t\r\n\t  } else if (ns){\r\n\t    // remove all listeners for a specific namespace\r\n\t    for(event in SVG.listeners[index]){\r\n\t        for(namespace in SVG.listeners[index][event]){\r\n\t            if(ns === namespace){\r\n\t                SVG.off(node, [event, ns].join('.'))\r\n\t            }\r\n\t        }\r\n\t    }\r\n\t\r\n\t  } else if (ev) {\r\n\t    // remove all listeners for the event\r\n\t    if (SVG.listeners[index][ev]) {\r\n\t      for (namespace in SVG.listeners[index][ev])\r\n\t        SVG.off(node, [ev, namespace].join('.'))\r\n\t\r\n\t      delete SVG.listeners[index][ev]\r\n\t    }\r\n\t\r\n\t  } else {\r\n\t    // remove all listeners on a given node\r\n\t    for (event in SVG.listeners[index])\r\n\t      SVG.off(node, event)\r\n\t\r\n\t    delete SVG.listeners[index]\r\n\t    delete SVG.handlerMap[index]\r\n\t\r\n\t  }\r\n\t}\r\n\t\r\n\t//\r\n\tSVG.extend(SVG.Element, {\r\n\t  // Bind given event to listener\r\n\t  on: function(event, listener, binding, options) {\r\n\t    SVG.on(this.node, event, listener, binding, options)\r\n\t\r\n\t    return this\r\n\t  }\r\n\t  // Unbind event from listener\r\n\t, off: function(event, listener) {\r\n\t    SVG.off(this.node, event, listener)\r\n\t\r\n\t    return this\r\n\t  }\r\n\t  // Fire given event\r\n\t, fire: function(event, data) {\r\n\t\r\n\t    // Dispatch event\r\n\t    if(event instanceof window.Event){\r\n\t        this.node.dispatchEvent(event)\r\n\t    }else{\r\n\t        this.node.dispatchEvent(event = new window.CustomEvent(event, {detail:data, cancelable: true}))\r\n\t    }\r\n\t\r\n\t    this._event = event\r\n\t    return this\r\n\t  }\r\n\t, event: function() {\r\n\t    return this._event\r\n\t  }\r\n\t})\r\n\t\n\t\r\n\tSVG.Defs = SVG.invent({\r\n\t  // Initialize node\r\n\t  create: 'defs'\r\n\t\r\n\t  // Inherit from\r\n\t, inherit: SVG.Container\r\n\t\r\n\t})\n\tSVG.G = SVG.invent({\r\n\t  // Initialize node\r\n\t  create: 'g'\r\n\t\r\n\t  // Inherit from\r\n\t, inherit: SVG.Container\r\n\t\r\n\t  // Add class methods\r\n\t, extend: {\r\n\t    // Move over x-axis\r\n\t    x: function(x) {\r\n\t      return x == null ? this.transform('x') : this.transform({ x: x - this.x() }, true)\r\n\t    }\r\n\t    // Move over y-axis\r\n\t  , y: function(y) {\r\n\t      return y == null ? this.transform('y') : this.transform({ y: y - this.y() }, true)\r\n\t    }\r\n\t    // Move by center over x-axis\r\n\t  , cx: function(x) {\r\n\t      return x == null ? this.gbox().cx : this.x(x - this.gbox().width / 2)\r\n\t    }\r\n\t    // Move by center over y-axis\r\n\t  , cy: function(y) {\r\n\t      return y == null ? this.gbox().cy : this.y(y - this.gbox().height / 2)\r\n\t    }\r\n\t  , gbox: function() {\r\n\t\r\n\t      var bbox  = this.bbox()\r\n\t        , trans = this.transform()\r\n\t\r\n\t      bbox.x  += trans.x\r\n\t      bbox.x2 += trans.x\r\n\t      bbox.cx += trans.x\r\n\t\r\n\t      bbox.y  += trans.y\r\n\t      bbox.y2 += trans.y\r\n\t      bbox.cy += trans.y\r\n\t\r\n\t      return bbox\r\n\t    }\r\n\t  }\r\n\t\r\n\t  // Add parent method\r\n\t, construct: {\r\n\t    // Create a group element\r\n\t    group: function() {\r\n\t      return this.put(new SVG.G)\r\n\t    }\r\n\t  }\r\n\t})\r\n\t\n\t// ### This module adds backward / forward functionality to elements.\r\n\t\r\n\t//\r\n\tSVG.extend(SVG.Element, {\r\n\t  // Get all siblings, including myself\r\n\t  siblings: function() {\r\n\t    return this.parent().children()\r\n\t  }\r\n\t  // Get the curent position siblings\r\n\t, position: function() {\r\n\t    return this.parent().index(this)\r\n\t  }\r\n\t  // Get the next element (will return null if there is none)\r\n\t, next: function() {\r\n\t    return this.siblings()[this.position() + 1]\r\n\t  }\r\n\t  // Get the next element (will return null if there is none)\r\n\t, previous: function() {\r\n\t    return this.siblings()[this.position() - 1]\r\n\t  }\r\n\t  // Send given element one step forward\r\n\t, forward: function() {\r\n\t    var i = this.position() + 1\r\n\t      , p = this.parent()\r\n\t\r\n\t    // move node one step forward\r\n\t    p.removeElement(this).add(this, i)\r\n\t\r\n\t    // make sure defs node is always at the top\r\n\t    if (p instanceof SVG.Doc)\r\n\t      p.node.appendChild(p.defs().node)\r\n\t\r\n\t    return this\r\n\t  }\r\n\t  // Send given element one step backward\r\n\t, backward: function() {\r\n\t    var i = this.position()\r\n\t\r\n\t    if (i > 0)\r\n\t      this.parent().removeElement(this).add(this, i - 1)\r\n\t\r\n\t    return this\r\n\t  }\r\n\t  // Send given element all the way to the front\r\n\t, front: function() {\r\n\t    var p = this.parent()\r\n\t\r\n\t    // Move node forward\r\n\t    p.node.appendChild(this.node)\r\n\t\r\n\t    // Make sure defs node is always at the top\r\n\t    if (p instanceof SVG.Doc)\r\n\t      p.node.appendChild(p.defs().node)\r\n\t\r\n\t    return this\r\n\t  }\r\n\t  // Send given element all the way to the back\r\n\t, back: function() {\r\n\t    if (this.position() > 0)\r\n\t      this.parent().removeElement(this).add(this, 0)\r\n\t\r\n\t    return this\r\n\t  }\r\n\t  // Inserts a given element before the targeted element\r\n\t, before: function(element) {\r\n\t    element.remove()\r\n\t\r\n\t    var i = this.position()\r\n\t\r\n\t    this.parent().add(element, i)\r\n\t\r\n\t    return this\r\n\t  }\r\n\t  // Insters a given element after the targeted element\r\n\t, after: function(element) {\r\n\t    element.remove()\r\n\t\r\n\t    var i = this.position()\r\n\t\r\n\t    this.parent().add(element, i + 1)\r\n\t\r\n\t    return this\r\n\t  }\r\n\t\r\n\t})\n\tSVG.Mask = SVG.invent({\r\n\t  // Initialize node\r\n\t  create: function() {\r\n\t    this.constructor.call(this, SVG.create('mask'))\r\n\t\r\n\t    // keep references to masked elements\r\n\t    this.targets = []\r\n\t  }\r\n\t\r\n\t  // Inherit from\r\n\t, inherit: SVG.Container\r\n\t\r\n\t  // Add class methods\r\n\t, extend: {\r\n\t    // Unmask all masked elements and remove itself\r\n\t    remove: function() {\r\n\t      // unmask all targets\r\n\t      for (var i = this.targets.length - 1; i >= 0; i--)\r\n\t        if (this.targets[i])\r\n\t          this.targets[i].unmask()\r\n\t      this.targets = []\r\n\t\r\n\t      // remove mask from parent\r\n\t      this.parent().removeElement(this)\r\n\t\r\n\t      return this\r\n\t    }\r\n\t  }\r\n\t\r\n\t  // Add parent method\r\n\t, construct: {\r\n\t    // Create masking element\r\n\t    mask: function() {\r\n\t      return this.defs().put(new SVG.Mask)\r\n\t    }\r\n\t  }\r\n\t})\r\n\t\r\n\t\r\n\tSVG.extend(SVG.Element, {\r\n\t  // Distribute mask to svg element\r\n\t  maskWith: function(element) {\r\n\t    // use given mask or create a new one\r\n\t    this.masker = element instanceof SVG.Mask ? element : this.parent().mask().add(element)\r\n\t\r\n\t    // store reverence on self in mask\r\n\t    this.masker.targets.push(this)\r\n\t\r\n\t    // apply mask\r\n\t    return this.attr('mask', 'url(\"#' + this.masker.attr('id') + '\")')\r\n\t  }\r\n\t  // Unmask element\r\n\t, unmask: function() {\r\n\t    delete this.masker\r\n\t    return this.attr('mask', null)\r\n\t  }\r\n\t\r\n\t})\r\n\t\n\tSVG.ClipPath = SVG.invent({\r\n\t  // Initialize node\r\n\t  create: function() {\r\n\t    this.constructor.call(this, SVG.create('clipPath'))\r\n\t\r\n\t    // keep references to clipped elements\r\n\t    this.targets = []\r\n\t  }\r\n\t\r\n\t  // Inherit from\r\n\t, inherit: SVG.Container\r\n\t\r\n\t  // Add class methods\r\n\t, extend: {\r\n\t    // Unclip all clipped elements and remove itself\r\n\t    remove: function() {\r\n\t      // unclip all targets\r\n\t      for (var i = this.targets.length - 1; i >= 0; i--)\r\n\t        if (this.targets[i])\r\n\t          this.targets[i].unclip()\r\n\t      this.targets = []\r\n\t\r\n\t      // remove clipPath from parent\r\n\t      this.parent().removeElement(this)\r\n\t\r\n\t      return this\r\n\t    }\r\n\t  }\r\n\t\r\n\t  // Add parent method\r\n\t, construct: {\r\n\t    // Create clipping element\r\n\t    clip: function() {\r\n\t      return this.defs().put(new SVG.ClipPath)\r\n\t    }\r\n\t  }\r\n\t})\r\n\t\r\n\t//\r\n\tSVG.extend(SVG.Element, {\r\n\t  // Distribute clipPath to svg element\r\n\t  clipWith: function(element) {\r\n\t    // use given clip or create a new one\r\n\t    this.clipper = element instanceof SVG.ClipPath ? element : this.parent().clip().add(element)\r\n\t\r\n\t    // store reverence on self in mask\r\n\t    this.clipper.targets.push(this)\r\n\t\r\n\t    // apply mask\r\n\t    return this.attr('clip-path', 'url(\"#' + this.clipper.attr('id') + '\")')\r\n\t  }\r\n\t  // Unclip element\r\n\t, unclip: function() {\r\n\t    delete this.clipper\r\n\t    return this.attr('clip-path', null)\r\n\t  }\r\n\t\r\n\t})\n\tSVG.Gradient = SVG.invent({\r\n\t  // Initialize node\r\n\t  create: function(type) {\r\n\t    this.constructor.call(this, SVG.create(type + 'Gradient'))\r\n\t\r\n\t    // store type\r\n\t    this.type = type\r\n\t  }\r\n\t\r\n\t  // Inherit from\r\n\t, inherit: SVG.Container\r\n\t\r\n\t  // Add class methods\r\n\t, extend: {\r\n\t    // Add a color stop\r\n\t    at: function(offset, color, opacity) {\r\n\t      return this.put(new SVG.Stop).update(offset, color, opacity)\r\n\t    }\r\n\t    // Update gradient\r\n\t  , update: function(block) {\r\n\t      // remove all stops\r\n\t      this.clear()\r\n\t\r\n\t      // invoke passed block\r\n\t      if (typeof block == 'function')\r\n\t        block.call(this, this)\r\n\t\r\n\t      return this\r\n\t    }\r\n\t    // Return the fill id\r\n\t  , fill: function() {\r\n\t      return 'url(#' + this.id() + ')'\r\n\t    }\r\n\t    // Alias string convertion to fill\r\n\t  , toString: function() {\r\n\t      return this.fill()\r\n\t    }\r\n\t    // custom attr to handle transform\r\n\t  , attr: function(a, b, c) {\r\n\t      if(a == 'transform') a = 'gradientTransform'\r\n\t      return SVG.Container.prototype.attr.call(this, a, b, c)\r\n\t    }\r\n\t  }\r\n\t\r\n\t  // Add parent method\r\n\t, construct: {\r\n\t    // Create gradient element in defs\r\n\t    gradient: function(type, block) {\r\n\t      return this.defs().gradient(type, block)\r\n\t    }\r\n\t  }\r\n\t})\r\n\t\r\n\t// Add animatable methods to both gradient and fx module\r\n\tSVG.extend(SVG.Gradient, SVG.FX, {\r\n\t  // From position\r\n\t  from: function(x, y) {\r\n\t    return (this._target || this).type == 'radial' ?\r\n\t      this.attr({ fx: new SVG.Number(x), fy: new SVG.Number(y) }) :\r\n\t      this.attr({ x1: new SVG.Number(x), y1: new SVG.Number(y) })\r\n\t  }\r\n\t  // To position\r\n\t, to: function(x, y) {\r\n\t    return (this._target || this).type == 'radial' ?\r\n\t      this.attr({ cx: new SVG.Number(x), cy: new SVG.Number(y) }) :\r\n\t      this.attr({ x2: new SVG.Number(x), y2: new SVG.Number(y) })\r\n\t  }\r\n\t})\r\n\t\r\n\t// Base gradient generation\r\n\tSVG.extend(SVG.Defs, {\r\n\t  // define gradient\r\n\t  gradient: function(type, block) {\r\n\t    return this.put(new SVG.Gradient(type)).update(block)\r\n\t  }\r\n\t\r\n\t})\r\n\t\r\n\tSVG.Stop = SVG.invent({\r\n\t  // Initialize node\r\n\t  create: 'stop'\r\n\t\r\n\t  // Inherit from\r\n\t, inherit: SVG.Element\r\n\t\r\n\t  // Add class methods\r\n\t, extend: {\r\n\t    // add color stops\r\n\t    update: function(o) {\r\n\t      if (typeof o == 'number' || o instanceof SVG.Number) {\r\n\t        o = {\r\n\t          offset:  arguments[0]\r\n\t        , color:   arguments[1]\r\n\t        , opacity: arguments[2]\r\n\t        }\r\n\t      }\r\n\t\r\n\t      // set attributes\r\n\t      if (o.opacity != null) this.attr('stop-opacity', o.opacity)\r\n\t      if (o.color   != null) this.attr('stop-color', o.color)\r\n\t      if (o.offset  != null) this.attr('offset', new SVG.Number(o.offset))\r\n\t\r\n\t      return this\r\n\t    }\r\n\t  }\r\n\t\r\n\t})\r\n\t\n\tSVG.Pattern = SVG.invent({\r\n\t  // Initialize node\r\n\t  create: 'pattern'\r\n\t\r\n\t  // Inherit from\r\n\t, inherit: SVG.Container\r\n\t\r\n\t  // Add class methods\r\n\t, extend: {\r\n\t    // Return the fill id\r\n\t    fill: function() {\r\n\t      return 'url(#' + this.id() + ')'\r\n\t    }\r\n\t    // Update pattern by rebuilding\r\n\t  , update: function(block) {\r\n\t      // remove content\r\n\t      this.clear()\r\n\t\r\n\t      // invoke passed block\r\n\t      if (typeof block == 'function')\r\n\t        block.call(this, this)\r\n\t\r\n\t      return this\r\n\t    }\r\n\t    // Alias string convertion to fill\r\n\t  , toString: function() {\r\n\t      return this.fill()\r\n\t    }\r\n\t    // custom attr to handle transform\r\n\t  , attr: function(a, b, c) {\r\n\t      if(a == 'transform') a = 'patternTransform'\r\n\t      return SVG.Container.prototype.attr.call(this, a, b, c)\r\n\t    }\r\n\t\r\n\t  }\r\n\t\r\n\t  // Add parent method\r\n\t, construct: {\r\n\t    // Create pattern element in defs\r\n\t    pattern: function(width, height, block) {\r\n\t      return this.defs().pattern(width, height, block)\r\n\t    }\r\n\t  }\r\n\t})\r\n\t\r\n\tSVG.extend(SVG.Defs, {\r\n\t  // Define gradient\r\n\t  pattern: function(width, height, block) {\r\n\t    return this.put(new SVG.Pattern).update(block).attr({\r\n\t      x:            0\r\n\t    , y:            0\r\n\t    , width:        width\r\n\t    , height:       height\r\n\t    , patternUnits: 'userSpaceOnUse'\r\n\t    })\r\n\t  }\r\n\t\r\n\t})\n\tSVG.Doc = SVG.invent({\r\n\t  // Initialize node\r\n\t  create: function(element) {\r\n\t    if (element) {\r\n\t      // ensure the presence of a dom element\r\n\t      element = typeof element == 'string' ?\r\n\t        document.getElementById(element) :\r\n\t        element\r\n\t\r\n\t      // If the target is an svg element, use that element as the main wrapper.\r\n\t      // This allows svg.js to work with svg documents as well.\r\n\t      if (element.nodeName == 'svg') {\r\n\t        this.constructor.call(this, element)\r\n\t      } else {\r\n\t        this.constructor.call(this, SVG.create('svg'))\r\n\t        element.appendChild(this.node)\r\n\t        this.size('100%', '100%')\r\n\t      }\r\n\t\r\n\t      // set svg element attributes and ensure defs node\r\n\t      this.namespace().defs()\r\n\t    }\r\n\t  }\r\n\t\r\n\t  // Inherit from\r\n\t, inherit: SVG.Container\r\n\t\r\n\t  // Add class methods\r\n\t, extend: {\r\n\t    // Add namespaces\r\n\t    namespace: function() {\r\n\t      return this\r\n\t        .attr({ xmlns: SVG.ns, version: '1.1' })\r\n\t        .attr('xmlns:xlink', SVG.xlink, SVG.xmlns)\r\n\t        .attr('xmlns:svgjs', SVG.svgjs, SVG.xmlns)\r\n\t    }\r\n\t    // Creates and returns defs element\r\n\t  , defs: function() {\r\n\t      if (!this._defs) {\r\n\t        var defs\r\n\t\r\n\t        // Find or create a defs element in this instance\r\n\t        if (defs = this.node.getElementsByTagName('defs')[0])\r\n\t          this._defs = SVG.adopt(defs)\r\n\t        else\r\n\t          this._defs = new SVG.Defs\r\n\t\r\n\t        // Make sure the defs node is at the end of the stack\r\n\t        this.node.appendChild(this._defs.node)\r\n\t      }\r\n\t\r\n\t      return this._defs\r\n\t    }\r\n\t    // custom parent method\r\n\t  , parent: function() {\r\n\t      return this.node.parentNode.nodeName == '#document' ? null : this.node.parentNode\r\n\t    }\r\n\t    // Fix for possible sub-pixel offset. See:\r\n\t    // https://bugzilla.mozilla.org/show_bug.cgi?id=608812\r\n\t  , spof: function() {\r\n\t      var pos = this.node.getScreenCTM()\r\n\t\r\n\t      if (pos)\r\n\t        this\r\n\t          .style('left', (-pos.e % 1) + 'px')\r\n\t          .style('top',  (-pos.f % 1) + 'px')\r\n\t\r\n\t      return this\r\n\t    }\r\n\t\r\n\t      // Removes the doc from the DOM\r\n\t  , remove: function() {\r\n\t      if(this.parent()) {\r\n\t        this.parent().removeChild(this.node)\r\n\t      }\r\n\t\r\n\t      return this\r\n\t    }\r\n\t  , clear: function() {\r\n\t      // remove children\r\n\t      while(this.node.hasChildNodes())\r\n\t        this.node.removeChild(this.node.lastChild)\r\n\t\r\n\t      // remove defs reference\r\n\t      delete this._defs\r\n\t\r\n\t      // add back parser\r\n\t      if(!SVG.parser.draw.parentNode)\r\n\t        this.node.appendChild(SVG.parser.draw)\r\n\t\r\n\t      return this\r\n\t    }\r\n\t  }\r\n\t\r\n\t})\r\n\t\n\tSVG.Shape = SVG.invent({\r\n\t  // Initialize node\r\n\t  create: function(element) {\r\n\t    this.constructor.call(this, element)\r\n\t  }\r\n\t\r\n\t  // Inherit from\r\n\t, inherit: SVG.Element\r\n\t\r\n\t})\n\t\r\n\tSVG.Bare = SVG.invent({\r\n\t  // Initialize\r\n\t  create: function(element, inherit) {\r\n\t    // construct element\r\n\t    this.constructor.call(this, SVG.create(element))\r\n\t\r\n\t    // inherit custom methods\r\n\t    if (inherit)\r\n\t      for (var method in inherit.prototype)\r\n\t        if (typeof inherit.prototype[method] === 'function')\r\n\t          this[method] = inherit.prototype[method]\r\n\t  }\r\n\t\r\n\t  // Inherit from\r\n\t, inherit: SVG.Element\r\n\t\r\n\t  // Add methods\r\n\t, extend: {\r\n\t    // Insert some plain text\r\n\t    words: function(text) {\r\n\t      // remove contents\r\n\t      while (this.node.hasChildNodes())\r\n\t        this.node.removeChild(this.node.lastChild)\r\n\t\r\n\t      // create text node\r\n\t      this.node.appendChild(document.createTextNode(text))\r\n\t\r\n\t      return this\r\n\t    }\r\n\t  }\r\n\t})\r\n\t\r\n\t\r\n\tSVG.extend(SVG.Parent, {\r\n\t  // Create an element that is not described by SVG.js\r\n\t  element: function(element, inherit) {\r\n\t    return this.put(new SVG.Bare(element, inherit))\r\n\t  }\r\n\t})\r\n\t\n\tSVG.Symbol = SVG.invent({\r\n\t  // Initialize node\r\n\t  create: 'symbol'\r\n\t\r\n\t  // Inherit from\r\n\t, inherit: SVG.Container\r\n\t\r\n\t, construct: {\r\n\t    // create symbol\r\n\t    symbol: function() {\r\n\t      return this.put(new SVG.Symbol)\r\n\t    }\r\n\t  }\r\n\t})\r\n\t\n\tSVG.Use = SVG.invent({\r\n\t  // Initialize node\r\n\t  create: 'use'\r\n\t\r\n\t  // Inherit from\r\n\t, inherit: SVG.Shape\r\n\t\r\n\t  // Add class methods\r\n\t, extend: {\r\n\t    // Use element as a reference\r\n\t    element: function(element, file) {\r\n\t      // Set lined element\r\n\t      return this.attr('href', (file || '') + '#' + element, SVG.xlink)\r\n\t    }\r\n\t  }\r\n\t\r\n\t  // Add parent method\r\n\t, construct: {\r\n\t    // Create a use element\r\n\t    use: function(element, file) {\r\n\t      return this.put(new SVG.Use).element(element, file)\r\n\t    }\r\n\t  }\r\n\t})\n\tSVG.Rect = SVG.invent({\r\n\t  // Initialize node\r\n\t  create: 'rect'\r\n\t\r\n\t  // Inherit from\r\n\t, inherit: SVG.Shape\r\n\t\r\n\t  // Add parent method\r\n\t, construct: {\r\n\t    // Create a rect element\r\n\t    rect: function(width, height) {\r\n\t      return this.put(new SVG.Rect()).size(width, height)\r\n\t    }\r\n\t  }\r\n\t})\n\tSVG.Circle = SVG.invent({\r\n\t  // Initialize node\r\n\t  create: 'circle'\r\n\t\r\n\t  // Inherit from\r\n\t, inherit: SVG.Shape\r\n\t\r\n\t  // Add parent method\r\n\t, construct: {\r\n\t    // Create circle element, based on ellipse\r\n\t    circle: function(size) {\r\n\t      return this.put(new SVG.Circle).rx(new SVG.Number(size).divide(2)).move(0, 0)\r\n\t    }\r\n\t  }\r\n\t})\r\n\t\r\n\tSVG.extend(SVG.Circle, SVG.FX, {\r\n\t  // Radius x value\r\n\t  rx: function(rx) {\r\n\t    return this.attr('r', rx)\r\n\t  }\r\n\t  // Alias radius x value\r\n\t, ry: function(ry) {\r\n\t    return this.rx(ry)\r\n\t  }\r\n\t})\r\n\t\r\n\tSVG.Ellipse = SVG.invent({\r\n\t  // Initialize node\r\n\t  create: 'ellipse'\r\n\t\r\n\t  // Inherit from\r\n\t, inherit: SVG.Shape\r\n\t\r\n\t  // Add parent method\r\n\t, construct: {\r\n\t    // Create an ellipse\r\n\t    ellipse: function(width, height) {\r\n\t      return this.put(new SVG.Ellipse).size(width, height).move(0, 0)\r\n\t    }\r\n\t  }\r\n\t})\r\n\t\r\n\tSVG.extend(SVG.Ellipse, SVG.Rect, SVG.FX, {\r\n\t  // Radius x value\r\n\t  rx: function(rx) {\r\n\t    return this.attr('rx', rx)\r\n\t  }\r\n\t  // Radius y value\r\n\t, ry: function(ry) {\r\n\t    return this.attr('ry', ry)\r\n\t  }\r\n\t})\r\n\t\r\n\t// Add common method\r\n\tSVG.extend(SVG.Circle, SVG.Ellipse, {\r\n\t    // Move over x-axis\r\n\t    x: function(x) {\r\n\t      return x == null ? this.cx() - this.rx() : this.cx(x + this.rx())\r\n\t    }\r\n\t    // Move over y-axis\r\n\t  , y: function(y) {\r\n\t      return y == null ? this.cy() - this.ry() : this.cy(y + this.ry())\r\n\t    }\r\n\t    // Move by center over x-axis\r\n\t  , cx: function(x) {\r\n\t      return x == null ? this.attr('cx') : this.attr('cx', x)\r\n\t    }\r\n\t    // Move by center over y-axis\r\n\t  , cy: function(y) {\r\n\t      return y == null ? this.attr('cy') : this.attr('cy', y)\r\n\t    }\r\n\t    // Set width of element\r\n\t  , width: function(width) {\r\n\t      return width == null ? this.rx() * 2 : this.rx(new SVG.Number(width).divide(2))\r\n\t    }\r\n\t    // Set height of element\r\n\t  , height: function(height) {\r\n\t      return height == null ? this.ry() * 2 : this.ry(new SVG.Number(height).divide(2))\r\n\t    }\r\n\t    // Custom size function\r\n\t  , size: function(width, height) {\r\n\t      var p = proportionalSize(this, width, height)\r\n\t\r\n\t      return this\r\n\t        .rx(new SVG.Number(p.width).divide(2))\r\n\t        .ry(new SVG.Number(p.height).divide(2))\r\n\t    }\r\n\t})\n\tSVG.Line = SVG.invent({\r\n\t  // Initialize node\r\n\t  create: 'line'\r\n\t\r\n\t  // Inherit from\r\n\t, inherit: SVG.Shape\r\n\t\r\n\t  // Add class methods\r\n\t, extend: {\r\n\t    // Get array\r\n\t    array: function() {\r\n\t      return new SVG.PointArray([\r\n\t        [ this.attr('x1'), this.attr('y1') ]\r\n\t      , [ this.attr('x2'), this.attr('y2') ]\r\n\t      ])\r\n\t    }\r\n\t    // Overwrite native plot() method\r\n\t  , plot: function(x1, y1, x2, y2) {\r\n\t      if (x1 == null)\r\n\t        return this.array()\r\n\t      else if (typeof y1 !== 'undefined')\r\n\t        x1 = { x1: x1, y1: y1, x2: x2, y2: y2 }\r\n\t      else\r\n\t        x1 = new SVG.PointArray(x1).toLine()\r\n\t\r\n\t      return this.attr(x1)\r\n\t    }\r\n\t    // Move by left top corner\r\n\t  , move: function(x, y) {\r\n\t      return this.attr(this.array().move(x, y).toLine())\r\n\t    }\r\n\t    // Set element size to given width and height\r\n\t  , size: function(width, height) {\r\n\t      var p = proportionalSize(this, width, height)\r\n\t\r\n\t      return this.attr(this.array().size(p.width, p.height).toLine())\r\n\t    }\r\n\t  }\r\n\t\r\n\t  // Add parent method\r\n\t, construct: {\r\n\t    // Create a line element\r\n\t    line: function(x1, y1, x2, y2) {\r\n\t      // make sure plot is called as a setter\r\n\t      // x1 is not necessarily a number, it can also be an array, a string and a SVG.PointArray\r\n\t      return SVG.Line.prototype.plot.apply(\r\n\t        this.put(new SVG.Line)\r\n\t      , x1 != null ? [x1, y1, x2, y2] : [0, 0, 0, 0]\r\n\t      )\r\n\t    }\r\n\t  }\r\n\t})\r\n\t\n\tSVG.Polyline = SVG.invent({\r\n\t  // Initialize node\r\n\t  create: 'polyline'\r\n\t\r\n\t  // Inherit from\r\n\t, inherit: SVG.Shape\r\n\t\r\n\t  // Add parent method\r\n\t, construct: {\r\n\t    // Create a wrapped polyline element\r\n\t    polyline: function(p) {\r\n\t      // make sure plot is called as a setter\r\n\t      return this.put(new SVG.Polyline).plot(p || new SVG.PointArray)\r\n\t    }\r\n\t  }\r\n\t})\r\n\t\r\n\tSVG.Polygon = SVG.invent({\r\n\t  // Initialize node\r\n\t  create: 'polygon'\r\n\t\r\n\t  // Inherit from\r\n\t, inherit: SVG.Shape\r\n\t\r\n\t  // Add parent method\r\n\t, construct: {\r\n\t    // Create a wrapped polygon element\r\n\t    polygon: function(p) {\r\n\t      // make sure plot is called as a setter\r\n\t      return this.put(new SVG.Polygon).plot(p || new SVG.PointArray)\r\n\t    }\r\n\t  }\r\n\t})\r\n\t\r\n\t// Add polygon-specific functions\r\n\tSVG.extend(SVG.Polyline, SVG.Polygon, {\r\n\t  // Get array\r\n\t  array: function() {\r\n\t    return this._array || (this._array = new SVG.PointArray(this.attr('points')))\r\n\t  }\r\n\t  // Plot new path\r\n\t, plot: function(p) {\r\n\t    return (p == null) ?\r\n\t      this.array() :\r\n\t      this.clear().attr('points', typeof p == 'string' ? p : (this._array = new SVG.PointArray(p)))\r\n\t  }\r\n\t  // Clear array cache\r\n\t, clear: function() {\r\n\t    delete this._array\r\n\t    return this\r\n\t  }\r\n\t  // Move by left top corner\r\n\t, move: function(x, y) {\r\n\t    return this.attr('points', this.array().move(x, y))\r\n\t  }\r\n\t  // Set element size to given width and height\r\n\t, size: function(width, height) {\r\n\t    var p = proportionalSize(this, width, height)\r\n\t\r\n\t    return this.attr('points', this.array().size(p.width, p.height))\r\n\t  }\r\n\t\r\n\t})\r\n\t\n\t// unify all point to point elements\r\n\tSVG.extend(SVG.Line, SVG.Polyline, SVG.Polygon, {\r\n\t  // Define morphable array\r\n\t  morphArray:  SVG.PointArray\r\n\t  // Move by left top corner over x-axis\r\n\t, x: function(x) {\r\n\t    return x == null ? this.bbox().x : this.move(x, this.bbox().y)\r\n\t  }\r\n\t  // Move by left top corner over y-axis\r\n\t, y: function(y) {\r\n\t    return y == null ? this.bbox().y : this.move(this.bbox().x, y)\r\n\t  }\r\n\t  // Set width of element\r\n\t, width: function(width) {\r\n\t    var b = this.bbox()\r\n\t\r\n\t    return width == null ? b.width : this.size(width, b.height)\r\n\t  }\r\n\t  // Set height of element\r\n\t, height: function(height) {\r\n\t    var b = this.bbox()\r\n\t\r\n\t    return height == null ? b.height : this.size(b.width, height)\r\n\t  }\r\n\t})\n\tSVG.Path = SVG.invent({\r\n\t  // Initialize node\r\n\t  create: 'path'\r\n\t\r\n\t  // Inherit from\r\n\t, inherit: SVG.Shape\r\n\t\r\n\t  // Add class methods\r\n\t, extend: {\r\n\t    // Define morphable array\r\n\t    morphArray:  SVG.PathArray\r\n\t    // Get array\r\n\t  , array: function() {\r\n\t      return this._array || (this._array = new SVG.PathArray(this.attr('d')))\r\n\t    }\r\n\t    // Plot new path\r\n\t  , plot: function(d) {\r\n\t      return (d == null) ?\r\n\t        this.array() :\r\n\t        this.clear().attr('d', typeof d == 'string' ? d : (this._array = new SVG.PathArray(d)))\r\n\t    }\r\n\t    // Clear array cache\r\n\t  , clear: function() {\r\n\t      delete this._array\r\n\t      return this\r\n\t    }\r\n\t    // Move by left top corner\r\n\t  , move: function(x, y) {\r\n\t      return this.attr('d', this.array().move(x, y))\r\n\t    }\r\n\t    // Move by left top corner over x-axis\r\n\t  , x: function(x) {\r\n\t      return x == null ? this.bbox().x : this.move(x, this.bbox().y)\r\n\t    }\r\n\t    // Move by left top corner over y-axis\r\n\t  , y: function(y) {\r\n\t      return y == null ? this.bbox().y : this.move(this.bbox().x, y)\r\n\t    }\r\n\t    // Set element size to given width and height\r\n\t  , size: function(width, height) {\r\n\t      var p = proportionalSize(this, width, height)\r\n\t\r\n\t      return this.attr('d', this.array().size(p.width, p.height))\r\n\t    }\r\n\t    // Set width of element\r\n\t  , width: function(width) {\r\n\t      return width == null ? this.bbox().width : this.size(width, this.bbox().height)\r\n\t    }\r\n\t    // Set height of element\r\n\t  , height: function(height) {\r\n\t      return height == null ? this.bbox().height : this.size(this.bbox().width, height)\r\n\t    }\r\n\t\r\n\t  }\r\n\t\r\n\t  // Add parent method\r\n\t, construct: {\r\n\t    // Create a wrapped path element\r\n\t    path: function(d) {\r\n\t      // make sure plot is called as a setter\r\n\t      return this.put(new SVG.Path).plot(d || new SVG.PathArray)\r\n\t    }\r\n\t  }\r\n\t})\r\n\t\n\tSVG.Image = SVG.invent({\r\n\t  // Initialize node\r\n\t  create: 'image'\r\n\t\r\n\t  // Inherit from\r\n\t, inherit: SVG.Shape\r\n\t\r\n\t  // Add class methods\r\n\t, extend: {\r\n\t    // (re)load image\r\n\t    load: function(url) {\r\n\t      if (!url) return this\r\n\t\r\n\t      var self = this\r\n\t        , img  = new window.Image()\r\n\t\r\n\t      // preload image\r\n\t      SVG.on(img, 'load', function() {\r\n\t        SVG.off(img)\r\n\t\r\n\t        var p = self.parent(SVG.Pattern)\r\n\t\r\n\t        if(p === null) return\r\n\t\r\n\t        // ensure image size\r\n\t        if (self.width() == 0 && self.height() == 0)\r\n\t          self.size(img.width, img.height)\r\n\t\r\n\t        // ensure pattern size if not set\r\n\t        if (p && p.width() == 0 && p.height() == 0)\r\n\t          p.size(self.width(), self.height())\r\n\t\r\n\t        // callback\r\n\t        if (typeof self._loaded === 'function')\r\n\t          self._loaded.call(self, {\r\n\t            width:  img.width\r\n\t          , height: img.height\r\n\t          , ratio:  img.width / img.height\r\n\t          , url:    url\r\n\t          })\r\n\t      })\r\n\t\r\n\t      SVG.on(img, 'error', function(e){\r\n\t        SVG.off(img)\r\n\t\r\n\t        if (typeof self._error === 'function'){\r\n\t            self._error.call(self, e)\r\n\t        }\r\n\t      })\r\n\t\r\n\t      return this.attr('href', (img.src = this.src = url), SVG.xlink)\r\n\t    }\r\n\t    // Add loaded callback\r\n\t  , loaded: function(loaded) {\r\n\t      this._loaded = loaded\r\n\t      return this\r\n\t    }\r\n\t\r\n\t  , error: function(error) {\r\n\t      this._error = error\r\n\t      return this\r\n\t    }\r\n\t  }\r\n\t\r\n\t  // Add parent method\r\n\t, construct: {\r\n\t    // create image element, load image and set its size\r\n\t    image: function(source, width, height) {\r\n\t      return this.put(new SVG.Image).load(source).size(width || 0, height || width || 0)\r\n\t    }\r\n\t  }\r\n\t\r\n\t})\n\tSVG.Text = SVG.invent({\r\n\t  // Initialize node\r\n\t  create: function() {\r\n\t    this.constructor.call(this, SVG.create('text'))\r\n\t\r\n\t    this.dom.leading = new SVG.Number(1.3)    // store leading value for rebuilding\r\n\t    this._rebuild = true                      // enable automatic updating of dy values\r\n\t    this._build   = false                     // disable build mode for adding multiple lines\r\n\t\r\n\t    // set default font\r\n\t    this.attr('font-family', SVG.defaults.attrs['font-family'])\r\n\t  }\r\n\t\r\n\t  // Inherit from\r\n\t, inherit: SVG.Shape\r\n\t\r\n\t  // Add class methods\r\n\t, extend: {\r\n\t    // Move over x-axis\r\n\t    x: function(x) {\r\n\t      // act as getter\r\n\t      if (x == null)\r\n\t        return this.attr('x')\r\n\t\r\n\t      return this.attr('x', x)\r\n\t    }\r\n\t    // Move over y-axis\r\n\t  , y: function(y) {\r\n\t      var oy = this.attr('y')\r\n\t        , o  = typeof oy === 'number' ? oy - this.bbox().y : 0\r\n\t\r\n\t      // act as getter\r\n\t      if (y == null)\r\n\t        return typeof oy === 'number' ? oy - o : oy\r\n\t\r\n\t      return this.attr('y', typeof y === 'number' ? y + o : y)\r\n\t    }\r\n\t    // Move center over x-axis\r\n\t  , cx: function(x) {\r\n\t      return x == null ? this.bbox().cx : this.x(x - this.bbox().width / 2)\r\n\t    }\r\n\t    // Move center over y-axis\r\n\t  , cy: function(y) {\r\n\t      return y == null ? this.bbox().cy : this.y(y - this.bbox().height / 2)\r\n\t    }\r\n\t    // Set the text content\r\n\t  , text: function(text) {\r\n\t      // act as getter\r\n\t      if (typeof text === 'undefined'){\r\n\t        var text = ''\r\n\t        var children = this.node.childNodes\r\n\t        for(var i = 0, len = children.length; i < len; ++i){\r\n\t\r\n\t          // add newline if its not the first child and newLined is set to true\r\n\t          if(i != 0 && children[i].nodeType != 3 && SVG.adopt(children[i]).dom.newLined == true){\r\n\t            text += '\\n'\r\n\t          }\r\n\t\r\n\t          // add content of this node\r\n\t          text += children[i].textContent\r\n\t        }\r\n\t\r\n\t        return text\r\n\t      }\r\n\t\r\n\t      // remove existing content\r\n\t      this.clear().build(true)\r\n\t\r\n\t      if (typeof text === 'function') {\r\n\t        // call block\r\n\t        text.call(this, this)\r\n\t\r\n\t      } else {\r\n\t        // store text and make sure text is not blank\r\n\t        text = text.split('\\n')\r\n\t\r\n\t        // build new lines\r\n\t        for (var i = 0, il = text.length; i < il; i++)\r\n\t          this.tspan(text[i]).newLine()\r\n\t      }\r\n\t\r\n\t      // disable build mode and rebuild lines\r\n\t      return this.build(false).rebuild()\r\n\t    }\r\n\t    // Set font size\r\n\t  , size: function(size) {\r\n\t      return this.attr('font-size', size).rebuild()\r\n\t    }\r\n\t    // Set / get leading\r\n\t  , leading: function(value) {\r\n\t      // act as getter\r\n\t      if (value == null)\r\n\t        return this.dom.leading\r\n\t\r\n\t      // act as setter\r\n\t      this.dom.leading = new SVG.Number(value)\r\n\t\r\n\t      return this.rebuild()\r\n\t    }\r\n\t    // Get all the first level lines\r\n\t  , lines: function() {\r\n\t      var node = (this.textPath && this.textPath() || this).node\r\n\t\r\n\t      // filter tspans and map them to SVG.js instances\r\n\t      var lines = SVG.utils.map(SVG.utils.filterSVGElements(node.childNodes), function(el){\r\n\t        return SVG.adopt(el)\r\n\t      })\r\n\t\r\n\t      // return an instance of SVG.set\r\n\t      return new SVG.Set(lines)\r\n\t    }\r\n\t    // Rebuild appearance type\r\n\t  , rebuild: function(rebuild) {\r\n\t      // store new rebuild flag if given\r\n\t      if (typeof rebuild == 'boolean')\r\n\t        this._rebuild = rebuild\r\n\t\r\n\t      // define position of all lines\r\n\t      if (this._rebuild) {\r\n\t        var self = this\r\n\t          , blankLineOffset = 0\r\n\t          , dy = this.dom.leading * new SVG.Number(this.attr('font-size'))\r\n\t\r\n\t        this.lines().each(function() {\r\n\t          if (this.dom.newLined) {\r\n\t            if (!self.textPath())\r\n\t              this.attr('x', self.attr('x'))\r\n\t            if(this.text() == '\\n') {\r\n\t              blankLineOffset += dy\r\n\t            }else{\r\n\t              this.attr('dy', dy + blankLineOffset)\r\n\t              blankLineOffset = 0\r\n\t            }\r\n\t          }\r\n\t        })\r\n\t\r\n\t        this.fire('rebuild')\r\n\t      }\r\n\t\r\n\t      return this\r\n\t    }\r\n\t    // Enable / disable build mode\r\n\t  , build: function(build) {\r\n\t      this._build = !!build\r\n\t      return this\r\n\t    }\r\n\t    // overwrite method from parent to set data properly\r\n\t  , setData: function(o){\r\n\t      this.dom = o\r\n\t      this.dom.leading = new SVG.Number(o.leading || 1.3)\r\n\t      return this\r\n\t    }\r\n\t  }\r\n\t\r\n\t  // Add parent method\r\n\t, construct: {\r\n\t    // Create text element\r\n\t    text: function(text) {\r\n\t      return this.put(new SVG.Text).text(text)\r\n\t    }\r\n\t    // Create plain text element\r\n\t  , plain: function(text) {\r\n\t      return this.put(new SVG.Text).plain(text)\r\n\t    }\r\n\t  }\r\n\t\r\n\t})\r\n\t\r\n\tSVG.Tspan = SVG.invent({\r\n\t  // Initialize node\r\n\t  create: 'tspan'\r\n\t\r\n\t  // Inherit from\r\n\t, inherit: SVG.Shape\r\n\t\r\n\t  // Add class methods\r\n\t, extend: {\r\n\t    // Set text content\r\n\t    text: function(text) {\r\n\t      if(text == null) return this.node.textContent + (this.dom.newLined ? '\\n' : '')\r\n\t\r\n\t      typeof text === 'function' ? text.call(this, this) : this.plain(text)\r\n\t\r\n\t      return this\r\n\t    }\r\n\t    // Shortcut dx\r\n\t  , dx: function(dx) {\r\n\t      return this.attr('dx', dx)\r\n\t    }\r\n\t    // Shortcut dy\r\n\t  , dy: function(dy) {\r\n\t      return this.attr('dy', dy)\r\n\t    }\r\n\t    // Create new line\r\n\t  , newLine: function() {\r\n\t      // fetch text parent\r\n\t      var t = this.parent(SVG.Text)\r\n\t\r\n\t      // mark new line\r\n\t      this.dom.newLined = true\r\n\t\r\n\t      // apply new hy¡n\r\n\t      return this.dy(t.dom.leading * t.attr('font-size')).attr('x', t.x())\r\n\t    }\r\n\t  }\r\n\t\r\n\t})\r\n\t\r\n\tSVG.extend(SVG.Text, SVG.Tspan, {\r\n\t  // Create plain text node\r\n\t  plain: function(text) {\r\n\t    // clear if build mode is disabled\r\n\t    if (this._build === false)\r\n\t      this.clear()\r\n\t\r\n\t    // create text node\r\n\t    this.node.appendChild(document.createTextNode(text))\r\n\t\r\n\t    return this\r\n\t  }\r\n\t  // Create a tspan\r\n\t, tspan: function(text) {\r\n\t    var node  = (this.textPath && this.textPath() || this).node\r\n\t      , tspan = new SVG.Tspan\r\n\t\r\n\t    // clear if build mode is disabled\r\n\t    if (this._build === false)\r\n\t      this.clear()\r\n\t\r\n\t    // add new tspan\r\n\t    node.appendChild(tspan.node)\r\n\t\r\n\t    return tspan.text(text)\r\n\t  }\r\n\t  // Clear all lines\r\n\t, clear: function() {\r\n\t    var node = (this.textPath && this.textPath() || this).node\r\n\t\r\n\t    // remove existing child nodes\r\n\t    while (node.hasChildNodes())\r\n\t      node.removeChild(node.lastChild)\r\n\t\r\n\t    return this\r\n\t  }\r\n\t  // Get length of text element\r\n\t, length: function() {\r\n\t    return this.node.getComputedTextLength()\r\n\t  }\r\n\t})\r\n\t\n\tSVG.TextPath = SVG.invent({\r\n\t  // Initialize node\r\n\t  create: 'textPath'\r\n\t\r\n\t  // Inherit from\r\n\t, inherit: SVG.Parent\r\n\t\r\n\t  // Define parent class\r\n\t, parent: SVG.Text\r\n\t\r\n\t  // Add parent method\r\n\t, construct: {\r\n\t    morphArray: SVG.PathArray\r\n\t    // Create path for text to run on\r\n\t  , path: function(d) {\r\n\t      // create textPath element\r\n\t      var path  = new SVG.TextPath\r\n\t        , track = this.doc().defs().path(d)\r\n\t\r\n\t      // move lines to textpath\r\n\t      while (this.node.hasChildNodes())\r\n\t        path.node.appendChild(this.node.firstChild)\r\n\t\r\n\t      // add textPath element as child node\r\n\t      this.node.appendChild(path.node)\r\n\t\r\n\t      // link textPath to path and add content\r\n\t      path.attr('href', '#' + track, SVG.xlink)\r\n\t\r\n\t      return this\r\n\t    }\r\n\t    // return the array of the path track element\r\n\t  , array: function() {\r\n\t      var track = this.track()\r\n\t\r\n\t      return track ? track.array() : null\r\n\t    }\r\n\t    // Plot path if any\r\n\t  , plot: function(d) {\r\n\t      var track = this.track()\r\n\t        , pathArray = null\r\n\t\r\n\t      if (track) {\r\n\t        pathArray = track.plot(d)\r\n\t      }\r\n\t\r\n\t      return (d == null) ? pathArray : this\r\n\t    }\r\n\t    // Get the path track element\r\n\t  , track: function() {\r\n\t      var path = this.textPath()\r\n\t\r\n\t      if (path)\r\n\t        return path.reference('href')\r\n\t    }\r\n\t    // Get the textPath child\r\n\t  , textPath: function() {\r\n\t      if (this.node.firstChild && this.node.firstChild.nodeName == 'textPath')\r\n\t        return SVG.adopt(this.node.firstChild)\r\n\t    }\r\n\t  }\r\n\t})\r\n\t\n\tSVG.Nested = SVG.invent({\r\n\t  // Initialize node\r\n\t  create: function() {\r\n\t    this.constructor.call(this, SVG.create('svg'))\r\n\t\r\n\t    this.style('overflow', 'visible')\r\n\t  }\r\n\t\r\n\t  // Inherit from\r\n\t, inherit: SVG.Container\r\n\t\r\n\t  // Add parent method\r\n\t, construct: {\r\n\t    // Create nested svg document\r\n\t    nested: function() {\r\n\t      return this.put(new SVG.Nested)\r\n\t    }\r\n\t  }\r\n\t})\n\tSVG.A = SVG.invent({\r\n\t  // Initialize node\r\n\t  create: 'a'\r\n\t\r\n\t  // Inherit from\r\n\t, inherit: SVG.Container\r\n\t\r\n\t  // Add class methods\r\n\t, extend: {\r\n\t    // Link url\r\n\t    to: function(url) {\r\n\t      return this.attr('href', url, SVG.xlink)\r\n\t    }\r\n\t    // Link show attribute\r\n\t  , show: function(target) {\r\n\t      return this.attr('show', target, SVG.xlink)\r\n\t    }\r\n\t    // Link target attribute\r\n\t  , target: function(target) {\r\n\t      return this.attr('target', target)\r\n\t    }\r\n\t  }\r\n\t\r\n\t  // Add parent method\r\n\t, construct: {\r\n\t    // Create a hyperlink element\r\n\t    link: function(url) {\r\n\t      return this.put(new SVG.A).to(url)\r\n\t    }\r\n\t  }\r\n\t})\r\n\t\r\n\tSVG.extend(SVG.Element, {\r\n\t  // Create a hyperlink element\r\n\t  linkTo: function(url) {\r\n\t    var link = new SVG.A\r\n\t\r\n\t    if (typeof url == 'function')\r\n\t      url.call(link, link)\r\n\t    else\r\n\t      link.to(url)\r\n\t\r\n\t    return this.parent().put(link).put(this)\r\n\t  }\r\n\t\r\n\t})\n\tSVG.Marker = SVG.invent({\r\n\t  // Initialize node\r\n\t  create: 'marker'\r\n\t\r\n\t  // Inherit from\r\n\t, inherit: SVG.Container\r\n\t\r\n\t  // Add class methods\r\n\t, extend: {\r\n\t    // Set width of element\r\n\t    width: function(width) {\r\n\t      return this.attr('markerWidth', width)\r\n\t    }\r\n\t    // Set height of element\r\n\t  , height: function(height) {\r\n\t      return this.attr('markerHeight', height)\r\n\t    }\r\n\t    // Set marker refX and refY\r\n\t  , ref: function(x, y) {\r\n\t      return this.attr('refX', x).attr('refY', y)\r\n\t    }\r\n\t    // Update marker\r\n\t  , update: function(block) {\r\n\t      // remove all content\r\n\t      this.clear()\r\n\t\r\n\t      // invoke passed block\r\n\t      if (typeof block == 'function')\r\n\t        block.call(this, this)\r\n\t\r\n\t      return this\r\n\t    }\r\n\t    // Return the fill id\r\n\t  , toString: function() {\r\n\t      return 'url(#' + this.id() + ')'\r\n\t    }\r\n\t  }\r\n\t\r\n\t  // Add parent method\r\n\t, construct: {\r\n\t    marker: function(width, height, block) {\r\n\t      // Create marker element in defs\r\n\t      return this.defs().marker(width, height, block)\r\n\t    }\r\n\t  }\r\n\t\r\n\t})\r\n\t\r\n\tSVG.extend(SVG.Defs, {\r\n\t  // Create marker\r\n\t  marker: function(width, height, block) {\r\n\t    // Set default viewbox to match the width and height, set ref to cx and cy and set orient to auto\r\n\t    return this.put(new SVG.Marker)\r\n\t      .size(width, height)\r\n\t      .ref(width / 2, height / 2)\r\n\t      .viewbox(0, 0, width, height)\r\n\t      .attr('orient', 'auto')\r\n\t      .update(block)\r\n\t  }\r\n\t\r\n\t})\r\n\t\r\n\tSVG.extend(SVG.Line, SVG.Polyline, SVG.Polygon, SVG.Path, {\r\n\t  // Create and attach markers\r\n\t  marker: function(marker, width, height, block) {\r\n\t    var attr = ['marker']\r\n\t\r\n\t    // Build attribute name\r\n\t    if (marker != 'all') attr.push(marker)\r\n\t    attr = attr.join('-')\r\n\t\r\n\t    // Set marker attribute\r\n\t    marker = arguments[1] instanceof SVG.Marker ?\r\n\t      arguments[1] :\r\n\t      this.doc().marker(width, height, block)\r\n\t\r\n\t    return this.attr(attr, marker)\r\n\t  }\r\n\t\r\n\t})\n\t// Define list of available attributes for stroke and fill\r\n\tvar sugar = {\r\n\t  stroke: ['color', 'width', 'opacity', 'linecap', 'linejoin', 'miterlimit', 'dasharray', 'dashoffset']\r\n\t, fill:   ['color', 'opacity', 'rule']\r\n\t, prefix: function(t, a) {\r\n\t    return a == 'color' ? t : t + '-' + a\r\n\t  }\r\n\t}\r\n\t\r\n\t// Add sugar for fill and stroke\r\n\t;['fill', 'stroke'].forEach(function(m) {\r\n\t  var i, extension = {}\r\n\t\r\n\t  extension[m] = function(o) {\r\n\t    if (typeof o == 'undefined')\r\n\t      return this\r\n\t    if (typeof o == 'string' || SVG.Color.isRgb(o) || (o && typeof o.fill === 'function'))\r\n\t      this.attr(m, o)\r\n\t\r\n\t    else\r\n\t      // set all attributes from sugar.fill and sugar.stroke list\r\n\t      for (i = sugar[m].length - 1; i >= 0; i--)\r\n\t        if (o[sugar[m][i]] != null)\r\n\t          this.attr(sugar.prefix(m, sugar[m][i]), o[sugar[m][i]])\r\n\t\r\n\t    return this\r\n\t  }\r\n\t\r\n\t  SVG.extend(SVG.Element, SVG.FX, extension)\r\n\t\r\n\t})\r\n\t\r\n\tSVG.extend(SVG.Element, SVG.FX, {\r\n\t  // Map rotation to transform\r\n\t  rotate: function(d, cx, cy) {\r\n\t    return this.transform({ rotation: d, cx: cx, cy: cy })\r\n\t  }\r\n\t  // Map skew to transform\r\n\t, skew: function(x, y, cx, cy) {\r\n\t    return arguments.length == 1  || arguments.length == 3 ?\r\n\t      this.transform({ skew: x, cx: y, cy: cx }) :\r\n\t      this.transform({ skewX: x, skewY: y, cx: cx, cy: cy })\r\n\t  }\r\n\t  // Map scale to transform\r\n\t, scale: function(x, y, cx, cy) {\r\n\t    return arguments.length == 1  || arguments.length == 3 ?\r\n\t      this.transform({ scale: x, cx: y, cy: cx }) :\r\n\t      this.transform({ scaleX: x, scaleY: y, cx: cx, cy: cy })\r\n\t  }\r\n\t  // Map translate to transform\r\n\t, translate: function(x, y) {\r\n\t    return this.transform({ x: x, y: y })\r\n\t  }\r\n\t  // Map flip to transform\r\n\t, flip: function(a, o) {\r\n\t    o = typeof a == 'number' ? a : o\r\n\t    return this.transform({ flip: a || 'both', offset: o })\r\n\t  }\r\n\t  // Map matrix to transform\r\n\t, matrix: function(m) {\r\n\t    return this.attr('transform', new SVG.Matrix(arguments.length == 6 ? [].slice.call(arguments) : m))\r\n\t  }\r\n\t  // Opacity\r\n\t, opacity: function(value) {\r\n\t    return this.attr('opacity', value)\r\n\t  }\r\n\t  // Relative move over x axis\r\n\t, dx: function(x) {\r\n\t    return this.x(new SVG.Number(x).plus(this instanceof SVG.FX ? 0 : this.x()), true)\r\n\t  }\r\n\t  // Relative move over y axis\r\n\t, dy: function(y) {\r\n\t    return this.y(new SVG.Number(y).plus(this instanceof SVG.FX ? 0 : this.y()), true)\r\n\t  }\r\n\t  // Relative move over x and y axes\r\n\t, dmove: function(x, y) {\r\n\t    return this.dx(x).dy(y)\r\n\t  }\r\n\t})\r\n\t\r\n\tSVG.extend(SVG.Rect, SVG.Ellipse, SVG.Circle, SVG.Gradient, SVG.FX, {\r\n\t  // Add x and y radius\r\n\t  radius: function(x, y) {\r\n\t    var type = (this._target || this).type;\r\n\t    return type == 'radial' || type == 'circle' ?\r\n\t      this.attr('r', new SVG.Number(x)) :\r\n\t      this.rx(x).ry(y == null ? x : y)\r\n\t  }\r\n\t})\r\n\t\r\n\tSVG.extend(SVG.Path, {\r\n\t  // Get path length\r\n\t  length: function() {\r\n\t    return this.node.getTotalLength()\r\n\t  }\r\n\t  // Get point at length\r\n\t, pointAt: function(length) {\r\n\t    return this.node.getPointAtLength(length)\r\n\t  }\r\n\t})\r\n\t\r\n\tSVG.extend(SVG.Parent, SVG.Text, SVG.Tspan, SVG.FX, {\r\n\t  // Set font\r\n\t  font: function(a, v) {\r\n\t    if (typeof a == 'object') {\r\n\t      for (v in a) this.font(v, a[v])\r\n\t    }\r\n\t\r\n\t    return a == 'leading' ?\r\n\t        this.leading(v) :\r\n\t      a == 'anchor' ?\r\n\t        this.attr('text-anchor', v) :\r\n\t      a == 'size' || a == 'family' || a == 'weight' || a == 'stretch' || a == 'variant' || a == 'style' ?\r\n\t        this.attr('font-'+ a, v) :\r\n\t        this.attr(a, v)\r\n\t  }\r\n\t})\r\n\t\n\tSVG.Set = SVG.invent({\r\n\t  // Initialize\r\n\t  create: function(members) {\r\n\t    // Set initial state\r\n\t    Array.isArray(members) ? this.members = members : this.clear()\r\n\t  }\r\n\t\r\n\t  // Add class methods\r\n\t, extend: {\r\n\t    // Add element to set\r\n\t    add: function() {\r\n\t      var i, il, elements = [].slice.call(arguments)\r\n\t\r\n\t      for (i = 0, il = elements.length; i < il; i++)\r\n\t        this.members.push(elements[i])\r\n\t\r\n\t      return this\r\n\t    }\r\n\t    // Remove element from set\r\n\t  , remove: function(element) {\r\n\t      var i = this.index(element)\r\n\t\r\n\t      // remove given child\r\n\t      if (i > -1)\r\n\t        this.members.splice(i, 1)\r\n\t\r\n\t      return this\r\n\t    }\r\n\t    // Iterate over all members\r\n\t  , each: function(block) {\r\n\t      for (var i = 0, il = this.members.length; i < il; i++)\r\n\t        block.apply(this.members[i], [i, this.members])\r\n\t\r\n\t      return this\r\n\t    }\r\n\t    // Restore to defaults\r\n\t  , clear: function() {\r\n\t      // initialize store\r\n\t      this.members = []\r\n\t\r\n\t      return this\r\n\t    }\r\n\t    // Get the length of a set\r\n\t  , length: function() {\r\n\t      return this.members.length\r\n\t    }\r\n\t    // Checks if a given element is present in set\r\n\t  , has: function(element) {\r\n\t      return this.index(element) >= 0\r\n\t    }\r\n\t    // retuns index of given element in set\r\n\t  , index: function(element) {\r\n\t      return this.members.indexOf(element)\r\n\t    }\r\n\t    // Get member at given index\r\n\t  , get: function(i) {\r\n\t      return this.members[i]\r\n\t    }\r\n\t    // Get first member\r\n\t  , first: function() {\r\n\t      return this.get(0)\r\n\t    }\r\n\t    // Get last member\r\n\t  , last: function() {\r\n\t      return this.get(this.members.length - 1)\r\n\t    }\r\n\t    // Default value\r\n\t  , valueOf: function() {\r\n\t      return this.members\r\n\t    }\r\n\t    // Get the bounding box of all members included or empty box if set has no items\r\n\t  , bbox: function(){\r\n\t      // return an empty box of there are no members\r\n\t      if (this.members.length == 0)\r\n\t        return new SVG.RBox()\r\n\t\r\n\t      // get the first rbox and update the target bbox\r\n\t      var rbox = this.members[0].rbox(this.members[0].doc())\r\n\t\r\n\t      this.each(function() {\r\n\t        // user rbox for correct position and visual representation\r\n\t        rbox = rbox.merge(this.rbox(this.doc()))\r\n\t      })\r\n\t\r\n\t      return rbox\r\n\t    }\r\n\t  }\r\n\t\r\n\t  // Add parent method\r\n\t, construct: {\r\n\t    // Create a new set\r\n\t    set: function(members) {\r\n\t      return new SVG.Set(members)\r\n\t    }\r\n\t  }\r\n\t})\r\n\t\r\n\tSVG.FX.Set = SVG.invent({\r\n\t  // Initialize node\r\n\t  create: function(set) {\r\n\t    // store reference to set\r\n\t    this.set = set\r\n\t  }\r\n\t\r\n\t})\r\n\t\r\n\t// Alias methods\r\n\tSVG.Set.inherit = function() {\r\n\t  var m\r\n\t    , methods = []\r\n\t\r\n\t  // gather shape methods\r\n\t  for(var m in SVG.Shape.prototype)\r\n\t    if (typeof SVG.Shape.prototype[m] == 'function' && typeof SVG.Set.prototype[m] != 'function')\r\n\t      methods.push(m)\r\n\t\r\n\t  // apply shape aliasses\r\n\t  methods.forEach(function(method) {\r\n\t    SVG.Set.prototype[method] = function() {\r\n\t      for (var i = 0, il = this.members.length; i < il; i++)\r\n\t        if (this.members[i] && typeof this.members[i][method] == 'function')\r\n\t          this.members[i][method].apply(this.members[i], arguments)\r\n\t\r\n\t      return method == 'animate' ? (this.fx || (this.fx = new SVG.FX.Set(this))) : this\r\n\t    }\r\n\t  })\r\n\t\r\n\t  // clear methods for the next round\r\n\t  methods = []\r\n\t\r\n\t  // gather fx methods\r\n\t  for(var m in SVG.FX.prototype)\r\n\t    if (typeof SVG.FX.prototype[m] == 'function' && typeof SVG.FX.Set.prototype[m] != 'function')\r\n\t      methods.push(m)\r\n\t\r\n\t  // apply fx aliasses\r\n\t  methods.forEach(function(method) {\r\n\t    SVG.FX.Set.prototype[method] = function() {\r\n\t      for (var i = 0, il = this.set.members.length; i < il; i++)\r\n\t        this.set.members[i].fx[method].apply(this.set.members[i].fx, arguments)\r\n\t\r\n\t      return this\r\n\t    }\r\n\t  })\r\n\t}\r\n\t\r\n\t\r\n\t\n\t\r\n\tSVG.extend(SVG.Element, {\r\n\t  // Store data values on svg nodes\r\n\t  data: function(a, v, r) {\r\n\t    if (typeof a == 'object') {\r\n\t      for (v in a)\r\n\t        this.data(v, a[v])\r\n\t\r\n\t    } else if (arguments.length < 2) {\r\n\t      try {\r\n\t        return JSON.parse(this.attr('data-' + a))\r\n\t      } catch(e) {\r\n\t        return this.attr('data-' + a)\r\n\t      }\r\n\t\r\n\t    } else {\r\n\t      this.attr(\r\n\t        'data-' + a\r\n\t      , v === null ?\r\n\t          null :\r\n\t        r === true || typeof v === 'string' || typeof v === 'number' ?\r\n\t          v :\r\n\t          JSON.stringify(v)\r\n\t      )\r\n\t    }\r\n\t\r\n\t    return this\r\n\t  }\r\n\t})\n\tSVG.extend(SVG.Element, {\r\n\t  // Remember arbitrary data\r\n\t  remember: function(k, v) {\r\n\t    // remember every item in an object individually\r\n\t    if (typeof arguments[0] == 'object')\r\n\t      for (var v in k)\r\n\t        this.remember(v, k[v])\r\n\t\r\n\t    // retrieve memory\r\n\t    else if (arguments.length == 1)\r\n\t      return this.memory()[k]\r\n\t\r\n\t    // store memory\r\n\t    else\r\n\t      this.memory()[k] = v\r\n\t\r\n\t    return this\r\n\t  }\r\n\t\r\n\t  // Erase a given memory\r\n\t, forget: function() {\r\n\t    if (arguments.length == 0)\r\n\t      this._memory = {}\r\n\t    else\r\n\t      for (var i = arguments.length - 1; i >= 0; i--)\r\n\t        delete this.memory()[arguments[i]]\r\n\t\r\n\t    return this\r\n\t  }\r\n\t\r\n\t  // Initialize or return local memory object\r\n\t, memory: function() {\r\n\t    return this._memory || (this._memory = {})\r\n\t  }\r\n\t\r\n\t})\n\t// Method for getting an element by id\r\n\tSVG.get = function(id) {\r\n\t  var node = document.getElementById(idFromReference(id) || id)\r\n\t  return SVG.adopt(node)\r\n\t}\r\n\t\r\n\t// Select elements by query string\r\n\tSVG.select = function(query, parent) {\r\n\t  return new SVG.Set(\r\n\t    SVG.utils.map((parent || document).querySelectorAll(query), function(node) {\r\n\t      return SVG.adopt(node)\r\n\t    })\r\n\t  )\r\n\t}\r\n\t\r\n\tSVG.extend(SVG.Parent, {\r\n\t  // Scoped select method\r\n\t  select: function(query) {\r\n\t    return SVG.select(query, this.node)\r\n\t  }\r\n\t\r\n\t})\n\tfunction pathRegReplace(a, b, c, d) {\r\n\t  return c + d.replace(SVG.regex.dots, ' .')\r\n\t}\r\n\t\r\n\t// creates deep clone of array\r\n\tfunction array_clone(arr){\r\n\t  var clone = arr.slice(0)\r\n\t  for(var i = clone.length; i--;){\r\n\t    if(Array.isArray(clone[i])){\r\n\t      clone[i] = array_clone(clone[i])\r\n\t    }\r\n\t  }\r\n\t  return clone\r\n\t}\r\n\t\r\n\t// tests if a given element is instance of an object\r\n\tfunction is(el, obj){\r\n\t  return el instanceof obj\r\n\t}\r\n\t\r\n\t// tests if a given selector matches an element\r\n\tfunction matches(el, selector) {\r\n\t  return (el.matches || el.matchesSelector || el.msMatchesSelector || el.mozMatchesSelector || el.webkitMatchesSelector || el.oMatchesSelector).call(el, selector);\r\n\t}\r\n\t\r\n\t// Convert dash-separated-string to camelCase\r\n\tfunction camelCase(s) {\r\n\t  return s.toLowerCase().replace(/-(.)/g, function(m, g) {\r\n\t    return g.toUpperCase()\r\n\t  })\r\n\t}\r\n\t\r\n\t// Capitalize first letter of a string\r\n\tfunction capitalize(s) {\r\n\t  return s.charAt(0).toUpperCase() + s.slice(1)\r\n\t}\r\n\t\r\n\t// Ensure to six-based hex\r\n\tfunction fullHex(hex) {\r\n\t  return hex.length == 4 ?\r\n\t    [ '#',\r\n\t      hex.substring(1, 2), hex.substring(1, 2)\r\n\t    , hex.substring(2, 3), hex.substring(2, 3)\r\n\t    , hex.substring(3, 4), hex.substring(3, 4)\r\n\t    ].join('') : hex\r\n\t}\r\n\t\r\n\t// Component to hex value\r\n\tfunction compToHex(comp) {\r\n\t  var hex = comp.toString(16)\r\n\t  return hex.length == 1 ? '0' + hex : hex\r\n\t}\r\n\t\r\n\t// Calculate proportional width and height values when necessary\r\n\tfunction proportionalSize(element, width, height) {\r\n\t  if (width == null || height == null) {\r\n\t    var box = element.bbox()\r\n\t\r\n\t    if (width == null)\r\n\t      width = box.width / box.height * height\r\n\t    else if (height == null)\r\n\t      height = box.height / box.width * width\r\n\t  }\r\n\t\r\n\t  return {\r\n\t    width:  width\r\n\t  , height: height\r\n\t  }\r\n\t}\r\n\t\r\n\t// Delta transform point\r\n\tfunction deltaTransformPoint(matrix, x, y) {\r\n\t  return {\r\n\t    x: x * matrix.a + y * matrix.c + 0\r\n\t  , y: x * matrix.b + y * matrix.d + 0\r\n\t  }\r\n\t}\r\n\t\r\n\t// Map matrix array to object\r\n\tfunction arrayToMatrix(a) {\r\n\t  return { a: a[0], b: a[1], c: a[2], d: a[3], e: a[4], f: a[5] }\r\n\t}\r\n\t\r\n\t// Parse matrix if required\r\n\tfunction parseMatrix(matrix) {\r\n\t  if (!(matrix instanceof SVG.Matrix))\r\n\t    matrix = new SVG.Matrix(matrix)\r\n\t\r\n\t  return matrix\r\n\t}\r\n\t\r\n\t// Add centre point to transform object\r\n\tfunction ensureCentre(o, target) {\r\n\t  o.cx = o.cx == null ? target.bbox().cx : o.cx\r\n\t  o.cy = o.cy == null ? target.bbox().cy : o.cy\r\n\t}\r\n\t\r\n\t// PathArray Helpers\r\n\tfunction arrayToString(a) {\r\n\t  for (var i = 0, il = a.length, s = ''; i < il; i++) {\r\n\t    s += a[i][0]\r\n\t\r\n\t    if (a[i][1] != null) {\r\n\t      s += a[i][1]\r\n\t\r\n\t      if (a[i][2] != null) {\r\n\t        s += ' '\r\n\t        s += a[i][2]\r\n\t\r\n\t        if (a[i][3] != null) {\r\n\t          s += ' '\r\n\t          s += a[i][3]\r\n\t          s += ' '\r\n\t          s += a[i][4]\r\n\t\r\n\t          if (a[i][5] != null) {\r\n\t            s += ' '\r\n\t            s += a[i][5]\r\n\t            s += ' '\r\n\t            s += a[i][6]\r\n\t\r\n\t            if (a[i][7] != null) {\r\n\t              s += ' '\r\n\t              s += a[i][7]\r\n\t            }\r\n\t          }\r\n\t        }\r\n\t      }\r\n\t    }\r\n\t  }\r\n\t\r\n\t  return s + ' '\r\n\t}\r\n\t\r\n\t// Deep new id assignment\r\n\tfunction assignNewId(node) {\r\n\t  // do the same for SVG child nodes as well\r\n\t  for (var i = node.childNodes.length - 1; i >= 0; i--)\r\n\t    if (node.childNodes[i] instanceof window.SVGElement)\r\n\t      assignNewId(node.childNodes[i])\r\n\t\r\n\t  return SVG.adopt(node).id(SVG.eid(node.nodeName))\r\n\t}\r\n\t\r\n\t// Add more bounding box properties\r\n\tfunction fullBox(b) {\r\n\t  if (b.x == null) {\r\n\t    b.x      = 0\r\n\t    b.y      = 0\r\n\t    b.width  = 0\r\n\t    b.height = 0\r\n\t  }\r\n\t\r\n\t  b.w  = b.width\r\n\t  b.h  = b.height\r\n\t  b.x2 = b.x + b.width\r\n\t  b.y2 = b.y + b.height\r\n\t  b.cx = b.x + b.width / 2\r\n\t  b.cy = b.y + b.height / 2\r\n\t\r\n\t  return b\r\n\t}\r\n\t\r\n\t// Get id from reference string\r\n\tfunction idFromReference(url) {\r\n\t  var m = url.toString().match(SVG.regex.reference)\r\n\t\r\n\t  if (m) return m[1]\r\n\t}\r\n\t\r\n\t// Create matrix array for looping\r\n\tvar abcdef = 'abcdef'.split('')\n\t// Add CustomEvent to IE9 and IE10\r\n\tif (typeof window.CustomEvent !== 'function') {\r\n\t  // Code from: https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent\r\n\t  var CustomEvent = function(event, options) {\r\n\t    options = options || { bubbles: false, cancelable: false, detail: undefined }\r\n\t    var e = document.createEvent('CustomEvent')\r\n\t    e.initCustomEvent(event, options.bubbles, options.cancelable, options.detail)\r\n\t    return e\r\n\t  }\r\n\t\r\n\t  CustomEvent.prototype = window.Event.prototype\r\n\t\r\n\t  window.CustomEvent = CustomEvent\r\n\t}\r\n\t\r\n\t// requestAnimationFrame / cancelAnimationFrame Polyfill with fallback based on Paul Irish\r\n\t(function(w) {\r\n\t  var lastTime = 0\r\n\t  var vendors = ['moz', 'webkit']\r\n\t\r\n\t  for(var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\r\n\t    w.requestAnimationFrame = w[vendors[x] + 'RequestAnimationFrame']\r\n\t    w.cancelAnimationFrame  = w[vendors[x] + 'CancelAnimationFrame'] ||\r\n\t                              w[vendors[x] + 'CancelRequestAnimationFrame']\r\n\t  }\r\n\t\r\n\t  w.requestAnimationFrame = w.requestAnimationFrame ||\r\n\t    function(callback) {\r\n\t      var currTime = new Date().getTime()\r\n\t      var timeToCall = Math.max(0, 16 - (currTime - lastTime))\r\n\t\r\n\t      var id = w.setTimeout(function() {\r\n\t        callback(currTime + timeToCall)\r\n\t      }, timeToCall)\r\n\t\r\n\t      lastTime = currTime + timeToCall\r\n\t      return id\r\n\t    }\r\n\t\r\n\t  w.cancelAnimationFrame = w.cancelAnimationFrame || w.clearTimeout;\r\n\t\r\n\t}(window))\r\n\t\r\n\treturn SVG\r\n\t\r\n\t}));\r\n\n/***/ }),\n\n/***/ 199:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _gatsbyLink = __webpack_require__(49);\n\t\n\tvar _gatsbyLink2 = _interopRequireDefault(_gatsbyLink);\n\t\n\tvar _Logo = __webpack_require__(200);\n\t\n\tvar _Logo2 = _interopRequireDefault(_Logo);\n\t\n\t__webpack_require__(335);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar Header = function Header() {\n\t  return _react2.default.createElement(\n\t    'nav',\n\t    { className: 'navbar is-black is-transparent' },\n\t    _react2.default.createElement(\n\t      'div',\n\t      { className: 'navbar-brand' },\n\t      _react2.default.createElement(\n\t        'a',\n\t        { className: 'navbar-item', href: '/' },\n\t        _react2.default.createElement(_Logo2.default, null)\n\t      ),\n\t      _react2.default.createElement(\n\t        'div',\n\t        { className: 'navbar-burger burger', 'data-target': 'navbarMobile' },\n\t        _react2.default.createElement('span', null),\n\t        _react2.default.createElement('span', null),\n\t        _react2.default.createElement('span', null)\n\t      )\n\t    ),\n\t    _react2.default.createElement(\n\t      'div',\n\t      { id: 'navbarMobile', className: 'navbar-menu' },\n\t      _react2.default.createElement(\n\t        'div',\n\t        { className: 'navbar-end' },\n\t        _react2.default.createElement(\n\t          _gatsbyLink2.default,\n\t          { className: 'navbar-item', to: '/about/' },\n\t          'About'\n\t        ),\n\t        _react2.default.createElement(\n\t          _gatsbyLink2.default,\n\t          { className: 'navbar-item', to: '/blog/' },\n\t          'Blog'\n\t        )\n\t      )\n\t    )\n\t  );\n\t};\n\t\n\texports.default = Header;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 200:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _svg = __webpack_require__(441);\n\t\n\tvar _svg2 = _interopRequireDefault(_svg);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t// Butterfly Logo\n\tvar Header = function Header() {\n\t  var butterfly = _svg2.default.select('svg');\n\t  var rightWing = _svg2.default.select('#right-wing');\n\t  var leftWing = _svg2.default.select('#left-wing');\n\t\n\t  butterfly.click(function () {\n\t    rightWing.animate({ ease: '<>' }).transform({ scaleX: 0.2, cx: 34.18762969970703 }).transform({ rotation: -20, cx: 34.18762969970703, relative: true });\n\t    rightWing.animate({ ease: '<>' }).transform({ a: 1 }).transform({ b: 0 }).transform({ c: 0 }).transform({ d: 1 }).transform({ e: 0 }).transform({ f: 0 }).transform({ rotation: 0, cx: 34.18762969970703 }).transform({ scaleX: 1, cx: 34.18762969970703 }).transform({ scaleY: 1 }).transform({ skewX: -0 }).transform({ skewY: 0 }).transform({ transformedX: 0 }).transform({ transformedY: 0 }).transform({ x: 0 }).transform({ y: 0 });\n\t\n\t    leftWing.animate({ ease: '<>' }).transform({ scaleX: 0.2, cx: 34.444305419921875 }).transform({ rotation: 30, cx: 34.444305419921875 });\n\t    leftWing.animate({ ease: '<>' }).transform({ a: 1 }).transform({ b: 0 }).transform({ c: 0 }).transform({ d: 1 }).transform({ e: 0 }).transform({ f: 0 }).transform({ rotation: 0, cx: 34.444305419921875 }).transform({ scaleX: 1, cx: 34.444305419921875 }).transform({ scaleY: 1 }).transform({ skewX: -0 }).transform({ skewY: 0 }).transform({ transformedX: 0 }).transform({ transformedY: 0 }).transform({ x: 0 }).transform({ y: 0 });\n\t\n\t    butterfly.off();\n\t  });\n\t\n\t  return _react2.default.createElement(\n\t    'svg',\n\t    { width: '65px', height: '58px', viewBox: '0 0 65 58', version: '1.1', xmlns: 'http://www.w3.org/2000/svg', xmlnsXlink: 'http://www.w3.org/1999/xlink' },\n\t    _react2.default.createElement(\n\t      'g',\n\t      { id: 'Page-1', stroke: 'none', strokeWidth: '1', fill: 'none', fillRule: 'evenodd' },\n\t      _react2.default.createElement(\n\t        'g',\n\t        { id: 'logo', transform: 'translate(2.000000, 1.000000)' },\n\t        _react2.default.createElement('path', { d: 'M34.533543,30.7976939 C36.3207547,30.0020964 37.6236897,29.6792453 38.269392,29.6100629 C39.2148847,29.5062893 40.1603774,29.3448637 41.048218,29.0104822 C41.7400419,28.7222222 43.9077568,27.2348008 45.8563941,26.7044025 C51.6792453,23.3951782 59.3354298,15.8197065 56.5104822,9.09748428 C52.9591195,0.645702306 35.2023061,-1.44129979 34.187631,13.6981132 C34.8448637,19.9245283 42.5702306,35.7327044 42.5702306,35.7327044 C42.5702306,35.7327044 46.0293501,41.8553459 55.2767296,40.2180294 C57.4213836,39.7568134 62.1373166,36.8280922 60.730608,32.2389937 C60.730608,32.2389937 60.730608,32.2389937 60.730608,32.2389937 C59.370021,29.3218029 56.5566038,27.2463312 53.3396226,27.0157233 C49.1656184,26.7159329 45.8102725,28.629979 44.4612159,29.2410901 L40.3448637,30.9706499', id: 'right-wing', stroke: '#F9B6B4', strokeWidth: '3' }),\n\t        _react2.default.createElement('path', { d: 'M28.7683438,31.697065 C20.0167715,45.3144654 4.1048218,42.9161426 1.02620545,37.1624738 C-2.0524109,31.408805 2.14465409,14.7589099 16.8343816,21.1928721 C31.524109,27.6268344 34.8333333,44.0807128 30.2442348,51.7714885 C25.6551363,59.4622642 11.4266247,51.990566 19.8207547,43.1121593 C25.5744235,35.8710692 30.9821803,32.3888889 34.5220126,30.7976939', id: 'left-wing', stroke: '#F9B6B4', strokeWidth: '3' }),\n\t        _react2.default.createElement('path', { d: 'M34.2683438,30.2557652 C34.2683438,30.2557652 34.533543,30.7746331 35.0062893,31.6740042 C35.4675052,32.5849057 36.1477987,33.8647799 36.9779874,35.3983229 C37.3930818,36.1708595 37.8427673,36.9895178 38.3155136,37.8888889 L38.4884696,38.2463312 C38.5115304,38.3039832 38.5461216,38.3731656 38.5691824,38.4538784 L38.5922432,38.5230608 L38.6037736,38.5922432 C38.5922432,38.6268344 38.6498952,38.5807128 38.5461216,38.8459119 C38.6844864,38.8920335 38.1194969,39.0649895 38.1886792,39.0303983 L38.1771488,39.0303983 C38.1540881,39.0303983 38.0618449,39.0073375 38.0041929,38.9727463 C37.8542977,38.8574423 37.8888889,38.8689727 37.8658281,38.8459119 C37.6582809,38.5922432 37.5314465,38.3962264 37.3815514,38.1656184 C37.0932914,37.7159329 36.793501,37.2662474 36.5052411,36.8050314 C35.9287212,35.8710692 35.3522013,34.9025157 34.7987421,33.8993711 C34.2222222,32.9077568 33.7033543,31.8584906 33.1614256,30.8322851 C32.6540881,29.7830189 32.1236897,28.745283 31.6740042,27.6960168 C31.2012579,26.6582809 30.7631027,25.6090147 30.3595388,24.5943396 C30.1519916,24.0870021 29.9675052,23.5796646 29.7830189,23.0838574 C29.6907757,22.8186583 29.6100629,22.6111111 29.5293501,22.28826 C29.5293501,22.2651992 29.5178197,22.2536688 29.5178197,22.1844864 C29.5178197,22.1383648 29.5062893,22.172956 29.5178197,22.0691824 C29.5293501,21.9769392 29.5985325,21.8616352 29.6677149,21.8039832 C29.7253669,21.7348008 30.0828092,21.71174 29.932914,21.7348008 C29.9213836,21.7348008 30.0020964,21.7463312 30.0597484,21.7809224 C30.1174004,21.8039832 30.1865828,21.8616352 30.221174,21.8962264 L30.2672956,21.9538784 C30.3134172,22.0230608 30.3480084,22.0807128 30.3825996,22.1383648 L30.567086,22.4842767 C31.0167715,23.3951782 31.408805,24.2484277 31.7777778,25.0440252 C32.5157233,26.6236897 33.1268344,27.9381551 33.5880503,28.8490566 C34.0146751,29.7368973 34.2683438,30.2557652 34.2683438,30.2557652 Z M34.2683438,30.2557652 C34.2683438,30.2557652 34.0031447,29.7368973 33.5303983,28.8375262 C33.2997904,28.3878407 33.0115304,27.8459119 32.6540881,27.2232704 C32.3081761,26.6121593 31.9161426,25.908805 31.466457,25.1708595 C31.0167715,24.4213836 30.5209644,23.6142558 29.9675052,22.7955975 L29.7599581,22.4958071 C29.7253669,22.4496855 29.6907757,22.4035639 29.6561845,22.3689727 L29.6446541,22.3574423 C29.6677149,22.3805031 29.7138365,22.4266247 29.7714885,22.4381551 C29.8291405,22.4612159 29.8983229,22.4496855 29.8637317,22.4496855 C29.7023061,22.4727463 30.048218,22.4266247 30.10587,22.3805031 C30.1750524,22.3343816 30.2442348,22.230608 30.2557652,22.1383648 L30.2557652,22.0691824 C30.2557652,22.0345912 30.2557652,22.057652 30.2557652,22.057652 C30.3249476,22.230608 30.451782,22.4842767 30.567086,22.7033543 C30.8092243,23.1645702 31.0628931,23.6373166 31.3165618,24.1100629 C31.8354298,25.067086 32.3658281,26.0587002 32.9077568,27.0618449 C33.4612159,28.0649895 33.9570231,29.1027254 34.4989518,30.1289308 C34.9947589,31.1781971 35.5366876,32.2044025 36.009434,33.2421384 C36.4937107,34.2798742 36.966457,35.2945493 37.427673,36.2746331 C37.6582809,36.7589099 37.8888889,37.2431866 38.1079665,37.7159329 C38.2232704,37.9350105 38.3501048,38.2002096 38.442348,38.3501048 C38.4308176,38.3501048 38.5,38.384696 38.3616352,38.2924528 C38.3155136,38.269392 38.2348008,38.2578616 38.2232704,38.2578616 L38.2348008,38.2578616 C38.3155136,38.2348008 37.7505241,38.384696 37.8888889,38.4308176 C37.7966457,38.672956 37.8542977,38.615304 37.8427673,38.6268344 C37.8427673,38.6383648 37.8427673,38.6498952 37.8427673,38.6498952 L37.8427673,38.6268344 C37.8312369,38.5807128 37.8197065,38.5230608 37.7966457,38.4769392 L37.6813417,38.1310273 C37.3584906,37.197065 37.0010482,36.3207547 36.6666667,35.5136268 C36.3438155,34.706499 36.009434,33.9800839 35.721174,33.3343816 C35.432914,32.6886792 35.1677149,32.1352201 34.9486373,31.6740042 C34.5220126,30.7746331 34.2683438,30.2557652 34.2683438,30.2557652 Z', id: 'Shape', fill: '#F9B6B4', fillRule: 'nonzero' }),\n\t        _react2.default.createElement('path', { d: 'M29.8752621,22.0807128 C29.8752621,22.0807128 23.4297694,3.67819706 31.466457,1.26834382', id: 'antenna-1', stroke: '#F9B6B4', strokeWidth: '0.25' }),\n\t        _react2.default.createElement('path', { d: 'M30.2327044,23.0838574 C30.2327044,23.0838574 21.6194969,5.59224319 14.2631027,9.639413', id: 'antenna-2', stroke: '#F9B6B4', strokeWidth: '0.25' }),\n\t        _react2.default.createElement('circle', { id: 'point-1', stroke: '#F9B6B4', fill: '#F9B6B4', fillRule: 'nonzero', cx: '42.4779874', cy: '47.5628931', r: '1.19916143' }),\n\t        _react2.default.createElement('circle', { id: 'point-2', stroke: '#F9B6B4', fill: '#F9B6B4', fillRule: 'nonzero', cx: '13.6519916', cy: '10.2274633', r: '1.19916143' }),\n\t        _react2.default.createElement('circle', { id: 'point-3', stroke: '#F9B6B4', fill: '#F9B6B4', fillRule: 'nonzero', cx: '32.6540881', cy: '1.26834382', r: '1.19916143' })\n\t      )\n\t    )\n\t  );\n\t};\n\t\n\texports.default = Header;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 201:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(7);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _reactHelmet = __webpack_require__(404);\n\t\n\tvar _reactHelmet2 = _interopRequireDefault(_reactHelmet);\n\t\n\t__webpack_require__(336);\n\t\n\tvar _Header = __webpack_require__(199);\n\t\n\tvar _Header2 = _interopRequireDefault(_Header);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t//import Header from '../components/Header'\n\tvar Layout = function Layout(_ref) {\n\t  var children = _ref.children;\n\t  return _react2.default.createElement(\n\t    'div',\n\t    null,\n\t    _react2.default.createElement(_reactHelmet2.default, {\n\t      title: 'Heba El-Shimy\\'s Portfolio & Blog',\n\t      meta: [{ name: 'description', content: 'Portfolio' }, { name: 'keywords', content: 'portfolio, blog' }, { name: 'theme-color', content: '#000000' }, { httpEquiv: 'cleartype', content: 'on' }, { name: 'HandheldFriendly', content: 'True' }, { name: 'MobileOptimized', content: '320' }, { name: 'apple-mobile-web-app-title', content: 'Portfolio' }, { name: 'apple-mobile-web-app-capable', content: 'Yes' }, { name: 'apple-mobile-web-app-status-bar-style', content: 'black' }],\n\t      link: [{ rel: 'shortcut icon', href: '/favicon.ico' }, { rel: 'apple-touch-startup-image', media: '(device-width: 320px) and (device-height: 568px)    (-webkit-device-pixel-ratio: 2) and (orientation: portrait)', href: '/images/launch/apple-touch-startup-image-640x1136.png' }, { rel: 'apple-touch-startup-image', media: '(device-width: 375px) and (device-height: 667px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)', href: '/images/launch/apple-touch-startup-image-750x1334.png' }, { rel: 'apple-touch-startup-image', media: '(device-width: 414px) and (device-height: 736px) and (-webkit-device-pixel-ratio: 3) and (orientation: portrait)', href: '/images/launch/apple-touch-startup-image-1242x2208.png' }, { rel: 'apple-touch-startup-image', media: '(device-width: 375px) and (device-height: 812px) and (-webkit-device-pixel-ratio: 3) and (orientation: portrait)', href: '/images/launch/apple-touch-startup-image-1125x2436.png' }, { rel: 'apple-touch-startup-image', media: '(device-width: 768px) and (device-height: 1024px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)', href: '/images/launch/apple-touch-startup-image-1536x2048.png' }, { rel: 'apple-touch-startup-image', media: '(device-width: 834px) and (device-height: 1112px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)', href: '/images/launch/apple-touch-startup-image-1668x2224.png' }, { rel: 'apple-touch-startup-image', media: '(device-width: 1024px) and (device-height: 1366px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)', href: '/images/launch/apple-touch-startup-image-2048x2732.png' }, { rel: 'apple-touch-icon', href: '/images/touch/apple-touch-icon.png' }, { rel: 'apple-touch-icon', sizes: '57x57', href: '/images/touch/apple-touch-icon-57x57.png' }, { rel: 'apple-touch-icon', sizes: '72x72', href: '/images/touch/apple-touch-icon-72x72.png' }, { rel: 'apple-touch-icon', sizes: '114x114', href: '/images/touch/apple-touch-icon-114x114.png' }, { rel: 'apple-touch-icon', sizes: '120x120', href: '/images/touch/apple-touch-icon-120x120.png' }, { rel: 'apple-touch-icon', sizes: '144x144', href: '/images/touch/apple-touch-icon-144x144.png' }, { rel: 'apple-touch-icon', sizes: '152x152', href: '/images/touch/apple-touch-icon-152x152.png' }]\n\t    }),\n\t    _react2.default.createElement(_Header2.default, null),\n\t    _react2.default.createElement(\n\t      'div',\n\t      {\n\t        style: {\n\t          margin: '0 auto',\n\t          maxWidth: 960,\n\t          padding: '0px 1.0875rem 1.45rem',\n\t          paddingTop: 0\n\t        }\n\t      },\n\t      children()\n\t    )\n\t  );\n\t};\n\t\n\tLayout.propTypes = {\n\t  children: _propTypes2.default.func\n\t};\n\t\n\texports.default = Layout;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 335:\n/***/ (function(module, exports) {\n\n\t// empty (null-loader)\n\n/***/ }),\n\n/***/ 336:\n/***/ (function(module, exports) {\n\n\t// empty (null-loader)\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// component---src-layouts-index-js-b5551bb79721d0767188.js","module.exports = {\"layoutContext\":{}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/layout-index.json\n// module id = 103\n// module chunks = 60335399758886 114276838955818","\n  import React from \"react\"\n  import Component from \"/Users/Heba/Development/Personal Website/portfolio-blog/src/layouts/index.js\"\n  import data from \"/Users/Heba/Development/Personal Website/portfolio-blog/.cache/json/layout-index.json\"\n\n  export default (props) => <Component {...props} {...data} />\n  \n\n\n// WEBPACK FOOTER //\n// ./.cache/layouts/index.js","var pSlice = Array.prototype.slice;\nvar objectKeys = require('./lib/keys.js');\nvar isArguments = require('./lib/is_arguments.js');\n\nvar deepEqual = module.exports = function (actual, expected, opts) {\n  if (!opts) opts = {};\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n\n  } else if (actual instanceof Date && expected instanceof Date) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if (!actual || !expected || typeof actual != 'object' && typeof expected != 'object') {\n    return opts.strict ? actual === expected : actual == expected;\n\n  // 7.4. For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else {\n    return objEquiv(actual, expected, opts);\n  }\n}\n\nfunction isUndefinedOrNull(value) {\n  return value === null || value === undefined;\n}\n\nfunction isBuffer (x) {\n  if (!x || typeof x !== 'object' || typeof x.length !== 'number') return false;\n  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {\n    return false;\n  }\n  if (x.length > 0 && typeof x[0] !== 'number') return false;\n  return true;\n}\n\nfunction objEquiv(a, b, opts) {\n  var i, key;\n  if (isUndefinedOrNull(a) || isUndefinedOrNull(b))\n    return false;\n  // an identical 'prototype' property.\n  if (a.prototype !== b.prototype) return false;\n  //~~~I've managed to break Object.keys through screwy arguments passing.\n  //   Converting to array solves the problem.\n  if (isArguments(a)) {\n    if (!isArguments(b)) {\n      return false;\n    }\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return deepEqual(a, b, opts);\n  }\n  if (isBuffer(a)) {\n    if (!isBuffer(b)) {\n      return false;\n    }\n    if (a.length !== b.length) return false;\n    for (i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) return false;\n    }\n    return true;\n  }\n  try {\n    var ka = objectKeys(a),\n        kb = objectKeys(b);\n  } catch (e) {//happens when one is a string literal and the other isn't\n    return false;\n  }\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length != kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] != kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!deepEqual(a[key], b[key], opts)) return false;\n  }\n  return typeof a === typeof b;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/deep-equal/index.js\n// module id = 284\n// module chunks = 114276838955818","var supportsArgumentsClass = (function(){\n  return Object.prototype.toString.call(arguments)\n})() == '[object Arguments]';\n\nexports = module.exports = supportsArgumentsClass ? supported : unsupported;\n\nexports.supported = supported;\nfunction supported(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n};\n\nexports.unsupported = unsupported;\nfunction unsupported(object){\n  return object &&\n    typeof object == 'object' &&\n    typeof object.length == 'number' &&\n    Object.prototype.hasOwnProperty.call(object, 'callee') &&\n    !Object.prototype.propertyIsEnumerable.call(object, 'callee') ||\n    false;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/deep-equal/lib/is_arguments.js\n// module id = 285\n// module chunks = 114276838955818","exports = module.exports = typeof Object.keys === 'function'\n  ? Object.keys : shim;\n\nexports.shim = shim;\nfunction shim (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/deep-equal/lib/keys.js\n// module id = 286\n// module chunks = 114276838955818","/*!\n  Copyright (c) 2015 Jed Watson.\n  Based on code that is Copyright 2013-2015, Facebook, Inc.\n  All rights reserved.\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar canUseDOM = !!(\n\t\ttypeof window !== 'undefined' &&\n\t\twindow.document &&\n\t\twindow.document.createElement\n\t);\n\n\tvar ExecutionEnvironment = {\n\n\t\tcanUseDOM: canUseDOM,\n\n\t\tcanUseWorkers: typeof Worker !== 'undefined',\n\n\t\tcanUseEventListeners:\n\t\t\tcanUseDOM && !!(window.addEventListener || window.attachEvent),\n\n\t\tcanUseViewport: canUseDOM && !!window.screen\n\n\t};\n\n\tif (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\tdefine(function () {\n\t\t\treturn ExecutionEnvironment;\n\t\t});\n\t} else if (typeof module !== 'undefined' && module.exports) {\n\t\tmodule.exports = ExecutionEnvironment;\n\t} else {\n\t\twindow.ExecutionEnvironment = ExecutionEnvironment;\n\t}\n\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/exenv/index.js\n// module id = 293\n// module chunks = 114276838955818","exports.__esModule = true;\nexports.Helmet = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactSideEffect = require(\"react-side-effect\");\n\nvar _reactSideEffect2 = _interopRequireDefault(_reactSideEffect);\n\nvar _deepEqual = require(\"deep-equal\");\n\nvar _deepEqual2 = _interopRequireDefault(_deepEqual);\n\nvar _HelmetUtils = require(\"./HelmetUtils.js\");\n\nvar _HelmetConstants = require(\"./HelmetConstants.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Helmet = function Helmet(Component) {\n    var _class, _temp;\n\n    return _temp = _class = function (_React$Component) {\n        _inherits(HelmetWrapper, _React$Component);\n\n        function HelmetWrapper() {\n            _classCallCheck(this, HelmetWrapper);\n\n            return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));\n        }\n\n        HelmetWrapper.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n            return !(0, _deepEqual2.default)(this.props, nextProps);\n        };\n\n        HelmetWrapper.prototype.mapNestedChildrenToProps = function mapNestedChildrenToProps(child, nestedChildren) {\n            if (!nestedChildren) {\n                return null;\n            }\n\n            switch (child.type) {\n                case _HelmetConstants.TAG_NAMES.SCRIPT:\n                case _HelmetConstants.TAG_NAMES.NOSCRIPT:\n                    return {\n                        innerHTML: nestedChildren\n                    };\n\n                case _HelmetConstants.TAG_NAMES.STYLE:\n                    return {\n                        cssText: nestedChildren\n                    };\n            }\n\n            throw new Error(\"<\" + child.type + \" /> elements are self-closing and can not contain children. Refer to our API for more information.\");\n        };\n\n        HelmetWrapper.prototype.flattenArrayTypeChildren = function flattenArrayTypeChildren(_ref) {\n            var _extends2;\n\n            var child = _ref.child,\n                arrayTypeChildren = _ref.arrayTypeChildren,\n                newChildProps = _ref.newChildProps,\n                nestedChildren = _ref.nestedChildren;\n\n            return _extends({}, arrayTypeChildren, (_extends2 = {}, _extends2[child.type] = [].concat(arrayTypeChildren[child.type] || [], [_extends({}, newChildProps, this.mapNestedChildrenToProps(child, nestedChildren))]), _extends2));\n        };\n\n        HelmetWrapper.prototype.mapObjectTypeChildren = function mapObjectTypeChildren(_ref2) {\n            var _extends3, _extends4;\n\n            var child = _ref2.child,\n                newProps = _ref2.newProps,\n                newChildProps = _ref2.newChildProps,\n                nestedChildren = _ref2.nestedChildren;\n\n            switch (child.type) {\n                case _HelmetConstants.TAG_NAMES.TITLE:\n                    return _extends({}, newProps, (_extends3 = {}, _extends3[child.type] = nestedChildren, _extends3.titleAttributes = _extends({}, newChildProps), _extends3));\n\n                case _HelmetConstants.TAG_NAMES.BODY:\n                    return _extends({}, newProps, {\n                        bodyAttributes: _extends({}, newChildProps)\n                    });\n\n                case _HelmetConstants.TAG_NAMES.HTML:\n                    return _extends({}, newProps, {\n                        htmlAttributes: _extends({}, newChildProps)\n                    });\n            }\n\n            return _extends({}, newProps, (_extends4 = {}, _extends4[child.type] = _extends({}, newChildProps), _extends4));\n        };\n\n        HelmetWrapper.prototype.mapArrayTypeChildrenToProps = function mapArrayTypeChildrenToProps(arrayTypeChildren, newProps) {\n            var newFlattenedProps = _extends({}, newProps);\n\n            Object.keys(arrayTypeChildren).forEach(function (arrayChildName) {\n                var _extends5;\n\n                newFlattenedProps = _extends({}, newFlattenedProps, (_extends5 = {}, _extends5[arrayChildName] = arrayTypeChildren[arrayChildName], _extends5));\n            });\n\n            return newFlattenedProps;\n        };\n\n        HelmetWrapper.prototype.warnOnInvalidChildren = function warnOnInvalidChildren(child, nestedChildren) {\n            if (process.env.NODE_ENV !== \"production\") {\n                if (!_HelmetConstants.VALID_TAG_NAMES.some(function (name) {\n                    return child.type === name;\n                })) {\n                    if (typeof child.type === \"function\") {\n                        return (0, _HelmetUtils.warn)(\"You may be attempting to nest <Helmet> components within each other, which is not allowed. Refer to our API for more information.\");\n                    }\n\n                    return (0, _HelmetUtils.warn)(\"Only elements types \" + _HelmetConstants.VALID_TAG_NAMES.join(\", \") + \" are allowed. Helmet does not support rendering <\" + child.type + \"> elements. Refer to our API for more information.\");\n                }\n\n                if (nestedChildren && typeof nestedChildren !== \"string\" && (!Array.isArray(nestedChildren) || nestedChildren.some(function (nestedChild) {\n                    return typeof nestedChild !== \"string\";\n                }))) {\n                    throw new Error(\"Helmet expects a string as a child of <\" + child.type + \">. Did you forget to wrap your children in braces? ( <\" + child.type + \">{``}</\" + child.type + \"> ) Refer to our API for more information.\");\n                }\n            }\n\n            return true;\n        };\n\n        HelmetWrapper.prototype.mapChildrenToProps = function mapChildrenToProps(children, newProps) {\n            var _this2 = this;\n\n            var arrayTypeChildren = {};\n\n            _react2.default.Children.forEach(children, function (child) {\n                if (!child || !child.props) {\n                    return;\n                }\n\n                var _child$props = child.props,\n                    nestedChildren = _child$props.children,\n                    childProps = _objectWithoutProperties(_child$props, [\"children\"]);\n\n                var newChildProps = (0, _HelmetUtils.convertReactPropstoHtmlAttributes)(childProps);\n\n                _this2.warnOnInvalidChildren(child, nestedChildren);\n\n                switch (child.type) {\n                    case _HelmetConstants.TAG_NAMES.LINK:\n                    case _HelmetConstants.TAG_NAMES.META:\n                    case _HelmetConstants.TAG_NAMES.NOSCRIPT:\n                    case _HelmetConstants.TAG_NAMES.SCRIPT:\n                    case _HelmetConstants.TAG_NAMES.STYLE:\n                        arrayTypeChildren = _this2.flattenArrayTypeChildren({\n                            child: child,\n                            arrayTypeChildren: arrayTypeChildren,\n                            newChildProps: newChildProps,\n                            nestedChildren: nestedChildren\n                        });\n                        break;\n\n                    default:\n                        newProps = _this2.mapObjectTypeChildren({\n                            child: child,\n                            newProps: newProps,\n                            newChildProps: newChildProps,\n                            nestedChildren: nestedChildren\n                        });\n                        break;\n                }\n            });\n\n            newProps = this.mapArrayTypeChildrenToProps(arrayTypeChildren, newProps);\n            return newProps;\n        };\n\n        HelmetWrapper.prototype.render = function render() {\n            var _props = this.props,\n                children = _props.children,\n                props = _objectWithoutProperties(_props, [\"children\"]);\n\n            var newProps = _extends({}, props);\n\n            if (children) {\n                newProps = this.mapChildrenToProps(children, newProps);\n            }\n\n            return _react2.default.createElement(Component, newProps);\n        };\n\n        _createClass(HelmetWrapper, null, [{\n            key: \"canUseDOM\",\n\n\n            // Component.peek comes from react-side-effect:\n            // For testing, you may use a static peek() method available on the returned component.\n            // It lets you get the current state without resetting the mounted instance stack.\n            // Don’t use it for anything other than testing.\n\n            /**\n            * @param {Object} base: {\"target\": \"_blank\", \"href\": \"http://mysite.com/\"}\n            * @param {Object} bodyAttributes: {\"className\": \"root\"}\n            * @param {String} defaultTitle: \"Default Title\"\n            * @param {Boolean} defer: true\n            * @param {Boolean} encodeSpecialCharacters: true\n            * @param {Object} htmlAttributes: {\"lang\": \"en\", \"amp\": undefined}\n            * @param {Array} link: [{\"rel\": \"canonical\", \"href\": \"http://mysite.com/example\"}]\n            * @param {Array} meta: [{\"name\": \"description\", \"content\": \"Test description\"}]\n            * @param {Array} noscript: [{\"innerHTML\": \"<img src='http://mysite.com/js/test.js'\"}]\n            * @param {Function} onChangeClientState: \"(newState) => console.log(newState)\"\n            * @param {Array} script: [{\"type\": \"text/javascript\", \"src\": \"http://mysite.com/js/test.js\"}]\n            * @param {Array} style: [{\"type\": \"text/css\", \"cssText\": \"div { display: block; color: blue; }\"}]\n            * @param {String} title: \"Title\"\n            * @param {Object} titleAttributes: {\"itemprop\": \"name\"}\n            * @param {String} titleTemplate: \"MySite.com - %s\"\n            */\n            set: function set(canUseDOM) {\n                Component.canUseDOM = canUseDOM;\n            }\n        }]);\n\n        return HelmetWrapper;\n    }(_react2.default.Component), _class.propTypes = {\n        base: _propTypes2.default.object,\n        bodyAttributes: _propTypes2.default.object,\n        children: _propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.node), _propTypes2.default.node]),\n        defaultTitle: _propTypes2.default.string,\n        defer: _propTypes2.default.bool,\n        encodeSpecialCharacters: _propTypes2.default.bool,\n        htmlAttributes: _propTypes2.default.object,\n        link: _propTypes2.default.arrayOf(_propTypes2.default.object),\n        meta: _propTypes2.default.arrayOf(_propTypes2.default.object),\n        noscript: _propTypes2.default.arrayOf(_propTypes2.default.object),\n        onChangeClientState: _propTypes2.default.func,\n        script: _propTypes2.default.arrayOf(_propTypes2.default.object),\n        style: _propTypes2.default.arrayOf(_propTypes2.default.object),\n        title: _propTypes2.default.string,\n        titleAttributes: _propTypes2.default.object,\n        titleTemplate: _propTypes2.default.string\n    }, _class.defaultProps = {\n        defer: true,\n        encodeSpecialCharacters: true\n    }, _class.peek = Component.peek, _class.rewind = function () {\n        var mappedState = Component.rewind();\n        if (!mappedState) {\n            // provide fallback if mappedState is undefined\n            mappedState = (0, _HelmetUtils.mapStateOnServer)({\n                baseTag: [],\n                bodyAttributes: {},\n                encodeSpecialCharacters: true,\n                htmlAttributes: {},\n                linkTags: [],\n                metaTags: [],\n                noscriptTags: [],\n                scriptTags: [],\n                styleTags: [],\n                title: \"\",\n                titleAttributes: {}\n            });\n        }\n\n        return mappedState;\n    }, _temp;\n};\n\nvar NullComponent = function NullComponent() {\n    return null;\n};\n\nvar HelmetSideEffects = (0, _reactSideEffect2.default)(_HelmetUtils.reducePropsToState, _HelmetUtils.handleClientStateChange, _HelmetUtils.mapStateOnServer)(NullComponent);\n\nvar HelmetExport = Helmet(HelmetSideEffects);\nHelmetExport.renderStatic = HelmetExport.rewind;\n\nexports.Helmet = HelmetExport;\nexports.default = HelmetExport;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-helmet/lib/Helmet.js\n// module id = 404\n// module chunks = 114276838955818","exports.__esModule = true;\nvar ATTRIBUTE_NAMES = exports.ATTRIBUTE_NAMES = {\n    BODY: \"bodyAttributes\",\n    HTML: \"htmlAttributes\",\n    TITLE: \"titleAttributes\"\n};\n\nvar TAG_NAMES = exports.TAG_NAMES = {\n    BASE: \"base\",\n    BODY: \"body\",\n    HEAD: \"head\",\n    HTML: \"html\",\n    LINK: \"link\",\n    META: \"meta\",\n    NOSCRIPT: \"noscript\",\n    SCRIPT: \"script\",\n    STYLE: \"style\",\n    TITLE: \"title\"\n};\n\nvar VALID_TAG_NAMES = exports.VALID_TAG_NAMES = Object.keys(TAG_NAMES).map(function (name) {\n    return TAG_NAMES[name];\n});\n\nvar TAG_PROPERTIES = exports.TAG_PROPERTIES = {\n    CHARSET: \"charset\",\n    CSS_TEXT: \"cssText\",\n    HREF: \"href\",\n    HTTPEQUIV: \"http-equiv\",\n    INNER_HTML: \"innerHTML\",\n    ITEM_PROP: \"itemprop\",\n    NAME: \"name\",\n    PROPERTY: \"property\",\n    REL: \"rel\",\n    SRC: \"src\"\n};\n\nvar REACT_TAG_MAP = exports.REACT_TAG_MAP = {\n    accesskey: \"accessKey\",\n    charset: \"charSet\",\n    class: \"className\",\n    contenteditable: \"contentEditable\",\n    contextmenu: \"contextMenu\",\n    \"http-equiv\": \"httpEquiv\",\n    itemprop: \"itemProp\",\n    tabindex: \"tabIndex\"\n};\n\nvar HELMET_PROPS = exports.HELMET_PROPS = {\n    DEFAULT_TITLE: \"defaultTitle\",\n    DEFER: \"defer\",\n    ENCODE_SPECIAL_CHARACTERS: \"encodeSpecialCharacters\",\n    ON_CHANGE_CLIENT_STATE: \"onChangeClientState\",\n    TITLE_TEMPLATE: \"titleTemplate\"\n};\n\nvar HTML_TAG_MAP = exports.HTML_TAG_MAP = Object.keys(REACT_TAG_MAP).reduce(function (obj, key) {\n    obj[REACT_TAG_MAP[key]] = key;\n    return obj;\n}, {});\n\nvar SELF_CLOSING_TAGS = exports.SELF_CLOSING_TAGS = [TAG_NAMES.NOSCRIPT, TAG_NAMES.SCRIPT, TAG_NAMES.STYLE];\n\nvar HELMET_ATTRIBUTE = exports.HELMET_ATTRIBUTE = \"data-react-helmet\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-helmet/lib/HelmetConstants.js\n// module id = 182\n// module chunks = 114276838955818","exports.__esModule = true;\nexports.warn = exports.requestAnimationFrame = exports.reducePropsToState = exports.mapStateOnServer = exports.handleClientStateChange = exports.convertReactPropstoHtmlAttributes = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _objectAssign = require(\"object-assign\");\n\nvar _objectAssign2 = _interopRequireDefault(_objectAssign);\n\nvar _HelmetConstants = require(\"./HelmetConstants.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar encodeSpecialCharacters = function encodeSpecialCharacters(str) {\n    var encode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n    if (encode === false) {\n        return String(str);\n    }\n\n    return String(str).replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\").replace(/\"/g, \"&quot;\").replace(/'/g, \"&#x27;\");\n};\n\nvar getTitleFromPropsList = function getTitleFromPropsList(propsList) {\n    var innermostTitle = getInnermostProperty(propsList, _HelmetConstants.TAG_NAMES.TITLE);\n    var innermostTemplate = getInnermostProperty(propsList, _HelmetConstants.HELMET_PROPS.TITLE_TEMPLATE);\n\n    if (innermostTemplate && innermostTitle) {\n        // use function arg to avoid need to escape $ characters\n        return innermostTemplate.replace(/%s/g, function () {\n            return innermostTitle;\n        });\n    }\n\n    var innermostDefaultTitle = getInnermostProperty(propsList, _HelmetConstants.HELMET_PROPS.DEFAULT_TITLE);\n\n    return innermostTitle || innermostDefaultTitle || undefined;\n};\n\nvar getOnChangeClientState = function getOnChangeClientState(propsList) {\n    return getInnermostProperty(propsList, _HelmetConstants.HELMET_PROPS.ON_CHANGE_CLIENT_STATE) || function () {};\n};\n\nvar getAttributesFromPropsList = function getAttributesFromPropsList(tagType, propsList) {\n    return propsList.filter(function (props) {\n        return typeof props[tagType] !== \"undefined\";\n    }).map(function (props) {\n        return props[tagType];\n    }).reduce(function (tagAttrs, current) {\n        return _extends({}, tagAttrs, current);\n    }, {});\n};\n\nvar getBaseTagFromPropsList = function getBaseTagFromPropsList(primaryAttributes, propsList) {\n    return propsList.filter(function (props) {\n        return typeof props[_HelmetConstants.TAG_NAMES.BASE] !== \"undefined\";\n    }).map(function (props) {\n        return props[_HelmetConstants.TAG_NAMES.BASE];\n    }).reverse().reduce(function (innermostBaseTag, tag) {\n        if (!innermostBaseTag.length) {\n            var keys = Object.keys(tag);\n\n            for (var i = 0; i < keys.length; i++) {\n                var attributeKey = keys[i];\n                var lowerCaseAttributeKey = attributeKey.toLowerCase();\n\n                if (primaryAttributes.indexOf(lowerCaseAttributeKey) !== -1 && tag[lowerCaseAttributeKey]) {\n                    return innermostBaseTag.concat(tag);\n                }\n            }\n        }\n\n        return innermostBaseTag;\n    }, []);\n};\n\nvar getTagsFromPropsList = function getTagsFromPropsList(tagName, primaryAttributes, propsList) {\n    // Calculate list of tags, giving priority innermost component (end of the propslist)\n    var approvedSeenTags = {};\n\n    return propsList.filter(function (props) {\n        if (Array.isArray(props[tagName])) {\n            return true;\n        }\n        if (typeof props[tagName] !== \"undefined\") {\n            warn(\"Helmet: \" + tagName + \" should be of type \\\"Array\\\". Instead found type \\\"\" + _typeof(props[tagName]) + \"\\\"\");\n        }\n        return false;\n    }).map(function (props) {\n        return props[tagName];\n    }).reverse().reduce(function (approvedTags, instanceTags) {\n        var instanceSeenTags = {};\n\n        instanceTags.filter(function (tag) {\n            var primaryAttributeKey = void 0;\n            var keys = Object.keys(tag);\n            for (var i = 0; i < keys.length; i++) {\n                var attributeKey = keys[i];\n                var lowerCaseAttributeKey = attributeKey.toLowerCase();\n\n                // Special rule with link tags, since rel and href are both primary tags, rel takes priority\n                if (primaryAttributes.indexOf(lowerCaseAttributeKey) !== -1 && !(primaryAttributeKey === _HelmetConstants.TAG_PROPERTIES.REL && tag[primaryAttributeKey].toLowerCase() === \"canonical\") && !(lowerCaseAttributeKey === _HelmetConstants.TAG_PROPERTIES.REL && tag[lowerCaseAttributeKey].toLowerCase() === \"stylesheet\")) {\n                    primaryAttributeKey = lowerCaseAttributeKey;\n                }\n                // Special case for innerHTML which doesn't work lowercased\n                if (primaryAttributes.indexOf(attributeKey) !== -1 && (attributeKey === _HelmetConstants.TAG_PROPERTIES.INNER_HTML || attributeKey === _HelmetConstants.TAG_PROPERTIES.CSS_TEXT || attributeKey === _HelmetConstants.TAG_PROPERTIES.ITEM_PROP)) {\n                    primaryAttributeKey = attributeKey;\n                }\n            }\n\n            if (!primaryAttributeKey || !tag[primaryAttributeKey]) {\n                return false;\n            }\n\n            var value = tag[primaryAttributeKey].toLowerCase();\n\n            if (!approvedSeenTags[primaryAttributeKey]) {\n                approvedSeenTags[primaryAttributeKey] = {};\n            }\n\n            if (!instanceSeenTags[primaryAttributeKey]) {\n                instanceSeenTags[primaryAttributeKey] = {};\n            }\n\n            if (!approvedSeenTags[primaryAttributeKey][value]) {\n                instanceSeenTags[primaryAttributeKey][value] = true;\n                return true;\n            }\n\n            return false;\n        }).reverse().forEach(function (tag) {\n            return approvedTags.push(tag);\n        });\n\n        // Update seen tags with tags from this instance\n        var keys = Object.keys(instanceSeenTags);\n        for (var i = 0; i < keys.length; i++) {\n            var attributeKey = keys[i];\n            var tagUnion = (0, _objectAssign2.default)({}, approvedSeenTags[attributeKey], instanceSeenTags[attributeKey]);\n\n            approvedSeenTags[attributeKey] = tagUnion;\n        }\n\n        return approvedTags;\n    }, []).reverse();\n};\n\nvar getInnermostProperty = function getInnermostProperty(propsList, property) {\n    for (var i = propsList.length - 1; i >= 0; i--) {\n        var props = propsList[i];\n\n        if (props.hasOwnProperty(property)) {\n            return props[property];\n        }\n    }\n\n    return null;\n};\n\nvar reducePropsToState = function reducePropsToState(propsList) {\n    return {\n        baseTag: getBaseTagFromPropsList([_HelmetConstants.TAG_PROPERTIES.HREF], propsList),\n        bodyAttributes: getAttributesFromPropsList(_HelmetConstants.ATTRIBUTE_NAMES.BODY, propsList),\n        defer: getInnermostProperty(propsList, _HelmetConstants.HELMET_PROPS.DEFER),\n        encode: getInnermostProperty(propsList, _HelmetConstants.HELMET_PROPS.ENCODE_SPECIAL_CHARACTERS),\n        htmlAttributes: getAttributesFromPropsList(_HelmetConstants.ATTRIBUTE_NAMES.HTML, propsList),\n        linkTags: getTagsFromPropsList(_HelmetConstants.TAG_NAMES.LINK, [_HelmetConstants.TAG_PROPERTIES.REL, _HelmetConstants.TAG_PROPERTIES.HREF], propsList),\n        metaTags: getTagsFromPropsList(_HelmetConstants.TAG_NAMES.META, [_HelmetConstants.TAG_PROPERTIES.NAME, _HelmetConstants.TAG_PROPERTIES.CHARSET, _HelmetConstants.TAG_PROPERTIES.HTTPEQUIV, _HelmetConstants.TAG_PROPERTIES.PROPERTY, _HelmetConstants.TAG_PROPERTIES.ITEM_PROP], propsList),\n        noscriptTags: getTagsFromPropsList(_HelmetConstants.TAG_NAMES.NOSCRIPT, [_HelmetConstants.TAG_PROPERTIES.INNER_HTML], propsList),\n        onChangeClientState: getOnChangeClientState(propsList),\n        scriptTags: getTagsFromPropsList(_HelmetConstants.TAG_NAMES.SCRIPT, [_HelmetConstants.TAG_PROPERTIES.SRC, _HelmetConstants.TAG_PROPERTIES.INNER_HTML], propsList),\n        styleTags: getTagsFromPropsList(_HelmetConstants.TAG_NAMES.STYLE, [_HelmetConstants.TAG_PROPERTIES.CSS_TEXT], propsList),\n        title: getTitleFromPropsList(propsList),\n        titleAttributes: getAttributesFromPropsList(_HelmetConstants.ATTRIBUTE_NAMES.TITLE, propsList)\n    };\n};\n\nvar rafPolyfill = function () {\n    var clock = Date.now();\n\n    return function (callback) {\n        var currentTime = Date.now();\n\n        if (currentTime - clock > 16) {\n            clock = currentTime;\n            callback(currentTime);\n        } else {\n            setTimeout(function () {\n                rafPolyfill(callback);\n            }, 0);\n        }\n    };\n}();\n\nvar cafPolyfill = function cafPolyfill(id) {\n    return clearTimeout(id);\n};\n\nvar requestAnimationFrame = typeof window !== \"undefined\" ? window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || rafPolyfill : global.requestAnimationFrame || rafPolyfill;\n\nvar cancelAnimationFrame = typeof window !== \"undefined\" ? window.cancelAnimationFrame || window.webkitCancelAnimationFrame || window.mozCancelAnimationFrame || cafPolyfill : global.cancelAnimationFrame || cafPolyfill;\n\nvar warn = function warn(msg) {\n    return console && typeof console.warn === \"function\" && console.warn(msg);\n};\n\nvar _helmetCallback = null;\n\nvar handleClientStateChange = function handleClientStateChange(newState) {\n    if (_helmetCallback) {\n        cancelAnimationFrame(_helmetCallback);\n    }\n\n    if (newState.defer) {\n        _helmetCallback = requestAnimationFrame(function () {\n            commitTagChanges(newState, function () {\n                _helmetCallback = null;\n            });\n        });\n    } else {\n        commitTagChanges(newState);\n        _helmetCallback = null;\n    }\n};\n\nvar commitTagChanges = function commitTagChanges(newState, cb) {\n    var baseTag = newState.baseTag,\n        bodyAttributes = newState.bodyAttributes,\n        htmlAttributes = newState.htmlAttributes,\n        linkTags = newState.linkTags,\n        metaTags = newState.metaTags,\n        noscriptTags = newState.noscriptTags,\n        onChangeClientState = newState.onChangeClientState,\n        scriptTags = newState.scriptTags,\n        styleTags = newState.styleTags,\n        title = newState.title,\n        titleAttributes = newState.titleAttributes;\n\n    updateAttributes(_HelmetConstants.TAG_NAMES.BODY, bodyAttributes);\n    updateAttributes(_HelmetConstants.TAG_NAMES.HTML, htmlAttributes);\n\n    updateTitle(title, titleAttributes);\n\n    var tagUpdates = {\n        baseTag: updateTags(_HelmetConstants.TAG_NAMES.BASE, baseTag),\n        linkTags: updateTags(_HelmetConstants.TAG_NAMES.LINK, linkTags),\n        metaTags: updateTags(_HelmetConstants.TAG_NAMES.META, metaTags),\n        noscriptTags: updateTags(_HelmetConstants.TAG_NAMES.NOSCRIPT, noscriptTags),\n        scriptTags: updateTags(_HelmetConstants.TAG_NAMES.SCRIPT, scriptTags),\n        styleTags: updateTags(_HelmetConstants.TAG_NAMES.STYLE, styleTags)\n    };\n\n    var addedTags = {};\n    var removedTags = {};\n\n    Object.keys(tagUpdates).forEach(function (tagType) {\n        var _tagUpdates$tagType = tagUpdates[tagType],\n            newTags = _tagUpdates$tagType.newTags,\n            oldTags = _tagUpdates$tagType.oldTags;\n\n\n        if (newTags.length) {\n            addedTags[tagType] = newTags;\n        }\n        if (oldTags.length) {\n            removedTags[tagType] = tagUpdates[tagType].oldTags;\n        }\n    });\n\n    cb && cb();\n\n    onChangeClientState(newState, addedTags, removedTags);\n};\n\nvar flattenArray = function flattenArray(possibleArray) {\n    return Array.isArray(possibleArray) ? possibleArray.join(\"\") : possibleArray;\n};\n\nvar updateTitle = function updateTitle(title, attributes) {\n    if (typeof title !== \"undefined\" && document.title !== title) {\n        document.title = flattenArray(title);\n    }\n\n    updateAttributes(_HelmetConstants.TAG_NAMES.TITLE, attributes);\n};\n\nvar updateAttributes = function updateAttributes(tagName, attributes) {\n    var elementTag = document.getElementsByTagName(tagName)[0];\n\n    if (!elementTag) {\n        return;\n    }\n\n    var helmetAttributeString = elementTag.getAttribute(_HelmetConstants.HELMET_ATTRIBUTE);\n    var helmetAttributes = helmetAttributeString ? helmetAttributeString.split(\",\") : [];\n    var attributesToRemove = [].concat(helmetAttributes);\n    var attributeKeys = Object.keys(attributes);\n\n    for (var i = 0; i < attributeKeys.length; i++) {\n        var attribute = attributeKeys[i];\n        var value = attributes[attribute] || \"\";\n\n        if (elementTag.getAttribute(attribute) !== value) {\n            elementTag.setAttribute(attribute, value);\n        }\n\n        if (helmetAttributes.indexOf(attribute) === -1) {\n            helmetAttributes.push(attribute);\n        }\n\n        var indexToSave = attributesToRemove.indexOf(attribute);\n        if (indexToSave !== -1) {\n            attributesToRemove.splice(indexToSave, 1);\n        }\n    }\n\n    for (var _i = attributesToRemove.length - 1; _i >= 0; _i--) {\n        elementTag.removeAttribute(attributesToRemove[_i]);\n    }\n\n    if (helmetAttributes.length === attributesToRemove.length) {\n        elementTag.removeAttribute(_HelmetConstants.HELMET_ATTRIBUTE);\n    } else if (elementTag.getAttribute(_HelmetConstants.HELMET_ATTRIBUTE) !== attributeKeys.join(\",\")) {\n        elementTag.setAttribute(_HelmetConstants.HELMET_ATTRIBUTE, attributeKeys.join(\",\"));\n    }\n};\n\nvar updateTags = function updateTags(type, tags) {\n    var headElement = document.head || document.querySelector(_HelmetConstants.TAG_NAMES.HEAD);\n    var tagNodes = headElement.querySelectorAll(type + \"[\" + _HelmetConstants.HELMET_ATTRIBUTE + \"]\");\n    var oldTags = Array.prototype.slice.call(tagNodes);\n    var newTags = [];\n    var indexToDelete = void 0;\n\n    if (tags && tags.length) {\n        tags.forEach(function (tag) {\n            var newElement = document.createElement(type);\n\n            for (var attribute in tag) {\n                if (tag.hasOwnProperty(attribute)) {\n                    if (attribute === _HelmetConstants.TAG_PROPERTIES.INNER_HTML) {\n                        newElement.innerHTML = tag.innerHTML;\n                    } else if (attribute === _HelmetConstants.TAG_PROPERTIES.CSS_TEXT) {\n                        if (newElement.styleSheet) {\n                            newElement.styleSheet.cssText = tag.cssText;\n                        } else {\n                            newElement.appendChild(document.createTextNode(tag.cssText));\n                        }\n                    } else {\n                        var value = typeof tag[attribute] === \"undefined\" ? \"\" : tag[attribute];\n                        newElement.setAttribute(attribute, value);\n                    }\n                }\n            }\n\n            newElement.setAttribute(_HelmetConstants.HELMET_ATTRIBUTE, \"true\");\n\n            // Remove a duplicate tag from domTagstoRemove, so it isn't cleared.\n            if (oldTags.some(function (existingTag, index) {\n                indexToDelete = index;\n                return newElement.isEqualNode(existingTag);\n            })) {\n                oldTags.splice(indexToDelete, 1);\n            } else {\n                newTags.push(newElement);\n            }\n        });\n    }\n\n    oldTags.forEach(function (tag) {\n        return tag.parentNode.removeChild(tag);\n    });\n    newTags.forEach(function (tag) {\n        return headElement.appendChild(tag);\n    });\n\n    return {\n        oldTags: oldTags,\n        newTags: newTags\n    };\n};\n\nvar generateElementAttributesAsString = function generateElementAttributesAsString(attributes) {\n    return Object.keys(attributes).reduce(function (str, key) {\n        var attr = typeof attributes[key] !== \"undefined\" ? key + \"=\\\"\" + attributes[key] + \"\\\"\" : \"\" + key;\n        return str ? str + \" \" + attr : attr;\n    }, \"\");\n};\n\nvar generateTitleAsString = function generateTitleAsString(type, title, attributes, encode) {\n    var attributeString = generateElementAttributesAsString(attributes);\n    var flattenedTitle = flattenArray(title);\n    return attributeString ? \"<\" + type + \" \" + _HelmetConstants.HELMET_ATTRIBUTE + \"=\\\"true\\\" \" + attributeString + \">\" + encodeSpecialCharacters(flattenedTitle, encode) + \"</\" + type + \">\" : \"<\" + type + \" \" + _HelmetConstants.HELMET_ATTRIBUTE + \"=\\\"true\\\">\" + encodeSpecialCharacters(flattenedTitle, encode) + \"</\" + type + \">\";\n};\n\nvar generateTagsAsString = function generateTagsAsString(type, tags, encode) {\n    return tags.reduce(function (str, tag) {\n        var attributeHtml = Object.keys(tag).filter(function (attribute) {\n            return !(attribute === _HelmetConstants.TAG_PROPERTIES.INNER_HTML || attribute === _HelmetConstants.TAG_PROPERTIES.CSS_TEXT);\n        }).reduce(function (string, attribute) {\n            var attr = typeof tag[attribute] === \"undefined\" ? attribute : attribute + \"=\\\"\" + encodeSpecialCharacters(tag[attribute], encode) + \"\\\"\";\n            return string ? string + \" \" + attr : attr;\n        }, \"\");\n\n        var tagContent = tag.innerHTML || tag.cssText || \"\";\n\n        var isSelfClosing = _HelmetConstants.SELF_CLOSING_TAGS.indexOf(type) === -1;\n\n        return str + \"<\" + type + \" \" + _HelmetConstants.HELMET_ATTRIBUTE + \"=\\\"true\\\" \" + attributeHtml + (isSelfClosing ? \"/>\" : \">\" + tagContent + \"</\" + type + \">\");\n    }, \"\");\n};\n\nvar convertElementAttributestoReactProps = function convertElementAttributestoReactProps(attributes) {\n    var initProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    return Object.keys(attributes).reduce(function (obj, key) {\n        obj[_HelmetConstants.REACT_TAG_MAP[key] || key] = attributes[key];\n        return obj;\n    }, initProps);\n};\n\nvar convertReactPropstoHtmlAttributes = function convertReactPropstoHtmlAttributes(props) {\n    var initAttributes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    return Object.keys(props).reduce(function (obj, key) {\n        obj[_HelmetConstants.HTML_TAG_MAP[key] || key] = props[key];\n        return obj;\n    }, initAttributes);\n};\n\nvar generateTitleAsReactComponent = function generateTitleAsReactComponent(type, title, attributes) {\n    var _initProps;\n\n    // assigning into an array to define toString function on it\n    var initProps = (_initProps = {\n        key: title\n    }, _initProps[_HelmetConstants.HELMET_ATTRIBUTE] = true, _initProps);\n    var props = convertElementAttributestoReactProps(attributes, initProps);\n\n    return [_react2.default.createElement(_HelmetConstants.TAG_NAMES.TITLE, props, title)];\n};\n\nvar generateTagsAsReactComponent = function generateTagsAsReactComponent(type, tags) {\n    return tags.map(function (tag, i) {\n        var _mappedTag;\n\n        var mappedTag = (_mappedTag = {\n            key: i\n        }, _mappedTag[_HelmetConstants.HELMET_ATTRIBUTE] = true, _mappedTag);\n\n        Object.keys(tag).forEach(function (attribute) {\n            var mappedAttribute = _HelmetConstants.REACT_TAG_MAP[attribute] || attribute;\n\n            if (mappedAttribute === _HelmetConstants.TAG_PROPERTIES.INNER_HTML || mappedAttribute === _HelmetConstants.TAG_PROPERTIES.CSS_TEXT) {\n                var content = tag.innerHTML || tag.cssText;\n                mappedTag.dangerouslySetInnerHTML = { __html: content };\n            } else {\n                mappedTag[mappedAttribute] = tag[attribute];\n            }\n        });\n\n        return _react2.default.createElement(type, mappedTag);\n    });\n};\n\nvar getMethodsForTag = function getMethodsForTag(type, tags, encode) {\n    switch (type) {\n        case _HelmetConstants.TAG_NAMES.TITLE:\n            return {\n                toComponent: function toComponent() {\n                    return generateTitleAsReactComponent(type, tags.title, tags.titleAttributes, encode);\n                },\n                toString: function toString() {\n                    return generateTitleAsString(type, tags.title, tags.titleAttributes, encode);\n                }\n            };\n        case _HelmetConstants.ATTRIBUTE_NAMES.BODY:\n        case _HelmetConstants.ATTRIBUTE_NAMES.HTML:\n            return {\n                toComponent: function toComponent() {\n                    return convertElementAttributestoReactProps(tags);\n                },\n                toString: function toString() {\n                    return generateElementAttributesAsString(tags);\n                }\n            };\n        default:\n            return {\n                toComponent: function toComponent() {\n                    return generateTagsAsReactComponent(type, tags);\n                },\n                toString: function toString() {\n                    return generateTagsAsString(type, tags, encode);\n                }\n            };\n    }\n};\n\nvar mapStateOnServer = function mapStateOnServer(_ref) {\n    var baseTag = _ref.baseTag,\n        bodyAttributes = _ref.bodyAttributes,\n        encode = _ref.encode,\n        htmlAttributes = _ref.htmlAttributes,\n        linkTags = _ref.linkTags,\n        metaTags = _ref.metaTags,\n        noscriptTags = _ref.noscriptTags,\n        scriptTags = _ref.scriptTags,\n        styleTags = _ref.styleTags,\n        _ref$title = _ref.title,\n        title = _ref$title === undefined ? \"\" : _ref$title,\n        titleAttributes = _ref.titleAttributes;\n    return {\n        base: getMethodsForTag(_HelmetConstants.TAG_NAMES.BASE, baseTag, encode),\n        bodyAttributes: getMethodsForTag(_HelmetConstants.ATTRIBUTE_NAMES.BODY, bodyAttributes, encode),\n        htmlAttributes: getMethodsForTag(_HelmetConstants.ATTRIBUTE_NAMES.HTML, htmlAttributes, encode),\n        link: getMethodsForTag(_HelmetConstants.TAG_NAMES.LINK, linkTags, encode),\n        meta: getMethodsForTag(_HelmetConstants.TAG_NAMES.META, metaTags, encode),\n        noscript: getMethodsForTag(_HelmetConstants.TAG_NAMES.NOSCRIPT, noscriptTags, encode),\n        script: getMethodsForTag(_HelmetConstants.TAG_NAMES.SCRIPT, scriptTags, encode),\n        style: getMethodsForTag(_HelmetConstants.TAG_NAMES.STYLE, styleTags, encode),\n        title: getMethodsForTag(_HelmetConstants.TAG_NAMES.TITLE, { title: title, titleAttributes: titleAttributes }, encode)\n    };\n};\n\nexports.convertReactPropstoHtmlAttributes = convertReactPropstoHtmlAttributes;\nexports.handleClientStateChange = handleClientStateChange;\nexports.mapStateOnServer = mapStateOnServer;\nexports.reducePropsToState = reducePropsToState;\nexports.requestAnimationFrame = requestAnimationFrame;\nexports.warn = warn;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-helmet/lib/HelmetUtils.js\n// module id = 405\n// module chunks = 114276838955818","'use strict';\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _exenv = require('exenv');\n\nvar _exenv2 = _interopRequireDefault(_exenv);\n\nvar _shallowequal = require('shallowequal');\n\nvar _shallowequal2 = _interopRequireDefault(_shallowequal);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nmodule.exports = function withSideEffect(reducePropsToState, handleStateChangeOnClient, mapStateOnServer) {\n  if (typeof reducePropsToState !== 'function') {\n    throw new Error('Expected reducePropsToState to be a function.');\n  }\n  if (typeof handleStateChangeOnClient !== 'function') {\n    throw new Error('Expected handleStateChangeOnClient to be a function.');\n  }\n  if (typeof mapStateOnServer !== 'undefined' && typeof mapStateOnServer !== 'function') {\n    throw new Error('Expected mapStateOnServer to either be undefined or a function.');\n  }\n\n  function getDisplayName(WrappedComponent) {\n    return WrappedComponent.displayName || WrappedComponent.name || 'Component';\n  }\n\n  return function wrap(WrappedComponent) {\n    if (typeof WrappedComponent !== 'function') {\n      throw new Error('Expected WrappedComponent to be a React component.');\n    }\n\n    var mountedInstances = [];\n    var state = void 0;\n\n    function emitChange() {\n      state = reducePropsToState(mountedInstances.map(function (instance) {\n        return instance.props;\n      }));\n\n      if (SideEffect.canUseDOM) {\n        handleStateChangeOnClient(state);\n      } else if (mapStateOnServer) {\n        state = mapStateOnServer(state);\n      }\n    }\n\n    var SideEffect = function (_Component) {\n      _inherits(SideEffect, _Component);\n\n      function SideEffect() {\n        _classCallCheck(this, SideEffect);\n\n        return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n      }\n\n      // Try to use displayName of wrapped component\n      SideEffect.peek = function peek() {\n        return state;\n      };\n\n      // Expose canUseDOM so tests can monkeypatch it\n\n\n      SideEffect.rewind = function rewind() {\n        if (SideEffect.canUseDOM) {\n          throw new Error('You may only call rewind() on the server. Call peek() to read the current state.');\n        }\n\n        var recordedState = state;\n        state = undefined;\n        mountedInstances = [];\n        return recordedState;\n      };\n\n      SideEffect.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n        return !(0, _shallowequal2.default)(nextProps, this.props);\n      };\n\n      SideEffect.prototype.componentWillMount = function componentWillMount() {\n        mountedInstances.push(this);\n        emitChange();\n      };\n\n      SideEffect.prototype.componentDidUpdate = function componentDidUpdate() {\n        emitChange();\n      };\n\n      SideEffect.prototype.componentWillUnmount = function componentWillUnmount() {\n        var index = mountedInstances.indexOf(this);\n        mountedInstances.splice(index, 1);\n        emitChange();\n      };\n\n      SideEffect.prototype.render = function render() {\n        return _react2.default.createElement(WrappedComponent, this.props);\n      };\n\n      return SideEffect;\n    }(_react.Component);\n\n    SideEffect.displayName = 'SideEffect(' + getDisplayName(WrappedComponent) + ')';\n    SideEffect.canUseDOM = _exenv2.default.canUseDOM;\n\n\n    return SideEffect;\n  };\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-side-effect/lib/index.js\n// module id = 423\n// module chunks = 114276838955818","module.exports = function shallowEqual(objA, objB, compare, compareContext) {\n\n    var ret = compare ? compare.call(compareContext, objA, objB) : void 0;\n\n    if(ret !== void 0) {\n        return !!ret;\n    }\n\n    if(objA === objB) {\n        return true;\n    }\n\n    if(typeof objA !== 'object' || !objA ||\n       typeof objB !== 'object' || !objB) {\n        return false;\n    }\n\n    var keysA = Object.keys(objA);\n    var keysB = Object.keys(objB);\n\n    if(keysA.length !== keysB.length) {\n        return false;\n    }\n\n    var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB);\n\n    // Test for A's keys different from B.\n    for(var idx = 0; idx < keysA.length; idx++) {\n\n        var key = keysA[idx];\n\n        if(!bHasOwnProperty(key)) {\n            return false;\n        }\n\n        var valueA = objA[key];\n        var valueB = objB[key];\n\n        ret = compare ? compare.call(compareContext, valueA, valueB, key) : void 0;\n\n        if(ret === false ||\n           ret === void 0 && valueA !== valueB) {\n            return false;\n        }\n\n    }\n\n    return true;\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/shallowequal/index.js\n// module id = 440\n// module chunks = 114276838955818","/*!\n* svg.js - A lightweight library for manipulating and animating SVG.\n* @version 2.6.4\n* https://svgdotjs.github.io/\n*\n* @copyright Wout Fierens <wout@mick-wout.com>\n* @license MIT\n*\n* BUILT: Wed Feb 07 2018 22:59:25 GMT+0100 (Mitteleuropäische Zeit)\n*/;\n(function(root, factory) {\r\n  /* istanbul ignore next */\r\n  if (typeof define === 'function' && define.amd) {\r\n    define(function(){\r\n      return factory(root, root.document)\r\n    })\r\n  } else if (typeof exports === 'object') {\r\n    module.exports = root.document ? factory(root, root.document) : function(w){ return factory(w, w.document) }\r\n  } else {\r\n    root.SVG = factory(root, root.document)\r\n  }\r\n}(typeof window !== \"undefined\" ? window : this, function(window, document) {\r\n\r\n// The main wrapping element\r\nvar SVG = this.SVG = function(element) {\r\n  if (SVG.supported) {\r\n    element = new SVG.Doc(element)\r\n\r\n    if(!SVG.parser.draw)\r\n      SVG.prepare()\r\n\r\n    return element\r\n  }\r\n}\r\n\r\n// Default namespaces\r\nSVG.ns    = 'http://www.w3.org/2000/svg'\r\nSVG.xmlns = 'http://www.w3.org/2000/xmlns/'\r\nSVG.xlink = 'http://www.w3.org/1999/xlink'\r\nSVG.svgjs = 'http://svgjs.com/svgjs'\r\n\r\n// Svg support test\r\nSVG.supported = (function() {\r\n  return !! document.createElementNS &&\r\n         !! document.createElementNS(SVG.ns,'svg').createSVGRect\r\n})()\r\n\r\n// Don't bother to continue if SVG is not supported\r\nif (!SVG.supported) return false\r\n\r\n// Element id sequence\r\nSVG.did  = 1000\r\n\r\n// Get next named element id\r\nSVG.eid = function(name) {\r\n  return 'Svgjs' + capitalize(name) + (SVG.did++)\r\n}\r\n\r\n// Method for element creation\r\nSVG.create = function(name) {\r\n  // create element\r\n  var element = document.createElementNS(this.ns, name)\r\n\r\n  // apply unique id\r\n  element.setAttribute('id', this.eid(name))\r\n\r\n  return element\r\n}\r\n\r\n// Method for extending objects\r\nSVG.extend = function() {\r\n  var modules, methods, key, i\r\n\r\n  // Get list of modules\r\n  modules = [].slice.call(arguments)\r\n\r\n  // Get object with extensions\r\n  methods = modules.pop()\r\n\r\n  for (i = modules.length - 1; i >= 0; i--)\r\n    if (modules[i])\r\n      for (key in methods)\r\n        modules[i].prototype[key] = methods[key]\r\n\r\n  // Make sure SVG.Set inherits any newly added methods\r\n  if (SVG.Set && SVG.Set.inherit)\r\n    SVG.Set.inherit()\r\n}\r\n\r\n// Invent new element\r\nSVG.invent = function(config) {\r\n  // Create element initializer\r\n  var initializer = typeof config.create == 'function' ?\r\n    config.create :\r\n    function() {\r\n      this.constructor.call(this, SVG.create(config.create))\r\n    }\r\n\r\n  // Inherit prototype\r\n  if (config.inherit)\r\n    initializer.prototype = new config.inherit\r\n\r\n  // Extend with methods\r\n  if (config.extend)\r\n    SVG.extend(initializer, config.extend)\r\n\r\n  // Attach construct method to parent\r\n  if (config.construct)\r\n    SVG.extend(config.parent || SVG.Container, config.construct)\r\n\r\n  return initializer\r\n}\r\n\r\n// Adopt existing svg elements\r\nSVG.adopt = function(node) {\r\n  // check for presence of node\r\n  if (!node) return null\r\n\r\n  // make sure a node isn't already adopted\r\n  if (node.instance) return node.instance\r\n\r\n  // initialize variables\r\n  var element\r\n\r\n  // adopt with element-specific settings\r\n  if (node.nodeName == 'svg')\r\n    element = node.parentNode instanceof window.SVGElement ? new SVG.Nested : new SVG.Doc\r\n  else if (node.nodeName == 'linearGradient')\r\n    element = new SVG.Gradient('linear')\r\n  else if (node.nodeName == 'radialGradient')\r\n    element = new SVG.Gradient('radial')\r\n  else if (SVG[capitalize(node.nodeName)])\r\n    element = new SVG[capitalize(node.nodeName)]\r\n  else\r\n    element = new SVG.Element(node)\r\n\r\n  // ensure references\r\n  element.type  = node.nodeName\r\n  element.node  = node\r\n  node.instance = element\r\n\r\n  // SVG.Class specific preparations\r\n  if (element instanceof SVG.Doc)\r\n    element.namespace().defs()\r\n\r\n  // pull svgjs data from the dom (getAttributeNS doesn't work in html5)\r\n  element.setData(JSON.parse(node.getAttribute('svgjs:data')) || {})\r\n\r\n  return element\r\n}\r\n\r\n// Initialize parsing element\r\nSVG.prepare = function() {\r\n  // Select document body and create invisible svg element\r\n  var body = document.getElementsByTagName('body')[0]\r\n    , draw = (body ? new SVG.Doc(body) : SVG.adopt(document.documentElement).nested()).size(2, 0)\r\n\r\n  // Create parser object\r\n  SVG.parser = {\r\n    body: body || document.documentElement\r\n  , draw: draw.style('opacity:0;position:absolute;left:-100%;top:-100%;overflow:hidden').node\r\n  , poly: draw.polyline().node\r\n  , path: draw.path().node\r\n  , native: SVG.create('svg')\r\n  }\r\n}\r\n\r\nSVG.parser = {\r\n  native: SVG.create('svg')\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n  if(!SVG.parser.draw)\r\n    SVG.prepare()\r\n}, false)\r\n\n// Storage for regular expressions\r\nSVG.regex = {\r\n  // Parse unit value\r\n  numberAndUnit:    /^([+-]?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?)([a-z%]*)$/i\r\n\r\n  // Parse hex value\r\n, hex:              /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i\r\n\r\n  // Parse rgb value\r\n, rgb:              /rgb\\((\\d+),(\\d+),(\\d+)\\)/\r\n\r\n  // Parse reference id\r\n, reference:        /#([a-z0-9\\-_]+)/i\r\n\r\n  // splits a transformation chain\r\n, transforms:       /\\)\\s*,?\\s*/\r\n\r\n  // Whitespace\r\n, whitespace:       /\\s/g\r\n\r\n  // Test hex value\r\n, isHex:            /^#[a-f0-9]{3,6}$/i\r\n\r\n  // Test rgb value\r\n, isRgb:            /^rgb\\(/\r\n\r\n  // Test css declaration\r\n, isCss:            /[^:]+:[^;]+;?/\r\n\r\n  // Test for blank string\r\n, isBlank:          /^(\\s+)?$/\r\n\r\n  // Test for numeric string\r\n, isNumber:         /^[+-]?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i\r\n\r\n  // Test for percent value\r\n, isPercent:        /^-?[\\d\\.]+%$/\r\n\r\n  // Test for image url\r\n, isImage:          /\\.(jpg|jpeg|png|gif|svg)(\\?[^=]+.*)?/i\r\n\r\n  // split at whitespace and comma\r\n, delimiter:        /[\\s,]+/\r\n\r\n  // The following regex are used to parse the d attribute of a path\r\n\r\n  // Matches all hyphens which are not after an exponent\r\n, hyphen:           /([^e])\\-/gi\r\n\r\n  // Replaces and tests for all path letters\r\n, pathLetters:      /[MLHVCSQTAZ]/gi\r\n\r\n  // yes we need this one, too\r\n, isPathLetter:     /[MLHVCSQTAZ]/i\r\n\r\n  // matches 0.154.23.45\r\n, numbersWithDots:  /((\\d?\\.\\d+(?:e[+-]?\\d+)?)((?:\\.\\d+(?:e[+-]?\\d+)?)+))+/gi\r\n\r\n  // matches .\r\n, dots:             /\\./g\r\n}\r\n\nSVG.utils = {\r\n  // Map function\r\n  map: function(array, block) {\r\n    var i\r\n      , il = array.length\r\n      , result = []\r\n\r\n    for (i = 0; i < il; i++)\r\n      result.push(block(array[i]))\r\n\r\n    return result\r\n  }\r\n\r\n  // Filter function\r\n, filter: function(array, block) {\r\n    var i\r\n      , il = array.length\r\n      , result = []\r\n\r\n    for (i = 0; i < il; i++)\r\n      if (block(array[i]))\r\n        result.push(array[i])\r\n\r\n    return result\r\n  }\r\n\r\n  // Degrees to radians\r\n, radians: function(d) {\r\n    return d % 360 * Math.PI / 180\r\n  }\r\n\r\n  // Radians to degrees\r\n, degrees: function(r) {\r\n    return r * 180 / Math.PI % 360\r\n  }\r\n\r\n, filterSVGElements: function(nodes) {\r\n    return this.filter( nodes, function(el) { return el instanceof window.SVGElement })\r\n  }\r\n\r\n}\n\r\nSVG.defaults = {\r\n  // Default attribute values\r\n  attrs: {\r\n    // fill and stroke\r\n    'fill-opacity':     1\r\n  , 'stroke-opacity':   1\r\n  , 'stroke-width':     0\r\n  , 'stroke-linejoin':  'miter'\r\n  , 'stroke-linecap':   'butt'\r\n  , fill:               '#000000'\r\n  , stroke:             '#000000'\r\n  , opacity:            1\r\n    // position\r\n  , x:                  0\r\n  , y:                  0\r\n  , cx:                 0\r\n  , cy:                 0\r\n    // size\r\n  , width:              0\r\n  , height:             0\r\n    // radius\r\n  , r:                  0\r\n  , rx:                 0\r\n  , ry:                 0\r\n    // gradient\r\n  , offset:             0\r\n  , 'stop-opacity':     1\r\n  , 'stop-color':       '#000000'\r\n    // text\r\n  , 'font-size':        16\r\n  , 'font-family':      'Helvetica, Arial, sans-serif'\r\n  , 'text-anchor':      'start'\r\n  }\r\n\r\n}\n// Module for color convertions\r\nSVG.Color = function(color) {\r\n  var match\r\n\r\n  // initialize defaults\r\n  this.r = 0\r\n  this.g = 0\r\n  this.b = 0\r\n\r\n  if(!color) return\r\n\r\n  // parse color\r\n  if (typeof color === 'string') {\r\n    if (SVG.regex.isRgb.test(color)) {\r\n      // get rgb values\r\n      match = SVG.regex.rgb.exec(color.replace(SVG.regex.whitespace,''))\r\n\r\n      // parse numeric values\r\n      this.r = parseInt(match[1])\r\n      this.g = parseInt(match[2])\r\n      this.b = parseInt(match[3])\r\n\r\n    } else if (SVG.regex.isHex.test(color)) {\r\n      // get hex values\r\n      match = SVG.regex.hex.exec(fullHex(color))\r\n\r\n      // parse numeric values\r\n      this.r = parseInt(match[1], 16)\r\n      this.g = parseInt(match[2], 16)\r\n      this.b = parseInt(match[3], 16)\r\n\r\n    }\r\n\r\n  } else if (typeof color === 'object') {\r\n    this.r = color.r\r\n    this.g = color.g\r\n    this.b = color.b\r\n\r\n  }\r\n\r\n}\r\n\r\nSVG.extend(SVG.Color, {\r\n  // Default to hex conversion\r\n  toString: function() {\r\n    return this.toHex()\r\n  }\r\n  // Build hex value\r\n, toHex: function() {\r\n    return '#'\r\n      + compToHex(this.r)\r\n      + compToHex(this.g)\r\n      + compToHex(this.b)\r\n  }\r\n  // Build rgb value\r\n, toRgb: function() {\r\n    return 'rgb(' + [this.r, this.g, this.b].join() + ')'\r\n  }\r\n  // Calculate true brightness\r\n, brightness: function() {\r\n    return (this.r / 255 * 0.30)\r\n         + (this.g / 255 * 0.59)\r\n         + (this.b / 255 * 0.11)\r\n  }\r\n  // Make color morphable\r\n, morph: function(color) {\r\n    this.destination = new SVG.Color(color)\r\n\r\n    return this\r\n  }\r\n  // Get morphed color at given position\r\n, at: function(pos) {\r\n    // make sure a destination is defined\r\n    if (!this.destination) return this\r\n\r\n    // normalise pos\r\n    pos = pos < 0 ? 0 : pos > 1 ? 1 : pos\r\n\r\n    // generate morphed color\r\n    return new SVG.Color({\r\n      r: ~~(this.r + (this.destination.r - this.r) * pos)\r\n    , g: ~~(this.g + (this.destination.g - this.g) * pos)\r\n    , b: ~~(this.b + (this.destination.b - this.b) * pos)\r\n    })\r\n  }\r\n\r\n})\r\n\r\n// Testers\r\n\r\n// Test if given value is a color string\r\nSVG.Color.test = function(color) {\r\n  color += ''\r\n  return SVG.regex.isHex.test(color)\r\n      || SVG.regex.isRgb.test(color)\r\n}\r\n\r\n// Test if given value is a rgb object\r\nSVG.Color.isRgb = function(color) {\r\n  return color && typeof color.r == 'number'\r\n               && typeof color.g == 'number'\r\n               && typeof color.b == 'number'\r\n}\r\n\r\n// Test if given value is a color\r\nSVG.Color.isColor = function(color) {\r\n  return SVG.Color.isRgb(color) || SVG.Color.test(color)\r\n}\n// Module for array conversion\r\nSVG.Array = function(array, fallback) {\r\n  array = (array || []).valueOf()\r\n\r\n  // if array is empty and fallback is provided, use fallback\r\n  if (array.length == 0 && fallback)\r\n    array = fallback.valueOf()\r\n\r\n  // parse array\r\n  this.value = this.parse(array)\r\n}\r\n\r\nSVG.extend(SVG.Array, {\r\n  // Make array morphable\r\n  morph: function(array) {\r\n    this.destination = this.parse(array)\r\n\r\n    // normalize length of arrays\r\n    if (this.value.length != this.destination.length) {\r\n      var lastValue       = this.value[this.value.length - 1]\r\n        , lastDestination = this.destination[this.destination.length - 1]\r\n\r\n      while(this.value.length > this.destination.length)\r\n        this.destination.push(lastDestination)\r\n      while(this.value.length < this.destination.length)\r\n        this.value.push(lastValue)\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Clean up any duplicate points\r\n, settle: function() {\r\n    // find all unique values\r\n    for (var i = 0, il = this.value.length, seen = []; i < il; i++)\r\n      if (seen.indexOf(this.value[i]) == -1)\r\n        seen.push(this.value[i])\r\n\r\n    // set new value\r\n    return this.value = seen\r\n  }\r\n  // Get morphed array at given position\r\n, at: function(pos) {\r\n    // make sure a destination is defined\r\n    if (!this.destination) return this\r\n\r\n    // generate morphed array\r\n    for (var i = 0, il = this.value.length, array = []; i < il; i++)\r\n      array.push(this.value[i] + (this.destination[i] - this.value[i]) * pos)\r\n\r\n    return new SVG.Array(array)\r\n  }\r\n  // Convert array to string\r\n, toString: function() {\r\n    return this.value.join(' ')\r\n  }\r\n  // Real value\r\n, valueOf: function() {\r\n    return this.value\r\n  }\r\n  // Parse whitespace separated string\r\n, parse: function(array) {\r\n    array = array.valueOf()\r\n\r\n    // if already is an array, no need to parse it\r\n    if (Array.isArray(array)) return array\r\n\r\n    return this.split(array)\r\n  }\r\n  // Strip unnecessary whitespace\r\n, split: function(string) {\r\n    return string.trim().split(SVG.regex.delimiter).map(parseFloat)\r\n  }\r\n  // Reverse array\r\n, reverse: function() {\r\n    this.value.reverse()\r\n\r\n    return this\r\n  }\r\n, clone: function() {\r\n    var clone = new this.constructor()\r\n    clone.value = array_clone(this.value)\r\n    return clone\r\n  }\r\n})\n// Poly points array\r\nSVG.PointArray = function(array, fallback) {\r\n  SVG.Array.call(this, array, fallback || [[0,0]])\r\n}\r\n\r\n// Inherit from SVG.Array\r\nSVG.PointArray.prototype = new SVG.Array\r\nSVG.PointArray.prototype.constructor = SVG.PointArray\r\n\r\nSVG.extend(SVG.PointArray, {\r\n  // Convert array to string\r\n  toString: function() {\r\n    // convert to a poly point string\r\n    for (var i = 0, il = this.value.length, array = []; i < il; i++)\r\n      array.push(this.value[i].join(','))\r\n\r\n    return array.join(' ')\r\n  }\r\n  // Convert array to line object\r\n, toLine: function() {\r\n    return {\r\n      x1: this.value[0][0]\r\n    , y1: this.value[0][1]\r\n    , x2: this.value[1][0]\r\n    , y2: this.value[1][1]\r\n    }\r\n  }\r\n  // Get morphed array at given position\r\n, at: function(pos) {\r\n    // make sure a destination is defined\r\n    if (!this.destination) return this\r\n\r\n    // generate morphed point string\r\n    for (var i = 0, il = this.value.length, array = []; i < il; i++)\r\n      array.push([\r\n        this.value[i][0] + (this.destination[i][0] - this.value[i][0]) * pos\r\n      , this.value[i][1] + (this.destination[i][1] - this.value[i][1]) * pos\r\n      ])\r\n\r\n    return new SVG.PointArray(array)\r\n  }\r\n  // Parse point string and flat array\r\n, parse: function(array) {\r\n    var points = []\r\n\r\n    array = array.valueOf()\r\n\r\n    // if it is an array\r\n    if (Array.isArray(array)) {\r\n      // and it is not flat, there is no need to parse it\r\n      if(Array.isArray(array[0])) {\r\n        return array\r\n      }\r\n    } else { // Else, it is considered as a string\r\n      // parse points\r\n      array = array.trim().split(SVG.regex.delimiter).map(parseFloat)\r\n    }\r\n\r\n    // validate points - https://svgwg.org/svg2-draft/shapes.html#DataTypePoints\r\n    // Odd number of coordinates is an error. In such cases, drop the last odd coordinate.\r\n    if (array.length % 2 !== 0) array.pop()\r\n\r\n    // wrap points in two-tuples and parse points as floats\r\n    for(var i = 0, len = array.length; i < len; i = i + 2)\r\n      points.push([ array[i], array[i+1] ])\r\n\r\n    return points\r\n  }\r\n  // Move point string\r\n, move: function(x, y) {\r\n    var box = this.bbox()\r\n\r\n    // get relative offset\r\n    x -= box.x\r\n    y -= box.y\r\n\r\n    // move every point\r\n    if (!isNaN(x) && !isNaN(y))\r\n      for (var i = this.value.length - 1; i >= 0; i--)\r\n        this.value[i] = [this.value[i][0] + x, this.value[i][1] + y]\r\n\r\n    return this\r\n  }\r\n  // Resize poly string\r\n, size: function(width, height) {\r\n    var i, box = this.bbox()\r\n\r\n    // recalculate position of all points according to new size\r\n    for (i = this.value.length - 1; i >= 0; i--) {\r\n      if(box.width) this.value[i][0] = ((this.value[i][0] - box.x) * width)  / box.width  + box.x\r\n      if(box.height) this.value[i][1] = ((this.value[i][1] - box.y) * height) / box.height + box.y\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Get bounding box of points\r\n, bbox: function() {\r\n    SVG.parser.poly.setAttribute('points', this.toString())\r\n\r\n    return SVG.parser.poly.getBBox()\r\n  }\r\n})\r\n\nvar pathHandlers = {\r\n  M: function(c, p, p0) {\r\n    p.x = p0.x = c[0]\r\n    p.y = p0.y = c[1]\r\n\r\n    return ['M', p.x, p.y]\r\n  },\r\n  L: function(c, p) {\r\n    p.x = c[0]\r\n    p.y = c[1]\r\n    return ['L', c[0], c[1]]\r\n  },\r\n  H: function(c, p) {\r\n    p.x = c[0]\r\n    return ['H', c[0]]\r\n  },\r\n  V: function(c, p) {\r\n    p.y = c[0]\r\n    return ['V', c[0]]\r\n  },\r\n  C: function(c, p) {\r\n    p.x = c[4]\r\n    p.y = c[5]\r\n    return ['C', c[0], c[1], c[2], c[3], c[4], c[5]]\r\n  },\r\n  S: function(c, p) {\r\n    p.x = c[2]\r\n    p.y = c[3]\r\n    return ['S', c[0], c[1], c[2], c[3]]\r\n  },\r\n  Q: function(c, p) {\r\n    p.x = c[2]\r\n    p.y = c[3]\r\n    return ['Q', c[0], c[1], c[2], c[3]]\r\n  },\r\n  T: function(c, p) {\r\n    p.x = c[0]\r\n    p.y = c[1]\r\n    return ['T', c[0], c[1]]\r\n  },\r\n  Z: function(c, p, p0) {\r\n    p.x = p0.x\r\n    p.y = p0.y\r\n    return ['Z']\r\n  },\r\n  A: function(c, p) {\r\n    p.x = c[5]\r\n    p.y = c[6]\r\n    return ['A', c[0], c[1], c[2], c[3], c[4], c[5], c[6]]\r\n  }\r\n}\r\n\r\nvar mlhvqtcsa = 'mlhvqtcsaz'.split('')\r\n\r\nfor(var i = 0, il = mlhvqtcsa.length; i < il; ++i){\r\n  pathHandlers[mlhvqtcsa[i]] = (function(i){\r\n    return function(c, p, p0) {\r\n      if(i == 'H') c[0] = c[0] + p.x\r\n      else if(i == 'V') c[0] = c[0] + p.y\r\n      else if(i == 'A'){\r\n        c[5] = c[5] + p.x,\r\n        c[6] = c[6] + p.y\r\n      }\r\n      else\r\n        for(var j = 0, jl = c.length; j < jl; ++j) {\r\n          c[j] = c[j] + (j%2 ? p.y : p.x)\r\n        }\r\n\r\n      return pathHandlers[i](c, p, p0)\r\n    }\r\n  })(mlhvqtcsa[i].toUpperCase())\r\n}\r\n\r\n// Path points array\r\nSVG.PathArray = function(array, fallback) {\r\n  SVG.Array.call(this, array, fallback || [['M', 0, 0]])\r\n}\r\n\r\n// Inherit from SVG.Array\r\nSVG.PathArray.prototype = new SVG.Array\r\nSVG.PathArray.prototype.constructor = SVG.PathArray\r\n\r\nSVG.extend(SVG.PathArray, {\r\n  // Convert array to string\r\n  toString: function() {\r\n    return arrayToString(this.value)\r\n  }\r\n  // Move path string\r\n, move: function(x, y) {\r\n    // get bounding box of current situation\r\n    var box = this.bbox()\r\n\r\n    // get relative offset\r\n    x -= box.x\r\n    y -= box.y\r\n\r\n    if (!isNaN(x) && !isNaN(y)) {\r\n      // move every point\r\n      for (var l, i = this.value.length - 1; i >= 0; i--) {\r\n        l = this.value[i][0]\r\n\r\n        if (l == 'M' || l == 'L' || l == 'T')  {\r\n          this.value[i][1] += x\r\n          this.value[i][2] += y\r\n\r\n        } else if (l == 'H')  {\r\n          this.value[i][1] += x\r\n\r\n        } else if (l == 'V')  {\r\n          this.value[i][1] += y\r\n\r\n        } else if (l == 'C' || l == 'S' || l == 'Q')  {\r\n          this.value[i][1] += x\r\n          this.value[i][2] += y\r\n          this.value[i][3] += x\r\n          this.value[i][4] += y\r\n\r\n          if (l == 'C')  {\r\n            this.value[i][5] += x\r\n            this.value[i][6] += y\r\n          }\r\n\r\n        } else if (l == 'A')  {\r\n          this.value[i][6] += x\r\n          this.value[i][7] += y\r\n        }\r\n\r\n      }\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Resize path string\r\n, size: function(width, height) {\r\n    // get bounding box of current situation\r\n    var i, l, box = this.bbox()\r\n\r\n    // recalculate position of all points according to new size\r\n    for (i = this.value.length - 1; i >= 0; i--) {\r\n      l = this.value[i][0]\r\n\r\n      if (l == 'M' || l == 'L' || l == 'T')  {\r\n        this.value[i][1] = ((this.value[i][1] - box.x) * width)  / box.width  + box.x\r\n        this.value[i][2] = ((this.value[i][2] - box.y) * height) / box.height + box.y\r\n\r\n      } else if (l == 'H')  {\r\n        this.value[i][1] = ((this.value[i][1] - box.x) * width)  / box.width  + box.x\r\n\r\n      } else if (l == 'V')  {\r\n        this.value[i][1] = ((this.value[i][1] - box.y) * height) / box.height + box.y\r\n\r\n      } else if (l == 'C' || l == 'S' || l == 'Q')  {\r\n        this.value[i][1] = ((this.value[i][1] - box.x) * width)  / box.width  + box.x\r\n        this.value[i][2] = ((this.value[i][2] - box.y) * height) / box.height + box.y\r\n        this.value[i][3] = ((this.value[i][3] - box.x) * width)  / box.width  + box.x\r\n        this.value[i][4] = ((this.value[i][4] - box.y) * height) / box.height + box.y\r\n\r\n        if (l == 'C')  {\r\n          this.value[i][5] = ((this.value[i][5] - box.x) * width)  / box.width  + box.x\r\n          this.value[i][6] = ((this.value[i][6] - box.y) * height) / box.height + box.y\r\n        }\r\n\r\n      } else if (l == 'A')  {\r\n        // resize radii\r\n        this.value[i][1] = (this.value[i][1] * width)  / box.width\r\n        this.value[i][2] = (this.value[i][2] * height) / box.height\r\n\r\n        // move position values\r\n        this.value[i][6] = ((this.value[i][6] - box.x) * width)  / box.width  + box.x\r\n        this.value[i][7] = ((this.value[i][7] - box.y) * height) / box.height + box.y\r\n      }\r\n\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Test if the passed path array use the same path data commands as this path array\r\n, equalCommands: function(pathArray) {\r\n    var i, il, equalCommands\r\n\r\n    pathArray = new SVG.PathArray(pathArray)\r\n\r\n    equalCommands = this.value.length === pathArray.value.length\r\n    for(i = 0, il = this.value.length; equalCommands && i < il; i++) {\r\n      equalCommands = this.value[i][0] === pathArray.value[i][0]\r\n    }\r\n\r\n    return equalCommands\r\n  }\r\n  // Make path array morphable\r\n, morph: function(pathArray) {\r\n    pathArray = new SVG.PathArray(pathArray)\r\n\r\n    if(this.equalCommands(pathArray)) {\r\n      this.destination = pathArray\r\n    } else {\r\n      this.destination = null\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Get morphed path array at given position\r\n, at: function(pos) {\r\n    // make sure a destination is defined\r\n    if (!this.destination) return this\r\n\r\n    var sourceArray = this.value\r\n      , destinationArray = this.destination.value\r\n      , array = [], pathArray = new SVG.PathArray()\r\n      , i, il, j, jl\r\n\r\n    // Animate has specified in the SVG spec\r\n    // See: https://www.w3.org/TR/SVG11/paths.html#PathElement\r\n    for (i = 0, il = sourceArray.length; i < il; i++) {\r\n      array[i] = [sourceArray[i][0]]\r\n      for(j = 1, jl = sourceArray[i].length; j < jl; j++) {\r\n        array[i][j] = sourceArray[i][j] + (destinationArray[i][j] - sourceArray[i][j]) * pos\r\n      }\r\n      // For the two flags of the elliptical arc command, the SVG spec say:\r\n      // Flags and booleans are interpolated as fractions between zero and one, with any non-zero value considered to be a value of one/true\r\n      // Elliptical arc command as an array followed by corresponding indexes:\r\n      // ['A', rx, ry, x-axis-rotation, large-arc-flag, sweep-flag, x, y]\r\n      //   0    1   2        3                 4             5      6  7\r\n      if(array[i][0] === 'A') {\r\n        array[i][4] = +(array[i][4] != 0)\r\n        array[i][5] = +(array[i][5] != 0)\r\n      }\r\n    }\r\n\r\n    // Directly modify the value of a path array, this is done this way for performance\r\n    pathArray.value = array\r\n    return pathArray\r\n  }\r\n  // Absolutize and parse path to array\r\n, parse: function(array) {\r\n    // if it's already a patharray, no need to parse it\r\n    if (array instanceof SVG.PathArray) return array.valueOf()\r\n\r\n    // prepare for parsing\r\n    var i, x0, y0, s, seg, arr\r\n      , x = 0\r\n      , y = 0\r\n      , paramCnt = { 'M':2, 'L':2, 'H':1, 'V':1, 'C':6, 'S':4, 'Q':4, 'T':2, 'A':7, 'Z':0 }\r\n\r\n    if(typeof array == 'string'){\r\n\r\n      array = array\r\n        .replace(SVG.regex.numbersWithDots, pathRegReplace) // convert 45.123.123 to 45.123 .123\r\n        .replace(SVG.regex.pathLetters, ' $& ') // put some room between letters and numbers\r\n        .replace(SVG.regex.hyphen, '$1 -')      // add space before hyphen\r\n        .trim()                                 // trim\r\n        .split(SVG.regex.delimiter)   // split into array\r\n\r\n    }else{\r\n      array = array.reduce(function(prev, curr){\r\n        return [].concat.call(prev, curr)\r\n      }, [])\r\n    }\r\n\r\n    // array now is an array containing all parts of a path e.g. ['M', '0', '0', 'L', '30', '30' ...]\r\n    var arr = []\r\n      , p = new SVG.Point()\r\n      , p0 = new SVG.Point()\r\n      , index = 0\r\n      , len = array.length\r\n\r\n    do{\r\n      // Test if we have a path letter\r\n      if(SVG.regex.isPathLetter.test(array[index])){\r\n        s = array[index]\r\n        ++index\r\n      // If last letter was a move command and we got no new, it defaults to [L]ine\r\n      }else if(s == 'M'){\r\n        s = 'L'\r\n      }else if(s == 'm'){\r\n        s = 'l'\r\n      }\r\n\r\n      arr.push(pathHandlers[s].call(null,\r\n          array.slice(index, (index = index + paramCnt[s.toUpperCase()])).map(parseFloat),\r\n          p, p0\r\n        )\r\n      )\r\n\r\n    }while(len > index)\r\n\r\n    return arr\r\n\r\n  }\r\n  // Get bounding box of path\r\n, bbox: function() {\r\n    SVG.parser.path.setAttribute('d', this.toString())\r\n\r\n    return SVG.parser.path.getBBox()\r\n  }\r\n\r\n})\r\n\n// Module for unit convertions\r\nSVG.Number = SVG.invent({\r\n  // Initialize\r\n  create: function(value, unit) {\r\n    // initialize defaults\r\n    this.value = 0\r\n    this.unit  = unit || ''\r\n\r\n    // parse value\r\n    if (typeof value === 'number') {\r\n      // ensure a valid numeric value\r\n      this.value = isNaN(value) ? 0 : !isFinite(value) ? (value < 0 ? -3.4e+38 : +3.4e+38) : value\r\n\r\n    } else if (typeof value === 'string') {\r\n      unit = value.match(SVG.regex.numberAndUnit)\r\n\r\n      if (unit) {\r\n        // make value numeric\r\n        this.value = parseFloat(unit[1])\r\n\r\n        // normalize\r\n        if (unit[5] == '%')\r\n          this.value /= 100\r\n        else if (unit[5] == 's')\r\n          this.value *= 1000\r\n\r\n        // store unit\r\n        this.unit = unit[5]\r\n      }\r\n\r\n    } else {\r\n      if (value instanceof SVG.Number) {\r\n        this.value = value.valueOf()\r\n        this.unit  = value.unit\r\n      }\r\n    }\r\n\r\n  }\r\n  // Add methods\r\n, extend: {\r\n    // Stringalize\r\n    toString: function() {\r\n      return (\r\n        this.unit == '%' ?\r\n          ~~(this.value * 1e8) / 1e6:\r\n        this.unit == 's' ?\r\n          this.value / 1e3 :\r\n          this.value\r\n      ) + this.unit\r\n    }\r\n  , toJSON: function() {\r\n      return this.toString()\r\n    }\r\n  , // Convert to primitive\r\n    valueOf: function() {\r\n      return this.value\r\n    }\r\n    // Add number\r\n  , plus: function(number) {\r\n      number = new SVG.Number(number)\r\n      return new SVG.Number(this + number, this.unit || number.unit)\r\n    }\r\n    // Subtract number\r\n  , minus: function(number) {\r\n      number = new SVG.Number(number)\r\n      return new SVG.Number(this - number, this.unit || number.unit)\r\n    }\r\n    // Multiply number\r\n  , times: function(number) {\r\n      number = new SVG.Number(number)\r\n      return new SVG.Number(this * number, this.unit || number.unit)\r\n    }\r\n    // Divide number\r\n  , divide: function(number) {\r\n      number = new SVG.Number(number)\r\n      return new SVG.Number(this / number, this.unit || number.unit)\r\n    }\r\n    // Convert to different unit\r\n  , to: function(unit) {\r\n      var number = new SVG.Number(this)\r\n\r\n      if (typeof unit === 'string')\r\n        number.unit = unit\r\n\r\n      return number\r\n    }\r\n    // Make number morphable\r\n  , morph: function(number) {\r\n      this.destination = new SVG.Number(number)\r\n\r\n      if(number.relative) {\r\n        this.destination.value += this.value\r\n      }\r\n\r\n      return this\r\n    }\r\n    // Get morphed number at given position\r\n  , at: function(pos) {\r\n      // Make sure a destination is defined\r\n      if (!this.destination) return this\r\n\r\n      // Generate new morphed number\r\n      return new SVG.Number(this.destination)\r\n          .minus(this)\r\n          .times(pos)\r\n          .plus(this)\r\n    }\r\n\r\n  }\r\n})\r\n\n\r\nSVG.Element = SVG.invent({\r\n  // Initialize node\r\n  create: function(node) {\r\n    // make stroke value accessible dynamically\r\n    this._stroke = SVG.defaults.attrs.stroke\r\n    this._event = null\r\n\r\n    // initialize data object\r\n    this.dom = {}\r\n\r\n    // create circular reference\r\n    if (this.node = node) {\r\n      this.type = node.nodeName\r\n      this.node.instance = this\r\n\r\n      // store current attribute value\r\n      this._stroke = node.getAttribute('stroke') || this._stroke\r\n    }\r\n  }\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Move over x-axis\r\n    x: function(x) {\r\n      return this.attr('x', x)\r\n    }\r\n    // Move over y-axis\r\n  , y: function(y) {\r\n      return this.attr('y', y)\r\n    }\r\n    // Move by center over x-axis\r\n  , cx: function(x) {\r\n      return x == null ? this.x() + this.width() / 2 : this.x(x - this.width() / 2)\r\n    }\r\n    // Move by center over y-axis\r\n  , cy: function(y) {\r\n      return y == null ? this.y() + this.height() / 2 : this.y(y - this.height() / 2)\r\n    }\r\n    // Move element to given x and y values\r\n  , move: function(x, y) {\r\n      return this.x(x).y(y)\r\n    }\r\n    // Move element by its center\r\n  , center: function(x, y) {\r\n      return this.cx(x).cy(y)\r\n    }\r\n    // Set width of element\r\n  , width: function(width) {\r\n      return this.attr('width', width)\r\n    }\r\n    // Set height of element\r\n  , height: function(height) {\r\n      return this.attr('height', height)\r\n    }\r\n    // Set element size to given width and height\r\n  , size: function(width, height) {\r\n      var p = proportionalSize(this, width, height)\r\n\r\n      return this\r\n        .width(new SVG.Number(p.width))\r\n        .height(new SVG.Number(p.height))\r\n    }\r\n    // Clone element\r\n  , clone: function(parent, withData) {\r\n      // write dom data to the dom so the clone can pickup the data\r\n      this.writeDataToDom()\r\n\r\n      // clone element and assign new id\r\n      var clone = assignNewId(this.node.cloneNode(true))\r\n\r\n      // insert the clone in the given parent or after myself\r\n      if(parent) parent.add(clone)\r\n      else this.after(clone)\r\n\r\n      return clone\r\n    }\r\n    // Remove element\r\n  , remove: function() {\r\n      if (this.parent())\r\n        this.parent().removeElement(this)\r\n\r\n      return this\r\n    }\r\n    // Replace element\r\n  , replace: function(element) {\r\n      this.after(element).remove()\r\n\r\n      return element\r\n    }\r\n    // Add element to given container and return self\r\n  , addTo: function(parent) {\r\n      return parent.put(this)\r\n    }\r\n    // Add element to given container and return container\r\n  , putIn: function(parent) {\r\n      return parent.add(this)\r\n    }\r\n    // Get / set id\r\n  , id: function(id) {\r\n      return this.attr('id', id)\r\n    }\r\n    // Checks whether the given point inside the bounding box of the element\r\n  , inside: function(x, y) {\r\n      var box = this.bbox()\r\n\r\n      return x > box.x\r\n          && y > box.y\r\n          && x < box.x + box.width\r\n          && y < box.y + box.height\r\n    }\r\n    // Show element\r\n  , show: function() {\r\n      return this.style('display', '')\r\n    }\r\n    // Hide element\r\n  , hide: function() {\r\n      return this.style('display', 'none')\r\n    }\r\n    // Is element visible?\r\n  , visible: function() {\r\n      return this.style('display') != 'none'\r\n    }\r\n    // Return id on string conversion\r\n  , toString: function() {\r\n      return this.attr('id')\r\n    }\r\n    // Return array of classes on the node\r\n  , classes: function() {\r\n      var attr = this.attr('class')\r\n\r\n      return attr == null ? [] : attr.trim().split(SVG.regex.delimiter)\r\n    }\r\n    // Return true if class exists on the node, false otherwise\r\n  , hasClass: function(name) {\r\n      return this.classes().indexOf(name) != -1\r\n    }\r\n    // Add class to the node\r\n  , addClass: function(name) {\r\n      if (!this.hasClass(name)) {\r\n        var array = this.classes()\r\n        array.push(name)\r\n        this.attr('class', array.join(' '))\r\n      }\r\n\r\n      return this\r\n    }\r\n    // Remove class from the node\r\n  , removeClass: function(name) {\r\n      if (this.hasClass(name)) {\r\n        this.attr('class', this.classes().filter(function(c) {\r\n          return c != name\r\n        }).join(' '))\r\n      }\r\n\r\n      return this\r\n    }\r\n    // Toggle the presence of a class on the node\r\n  , toggleClass: function(name) {\r\n      return this.hasClass(name) ? this.removeClass(name) : this.addClass(name)\r\n    }\r\n    // Get referenced element form attribute value\r\n  , reference: function(attr) {\r\n      return SVG.get(this.attr(attr))\r\n    }\r\n    // Returns the parent element instance\r\n  , parent: function(type) {\r\n      var parent = this\r\n\r\n      // check for parent\r\n      if(!parent.node.parentNode) return null\r\n\r\n      // get parent element\r\n      parent = SVG.adopt(parent.node.parentNode)\r\n\r\n      if(!type) return parent\r\n\r\n      // loop trough ancestors if type is given\r\n      while(parent && parent.node instanceof window.SVGElement){\r\n        if(typeof type === 'string' ? parent.matches(type) : parent instanceof type) return parent\r\n        if(parent.node.parentNode.nodeName == '#document') return null // #720\r\n        parent = SVG.adopt(parent.node.parentNode)\r\n      }\r\n    }\r\n    // Get parent document\r\n  , doc: function() {\r\n      return this instanceof SVG.Doc ? this : this.parent(SVG.Doc)\r\n    }\r\n    // return array of all ancestors of given type up to the root svg\r\n  , parents: function(type) {\r\n      var parents = [], parent = this\r\n\r\n      do{\r\n        parent = parent.parent(type)\r\n        if(!parent || !parent.node) break\r\n\r\n        parents.push(parent)\r\n      } while(parent.parent)\r\n\r\n      return parents\r\n    }\r\n    // matches the element vs a css selector\r\n  , matches: function(selector){\r\n      return matches(this.node, selector)\r\n    }\r\n    // Returns the svg node to call native svg methods on it\r\n  , native: function() {\r\n      return this.node\r\n    }\r\n    // Import raw svg\r\n  , svg: function(svg) {\r\n      // create temporary holder\r\n      var well = document.createElement('svg')\r\n\r\n      // act as a setter if svg is given\r\n      if (svg && this instanceof SVG.Parent) {\r\n        // dump raw svg\r\n        well.innerHTML = '<svg>' + svg.replace(/\\n/, '').replace(/<(\\w+)([^<]+?)\\/>/g, '<$1$2></$1>') + '</svg>'\r\n\r\n        // transplant nodes\r\n        for (var i = 0, il = well.firstChild.childNodes.length; i < il; i++)\r\n          this.node.appendChild(well.firstChild.firstChild)\r\n\r\n      // otherwise act as a getter\r\n      } else {\r\n        // create a wrapping svg element in case of partial content\r\n        well.appendChild(svg = document.createElement('svg'))\r\n\r\n        // write svgjs data to the dom\r\n        this.writeDataToDom()\r\n\r\n        // insert a copy of this node\r\n        svg.appendChild(this.node.cloneNode(true))\r\n\r\n        // return target element\r\n        return well.innerHTML.replace(/^<svg>/, '').replace(/<\\/svg>$/, '')\r\n      }\r\n\r\n      return this\r\n    }\r\n  // write svgjs data to the dom\r\n  , writeDataToDom: function() {\r\n\r\n      // dump variables recursively\r\n      if(this.each || this.lines){\r\n        var fn = this.each ? this : this.lines();\r\n        fn.each(function(){\r\n          this.writeDataToDom()\r\n        })\r\n      }\r\n\r\n      // remove previously set data\r\n      this.node.removeAttribute('svgjs:data')\r\n\r\n      if(Object.keys(this.dom).length)\r\n        this.node.setAttribute('svgjs:data', JSON.stringify(this.dom)) // see #428\r\n\r\n      return this\r\n    }\r\n  // set given data to the elements data property\r\n  , setData: function(o){\r\n      this.dom = o\r\n      return this\r\n    }\r\n  , is: function(obj){\r\n      return is(this, obj)\r\n    }\r\n  }\r\n})\r\n\nSVG.easing = {\r\n  '-': function(pos){return pos}\r\n, '<>':function(pos){return -Math.cos(pos * Math.PI) / 2 + 0.5}\r\n, '>': function(pos){return  Math.sin(pos * Math.PI / 2)}\r\n, '<': function(pos){return -Math.cos(pos * Math.PI / 2) + 1}\r\n}\r\n\r\nSVG.morph = function(pos){\r\n  return function(from, to) {\r\n    return new SVG.MorphObj(from, to).at(pos)\r\n  }\r\n}\r\n\r\nSVG.Situation = SVG.invent({\r\n\r\n  create: function(o){\r\n    this.init = false\r\n    this.reversed = false\r\n    this.reversing = false\r\n\r\n    this.duration = new SVG.Number(o.duration).valueOf()\r\n    this.delay = new SVG.Number(o.delay).valueOf()\r\n\r\n    this.start = +new Date() + this.delay\r\n    this.finish = this.start + this.duration\r\n    this.ease = o.ease\r\n\r\n    // this.loop is incremented from 0 to this.loops\r\n    // it is also incremented when in an infinite loop (when this.loops is true)\r\n    this.loop = 0\r\n    this.loops = false\r\n\r\n    this.animations = {\r\n      // functionToCall: [list of morphable objects]\r\n      // e.g. move: [SVG.Number, SVG.Number]\r\n    }\r\n\r\n    this.attrs = {\r\n      // holds all attributes which are not represented from a function svg.js provides\r\n      // e.g. someAttr: SVG.Number\r\n    }\r\n\r\n    this.styles = {\r\n      // holds all styles which should be animated\r\n      // e.g. fill-color: SVG.Color\r\n    }\r\n\r\n    this.transforms = [\r\n      // holds all transformations as transformation objects\r\n      // e.g. [SVG.Rotate, SVG.Translate, SVG.Matrix]\r\n    ]\r\n\r\n    this.once = {\r\n      // functions to fire at a specific position\r\n      // e.g. \"0.5\": function foo(){}\r\n    }\r\n\r\n  }\r\n\r\n})\r\n\r\n\r\nSVG.FX = SVG.invent({\r\n\r\n  create: function(element) {\r\n    this._target = element\r\n    this.situations = []\r\n    this.active = false\r\n    this.situation = null\r\n    this.paused = false\r\n    this.lastPos = 0\r\n    this.pos = 0\r\n    // The absolute position of an animation is its position in the context of its complete duration (including delay and loops)\r\n    // When performing a delay, absPos is below 0 and when performing a loop, its value is above 1\r\n    this.absPos = 0\r\n    this._speed = 1\r\n  }\r\n\r\n, extend: {\r\n\r\n    /**\r\n     * sets or returns the target of this animation\r\n     * @param o object || number In case of Object it holds all parameters. In case of number its the duration of the animation\r\n     * @param ease function || string Function which should be used for easing or easing keyword\r\n     * @param delay Number indicating the delay before the animation starts\r\n     * @return target || this\r\n     */\r\n    animate: function(o, ease, delay){\r\n\r\n      if(typeof o == 'object'){\r\n        ease = o.ease\r\n        delay = o.delay\r\n        o = o.duration\r\n      }\r\n\r\n      var situation = new SVG.Situation({\r\n        duration: o || 1000,\r\n        delay: delay || 0,\r\n        ease: SVG.easing[ease || '-'] || ease\r\n      })\r\n\r\n      this.queue(situation)\r\n\r\n      return this\r\n    }\r\n\r\n    /**\r\n     * sets a delay before the next element of the queue is called\r\n     * @param delay Duration of delay in milliseconds\r\n     * @return this.target()\r\n     */\r\n  , delay: function(delay){\r\n      // The delay is performed by an empty situation with its duration\r\n      // attribute set to the duration of the delay\r\n      var situation = new SVG.Situation({\r\n        duration: delay,\r\n        delay: 0,\r\n        ease: SVG.easing['-']\r\n      })\r\n\r\n      return this.queue(situation)\r\n    }\r\n\r\n    /**\r\n     * sets or returns the target of this animation\r\n     * @param null || target SVG.Element which should be set as new target\r\n     * @return target || this\r\n     */\r\n  , target: function(target){\r\n      if(target && target instanceof SVG.Element){\r\n        this._target = target\r\n        return this\r\n      }\r\n\r\n      return this._target\r\n    }\r\n\r\n    // returns the absolute position at a given time\r\n  , timeToAbsPos: function(timestamp){\r\n      return (timestamp - this.situation.start) / (this.situation.duration/this._speed)\r\n    }\r\n\r\n    // returns the timestamp from a given absolute positon\r\n  , absPosToTime: function(absPos){\r\n      return this.situation.duration/this._speed * absPos + this.situation.start\r\n    }\r\n\r\n    // starts the animationloop\r\n  , startAnimFrame: function(){\r\n      this.stopAnimFrame()\r\n      this.animationFrame = window.requestAnimationFrame(function(){ this.step() }.bind(this))\r\n    }\r\n\r\n    // cancels the animationframe\r\n  , stopAnimFrame: function(){\r\n      window.cancelAnimationFrame(this.animationFrame)\r\n    }\r\n\r\n    // kicks off the animation - only does something when the queue is currently not active and at least one situation is set\r\n  , start: function(){\r\n      // dont start if already started\r\n      if(!this.active && this.situation){\r\n        this.active = true\r\n        this.startCurrent()\r\n      }\r\n\r\n      return this\r\n    }\r\n\r\n    // start the current situation\r\n  , startCurrent: function(){\r\n      this.situation.start = +new Date + this.situation.delay/this._speed\r\n      this.situation.finish = this.situation.start + this.situation.duration/this._speed\r\n      return this.initAnimations().step()\r\n    }\r\n\r\n    /**\r\n     * adds a function / Situation to the animation queue\r\n     * @param fn function / situation to add\r\n     * @return this\r\n     */\r\n  , queue: function(fn){\r\n      if(typeof fn == 'function' || fn instanceof SVG.Situation)\r\n        this.situations.push(fn)\r\n\r\n      if(!this.situation) this.situation = this.situations.shift()\r\n\r\n      return this\r\n    }\r\n\r\n    /**\r\n     * pulls next element from the queue and execute it\r\n     * @return this\r\n     */\r\n  , dequeue: function(){\r\n      // stop current animation\r\n      this.stop()\r\n\r\n      // get next animation from queue\r\n      this.situation = this.situations.shift()\r\n\r\n      if(this.situation){\r\n        if(this.situation instanceof SVG.Situation) {\r\n          this.start()\r\n        } else {\r\n          // If it is not a SVG.Situation, then it is a function, we execute it\r\n          this.situation.call(this)\r\n        }\r\n      }\r\n\r\n      return this\r\n    }\r\n\r\n    // updates all animations to the current state of the element\r\n    // this is important when one property could be changed from another property\r\n  , initAnimations: function() {\r\n      var i, j, source\r\n      var s = this.situation\r\n\r\n      if(s.init) return this\r\n\r\n      for(i in s.animations){\r\n        source = this.target()[i]()\r\n\r\n        if(!Array.isArray(source)) {\r\n          source = [source]\r\n        }\r\n\r\n        if(!Array.isArray(s.animations[i])) {\r\n          s.animations[i] = [s.animations[i]]\r\n        }\r\n\r\n        //if(s.animations[i].length > source.length) {\r\n        //  source.concat = source.concat(s.animations[i].slice(source.length, s.animations[i].length))\r\n        //}\r\n\r\n        for(j = source.length; j--;) {\r\n          // The condition is because some methods return a normal number instead\r\n          // of a SVG.Number\r\n          if(s.animations[i][j] instanceof SVG.Number)\r\n            source[j] = new SVG.Number(source[j])\r\n\r\n          s.animations[i][j] = source[j].morph(s.animations[i][j])\r\n        }\r\n      }\r\n\r\n      for(i in s.attrs){\r\n        s.attrs[i] = new SVG.MorphObj(this.target().attr(i), s.attrs[i])\r\n      }\r\n\r\n      for(i in s.styles){\r\n        s.styles[i] = new SVG.MorphObj(this.target().style(i), s.styles[i])\r\n      }\r\n\r\n      s.initialTransformation = this.target().matrixify()\r\n\r\n      s.init = true\r\n      return this\r\n    }\r\n  , clearQueue: function(){\r\n      this.situations = []\r\n      return this\r\n    }\r\n  , clearCurrent: function(){\r\n      this.situation = null\r\n      return this\r\n    }\r\n    /** stops the animation immediately\r\n     * @param jumpToEnd A Boolean indicating whether to complete the current animation immediately.\r\n     * @param clearQueue A Boolean indicating whether to remove queued animation as well.\r\n     * @return this\r\n     */\r\n  , stop: function(jumpToEnd, clearQueue){\r\n      var active = this.active\r\n      this.active = false\r\n\r\n      if(clearQueue){\r\n        this.clearQueue()\r\n      }\r\n\r\n      if(jumpToEnd && this.situation){\r\n        // initialize the situation if it was not\r\n        !active && this.startCurrent()\r\n        this.atEnd()\r\n      }\r\n\r\n      this.stopAnimFrame()\r\n\r\n      return this.clearCurrent()\r\n    }\r\n\r\n    /** resets the element to the state where the current element has started\r\n     * @return this\r\n     */\r\n  , reset: function(){\r\n      if(this.situation){\r\n        var temp = this.situation\r\n        this.stop()\r\n        this.situation = temp\r\n        this.atStart()\r\n      }\r\n      return this\r\n    }\r\n\r\n    // Stop the currently-running animation, remove all queued animations, and complete all animations for the element.\r\n  , finish: function(){\r\n\r\n      this.stop(true, false)\r\n\r\n      while(this.dequeue().situation && this.stop(true, false));\r\n\r\n      this.clearQueue().clearCurrent()\r\n\r\n      return this\r\n    }\r\n\r\n    // set the internal animation pointer at the start position, before any loops, and updates the visualisation\r\n  , atStart: function() {\r\n      return this.at(0, true)\r\n    }\r\n\r\n    // set the internal animation pointer at the end position, after all the loops, and updates the visualisation\r\n  , atEnd: function() {\r\n      if (this.situation.loops === true) {\r\n        // If in a infinite loop, we end the current iteration\r\n        this.situation.loops = this.situation.loop + 1\r\n      }\r\n\r\n      if(typeof this.situation.loops == 'number') {\r\n        // If performing a finite number of loops, we go after all the loops\r\n        return this.at(this.situation.loops, true)\r\n      } else {\r\n        // If no loops, we just go at the end\r\n        return this.at(1, true)\r\n      }\r\n    }\r\n\r\n    // set the internal animation pointer to the specified position and updates the visualisation\r\n    // if isAbsPos is true, pos is treated as an absolute position\r\n  , at: function(pos, isAbsPos){\r\n      var durDivSpd = this.situation.duration/this._speed\r\n\r\n      this.absPos = pos\r\n      // If pos is not an absolute position, we convert it into one\r\n      if (!isAbsPos) {\r\n        if (this.situation.reversed) this.absPos = 1 - this.absPos\r\n        this.absPos += this.situation.loop\r\n      }\r\n\r\n      this.situation.start = +new Date - this.absPos * durDivSpd\r\n      this.situation.finish = this.situation.start + durDivSpd\r\n\r\n      return this.step(true)\r\n    }\r\n\r\n    /**\r\n     * sets or returns the speed of the animations\r\n     * @param speed null || Number The new speed of the animations\r\n     * @return Number || this\r\n     */\r\n  , speed: function(speed){\r\n      if (speed === 0) return this.pause()\r\n\r\n      if (speed) {\r\n        this._speed = speed\r\n        // We use an absolute position here so that speed can affect the delay before the animation\r\n        return this.at(this.absPos, true)\r\n      } else return this._speed\r\n    }\r\n\r\n    // Make loopable\r\n  , loop: function(times, reverse) {\r\n      var c = this.last()\r\n\r\n      // store total loops\r\n      c.loops = (times != null) ? times : true\r\n      c.loop = 0\r\n\r\n      if(reverse) c.reversing = true\r\n      return this\r\n    }\r\n\r\n    // pauses the animation\r\n  , pause: function(){\r\n      this.paused = true\r\n      this.stopAnimFrame()\r\n\r\n      return this\r\n    }\r\n\r\n    // unpause the animation\r\n  , play: function(){\r\n      if(!this.paused) return this\r\n      this.paused = false\r\n      // We use an absolute position here so that the delay before the animation can be paused\r\n      return this.at(this.absPos, true)\r\n    }\r\n\r\n    /**\r\n     * toggle or set the direction of the animation\r\n     * true sets direction to backwards while false sets it to forwards\r\n     * @param reversed Boolean indicating whether to reverse the animation or not (default: toggle the reverse status)\r\n     * @return this\r\n     */\r\n  , reverse: function(reversed){\r\n      var c = this.last()\r\n\r\n      if(typeof reversed == 'undefined') c.reversed = !c.reversed\r\n      else c.reversed = reversed\r\n\r\n      return this\r\n    }\r\n\r\n\r\n    /**\r\n     * returns a float from 0-1 indicating the progress of the current animation\r\n     * @param eased Boolean indicating whether the returned position should be eased or not\r\n     * @return number\r\n     */\r\n  , progress: function(easeIt){\r\n      return easeIt ? this.situation.ease(this.pos) : this.pos\r\n    }\r\n\r\n    /**\r\n     * adds a callback function which is called when the current animation is finished\r\n     * @param fn Function which should be executed as callback\r\n     * @return number\r\n     */\r\n  , after: function(fn){\r\n      var c = this.last()\r\n        , wrapper = function wrapper(e){\r\n            if(e.detail.situation == c){\r\n              fn.call(this, c)\r\n              this.off('finished.fx', wrapper) // prevent memory leak\r\n            }\r\n          }\r\n\r\n      this.target().on('finished.fx', wrapper)\r\n\r\n      return this._callStart()\r\n    }\r\n\r\n    // adds a callback which is called whenever one animation step is performed\r\n  , during: function(fn){\r\n      var c = this.last()\r\n        , wrapper = function(e){\r\n            if(e.detail.situation == c){\r\n              fn.call(this, e.detail.pos, SVG.morph(e.detail.pos), e.detail.eased, c)\r\n            }\r\n          }\r\n\r\n      // see above\r\n      this.target().off('during.fx', wrapper).on('during.fx', wrapper)\r\n\r\n      this.after(function(){\r\n        this.off('during.fx', wrapper)\r\n      })\r\n\r\n      return this._callStart()\r\n    }\r\n\r\n    // calls after ALL animations in the queue are finished\r\n  , afterAll: function(fn){\r\n      var wrapper = function wrapper(e){\r\n            fn.call(this)\r\n            this.off('allfinished.fx', wrapper)\r\n          }\r\n\r\n      // see above\r\n      this.target().off('allfinished.fx', wrapper).on('allfinished.fx', wrapper)\r\n\r\n      return this._callStart()\r\n    }\r\n\r\n    // calls on every animation step for all animations\r\n  , duringAll: function(fn){\r\n      var wrapper = function(e){\r\n            fn.call(this, e.detail.pos, SVG.morph(e.detail.pos), e.detail.eased, e.detail.situation)\r\n          }\r\n\r\n      this.target().off('during.fx', wrapper).on('during.fx', wrapper)\r\n\r\n      this.afterAll(function(){\r\n        this.off('during.fx', wrapper)\r\n      })\r\n\r\n      return this._callStart()\r\n    }\r\n\r\n  , last: function(){\r\n      return this.situations.length ? this.situations[this.situations.length-1] : this.situation\r\n    }\r\n\r\n    // adds one property to the animations\r\n  , add: function(method, args, type){\r\n      this.last()[type || 'animations'][method] = args\r\n      return this._callStart()\r\n    }\r\n\r\n    /** perform one step of the animation\r\n     *  @param ignoreTime Boolean indicating whether to ignore time and use position directly or recalculate position based on time\r\n     *  @return this\r\n     */\r\n  , step: function(ignoreTime){\r\n\r\n      // convert current time to an absolute position\r\n      if(!ignoreTime) this.absPos = this.timeToAbsPos(+new Date)\r\n\r\n      // This part convert an absolute position to a position\r\n      if(this.situation.loops !== false) {\r\n        var absPos, absPosInt, lastLoop\r\n\r\n        // If the absolute position is below 0, we just treat it as if it was 0\r\n        absPos = Math.max(this.absPos, 0)\r\n        absPosInt = Math.floor(absPos)\r\n\r\n        if(this.situation.loops === true || absPosInt < this.situation.loops) {\r\n          this.pos = absPos - absPosInt\r\n          lastLoop = this.situation.loop\r\n          this.situation.loop = absPosInt\r\n        } else {\r\n          this.absPos = this.situation.loops\r\n          this.pos = 1\r\n          // The -1 here is because we don't want to toggle reversed when all the loops have been completed\r\n          lastLoop = this.situation.loop - 1\r\n          this.situation.loop = this.situation.loops\r\n        }\r\n\r\n        if(this.situation.reversing) {\r\n          // Toggle reversed if an odd number of loops as occured since the last call of step\r\n          this.situation.reversed = this.situation.reversed != Boolean((this.situation.loop - lastLoop) % 2)\r\n        }\r\n\r\n      } else {\r\n        // If there are no loop, the absolute position must not be above 1\r\n        this.absPos = Math.min(this.absPos, 1)\r\n        this.pos = this.absPos\r\n      }\r\n\r\n      // while the absolute position can be below 0, the position must not be below 0\r\n      if(this.pos < 0) this.pos = 0\r\n\r\n      if(this.situation.reversed) this.pos = 1 - this.pos\r\n\r\n\r\n      // apply easing\r\n      var eased = this.situation.ease(this.pos)\r\n\r\n      // call once-callbacks\r\n      for(var i in this.situation.once){\r\n        if(i > this.lastPos && i <= eased){\r\n          this.situation.once[i].call(this.target(), this.pos, eased)\r\n          delete this.situation.once[i]\r\n        }\r\n      }\r\n\r\n      // fire during callback with position, eased position and current situation as parameter\r\n      if(this.active) this.target().fire('during', {pos: this.pos, eased: eased, fx: this, situation: this.situation})\r\n\r\n      // the user may call stop or finish in the during callback\r\n      // so make sure that we still have a valid situation\r\n      if(!this.situation){\r\n        return this\r\n      }\r\n\r\n      // apply the actual animation to every property\r\n      this.eachAt()\r\n\r\n      // do final code when situation is finished\r\n      if((this.pos == 1 && !this.situation.reversed) || (this.situation.reversed && this.pos == 0)){\r\n\r\n        // stop animation callback\r\n        this.stopAnimFrame()\r\n\r\n        // fire finished callback with current situation as parameter\r\n        this.target().fire('finished', {fx:this, situation: this.situation})\r\n\r\n        if(!this.situations.length){\r\n          this.target().fire('allfinished')\r\n\r\n          // Recheck the length since the user may call animate in the afterAll callback\r\n          if(!this.situations.length){\r\n            this.target().off('.fx') // there shouldnt be any binding left, but to make sure...\r\n            this.active = false\r\n          }\r\n        }\r\n\r\n        // start next animation\r\n        if(this.active) this.dequeue()\r\n        else this.clearCurrent()\r\n\r\n      }else if(!this.paused && this.active){\r\n        // we continue animating when we are not at the end\r\n        this.startAnimFrame()\r\n      }\r\n\r\n      // save last eased position for once callback triggering\r\n      this.lastPos = eased\r\n      return this\r\n\r\n    }\r\n\r\n    // calculates the step for every property and calls block with it\r\n  , eachAt: function(){\r\n      var i, len, at, self = this, target = this.target(), s = this.situation\r\n\r\n      // apply animations which can be called trough a method\r\n      for(i in s.animations){\r\n\r\n        at = [].concat(s.animations[i]).map(function(el){\r\n          return typeof el !== 'string' && el.at ? el.at(s.ease(self.pos), self.pos) : el\r\n        })\r\n\r\n        target[i].apply(target, at)\r\n\r\n      }\r\n\r\n      // apply animation which has to be applied with attr()\r\n      for(i in s.attrs){\r\n\r\n        at = [i].concat(s.attrs[i]).map(function(el){\r\n          return typeof el !== 'string' && el.at ? el.at(s.ease(self.pos), self.pos) : el\r\n        })\r\n\r\n        target.attr.apply(target, at)\r\n\r\n      }\r\n\r\n      // apply animation which has to be applied with style()\r\n      for(i in s.styles){\r\n\r\n        at = [i].concat(s.styles[i]).map(function(el){\r\n          return typeof el !== 'string' && el.at ? el.at(s.ease(self.pos), self.pos) : el\r\n        })\r\n\r\n        target.style.apply(target, at)\r\n\r\n      }\r\n\r\n      // animate initialTransformation which has to be chained\r\n      if(s.transforms.length){\r\n\r\n        // get initial initialTransformation\r\n        at = s.initialTransformation\r\n        for(i = 0, len = s.transforms.length; i < len; i++){\r\n\r\n          // get next transformation in chain\r\n          var a = s.transforms[i]\r\n\r\n          // multiply matrix directly\r\n          if(a instanceof SVG.Matrix){\r\n\r\n            if(a.relative){\r\n              at = at.multiply(new SVG.Matrix().morph(a).at(s.ease(this.pos)))\r\n            }else{\r\n              at = at.morph(a).at(s.ease(this.pos))\r\n            }\r\n            continue\r\n          }\r\n\r\n          // when transformation is absolute we have to reset the needed transformation first\r\n          if(!a.relative)\r\n            a.undo(at.extract())\r\n\r\n          // and reapply it after\r\n          at = at.multiply(a.at(s.ease(this.pos)))\r\n\r\n        }\r\n\r\n        // set new matrix on element\r\n        target.matrix(at)\r\n      }\r\n\r\n      return this\r\n\r\n    }\r\n\r\n\r\n    // adds an once-callback which is called at a specific position and never again\r\n  , once: function(pos, fn, isEased){\r\n      var c = this.last()\r\n      if(!isEased) pos = c.ease(pos)\r\n\r\n      c.once[pos] = fn\r\n\r\n      return this\r\n    }\r\n\r\n  , _callStart: function() {\r\n      setTimeout(function(){this.start()}.bind(this), 0)\r\n      return this\r\n    }\r\n\r\n  }\r\n\r\n, parent: SVG.Element\r\n\r\n  // Add method to parent elements\r\n, construct: {\r\n    // Get fx module or create a new one, then animate with given duration and ease\r\n    animate: function(o, ease, delay) {\r\n      return (this.fx || (this.fx = new SVG.FX(this))).animate(o, ease, delay)\r\n    }\r\n  , delay: function(delay){\r\n      return (this.fx || (this.fx = new SVG.FX(this))).delay(delay)\r\n    }\r\n  , stop: function(jumpToEnd, clearQueue) {\r\n      if (this.fx)\r\n        this.fx.stop(jumpToEnd, clearQueue)\r\n\r\n      return this\r\n    }\r\n  , finish: function() {\r\n      if (this.fx)\r\n        this.fx.finish()\r\n\r\n      return this\r\n    }\r\n    // Pause current animation\r\n  , pause: function() {\r\n      if (this.fx)\r\n        this.fx.pause()\r\n\r\n      return this\r\n    }\r\n    // Play paused current animation\r\n  , play: function() {\r\n      if (this.fx)\r\n        this.fx.play()\r\n\r\n      return this\r\n    }\r\n    // Set/Get the speed of the animations\r\n  , speed: function(speed) {\r\n      if (this.fx)\r\n        if (speed == null)\r\n          return this.fx.speed()\r\n        else\r\n          this.fx.speed(speed)\r\n\r\n      return this\r\n    }\r\n  }\r\n\r\n})\r\n\r\n// MorphObj is used whenever no morphable object is given\r\nSVG.MorphObj = SVG.invent({\r\n\r\n  create: function(from, to){\r\n    // prepare color for morphing\r\n    if(SVG.Color.isColor(to)) return new SVG.Color(from).morph(to)\r\n    // prepare value list for morphing\r\n    if(SVG.regex.delimiter.test(from)) return new SVG.Array(from).morph(to)\r\n    // prepare number for morphing\r\n    if(SVG.regex.numberAndUnit.test(to)) return new SVG.Number(from).morph(to)\r\n\r\n    // prepare for plain morphing\r\n    this.value = from\r\n    this.destination = to\r\n  }\r\n\r\n, extend: {\r\n    at: function(pos, real){\r\n      return real < 1 ? this.value : this.destination\r\n    },\r\n\r\n    valueOf: function(){\r\n      return this.value\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.extend(SVG.FX, {\r\n  // Add animatable attributes\r\n  attr: function(a, v, relative) {\r\n    // apply attributes individually\r\n    if (typeof a == 'object') {\r\n      for (var key in a)\r\n        this.attr(key, a[key])\r\n\r\n    } else {\r\n      this.add(a, v, 'attrs')\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Add animatable styles\r\n, style: function(s, v) {\r\n    if (typeof s == 'object')\r\n      for (var key in s)\r\n        this.style(key, s[key])\r\n\r\n    else\r\n      this.add(s, v, 'styles')\r\n\r\n    return this\r\n  }\r\n  // Animatable x-axis\r\n, x: function(x, relative) {\r\n    if(this.target() instanceof SVG.G){\r\n      this.transform({x:x}, relative)\r\n      return this\r\n    }\r\n\r\n    var num = new SVG.Number(x)\r\n    num.relative = relative\r\n    return this.add('x', num)\r\n  }\r\n  // Animatable y-axis\r\n, y: function(y, relative) {\r\n    if(this.target() instanceof SVG.G){\r\n      this.transform({y:y}, relative)\r\n      return this\r\n    }\r\n\r\n    var num = new SVG.Number(y)\r\n    num.relative = relative\r\n    return this.add('y', num)\r\n  }\r\n  // Animatable center x-axis\r\n, cx: function(x) {\r\n    return this.add('cx', new SVG.Number(x))\r\n  }\r\n  // Animatable center y-axis\r\n, cy: function(y) {\r\n    return this.add('cy', new SVG.Number(y))\r\n  }\r\n  // Add animatable move\r\n, move: function(x, y) {\r\n    return this.x(x).y(y)\r\n  }\r\n  // Add animatable center\r\n, center: function(x, y) {\r\n    return this.cx(x).cy(y)\r\n  }\r\n  // Add animatable size\r\n, size: function(width, height) {\r\n    if (this.target() instanceof SVG.Text) {\r\n      // animate font size for Text elements\r\n      this.attr('font-size', width)\r\n\r\n    } else {\r\n      // animate bbox based size for all other elements\r\n      var box\r\n\r\n      if(!width || !height){\r\n        box = this.target().bbox()\r\n      }\r\n\r\n      if(!width){\r\n        width = box.width / box.height  * height\r\n      }\r\n\r\n      if(!height){\r\n        height = box.height / box.width  * width\r\n      }\r\n\r\n      this.add('width' , new SVG.Number(width))\r\n          .add('height', new SVG.Number(height))\r\n\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Add animatable width\r\n, width: function(width) {\r\n    return this.add('width', new SVG.Number(width))\r\n  }\r\n  // Add animatable height\r\n, height: function(height) {\r\n    return this.add('height', new SVG.Number(height))\r\n  }\r\n  // Add animatable plot\r\n, plot: function(a, b, c, d) {\r\n    // Lines can be plotted with 4 arguments\r\n    if(arguments.length == 4) {\r\n      return this.plot([a, b, c, d])\r\n    }\r\n\r\n    return this.add('plot', new (this.target().morphArray)(a))\r\n  }\r\n  // Add leading method\r\n, leading: function(value) {\r\n    return this.target().leading ?\r\n      this.add('leading', new SVG.Number(value)) :\r\n      this\r\n  }\r\n  // Add animatable viewbox\r\n, viewbox: function(x, y, width, height) {\r\n    if (this.target() instanceof SVG.Container) {\r\n      this.add('viewbox', new SVG.ViewBox(x, y, width, height))\r\n    }\r\n\r\n    return this\r\n  }\r\n, update: function(o) {\r\n    if (this.target() instanceof SVG.Stop) {\r\n      if (typeof o == 'number' || o instanceof SVG.Number) {\r\n        return this.update({\r\n          offset:  arguments[0]\r\n        , color:   arguments[1]\r\n        , opacity: arguments[2]\r\n        })\r\n      }\r\n\r\n      if (o.opacity != null) this.attr('stop-opacity', o.opacity)\r\n      if (o.color   != null) this.attr('stop-color', o.color)\r\n      if (o.offset  != null) this.attr('offset', o.offset)\r\n    }\r\n\r\n    return this\r\n  }\r\n})\r\n\nSVG.Box = SVG.invent({\r\n  create: function(x, y, width, height) {\r\n    if (typeof x == 'object' && !(x instanceof SVG.Element)) {\r\n      // chromes getBoundingClientRect has no x and y property\r\n      return SVG.Box.call(this, x.left != null ? x.left : x.x , x.top != null ? x.top : x.y, x.width, x.height)\r\n    } else if (arguments.length == 4) {\r\n      this.x = x\r\n      this.y = y\r\n      this.width = width\r\n      this.height = height\r\n    }\r\n\r\n    // add center, right, bottom...\r\n    fullBox(this)\r\n  }\r\n, extend: {\r\n    // Merge rect box with another, return a new instance\r\n    merge: function(box) {\r\n      var b = new this.constructor()\r\n\r\n      // merge boxes\r\n      b.x      = Math.min(this.x, box.x)\r\n      b.y      = Math.min(this.y, box.y)\r\n      b.width  = Math.max(this.x + this.width,  box.x + box.width)  - b.x\r\n      b.height = Math.max(this.y + this.height, box.y + box.height) - b.y\r\n\r\n      return fullBox(b)\r\n    }\r\n\r\n  , transform: function(m) {\r\n      var xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, p, bbox\r\n\r\n      var pts = [\r\n        new SVG.Point(this.x, this.y),\r\n        new SVG.Point(this.x2, this.y),\r\n        new SVG.Point(this.x, this.y2),\r\n        new SVG.Point(this.x2, this.y2)\r\n      ]\r\n\r\n      pts.forEach(function(p) {\r\n        p = p.transform(m)\r\n        xMin = Math.min(xMin,p.x)\r\n        xMax = Math.max(xMax,p.x)\r\n        yMin = Math.min(yMin,p.y)\r\n        yMax = Math.max(yMax,p.y)\r\n      })\r\n\r\n      bbox = new this.constructor()\r\n      bbox.x = xMin\r\n      bbox.width = xMax-xMin\r\n      bbox.y = yMin\r\n      bbox.height = yMax-yMin\r\n\r\n      fullBox(bbox)\r\n\r\n      return bbox\r\n    }\r\n  }\r\n})\r\n\r\nSVG.BBox = SVG.invent({\r\n  // Initialize\r\n  create: function(element) {\r\n    SVG.Box.apply(this, [].slice.call(arguments))\r\n\r\n    // get values if element is given\r\n    if (element instanceof SVG.Element) {\r\n      var box\r\n\r\n      // yes this is ugly, but Firefox can be a pain when it comes to elements that are not yet rendered\r\n      try {\r\n\r\n        if (!document.documentElement.contains){\r\n          // This is IE - it does not support contains() for top-level SVGs\r\n          var topParent = element.node\r\n          while (topParent.parentNode){\r\n            topParent = topParent.parentNode\r\n          }\r\n          if (topParent != document) throw new Exception('Element not in the dom')\r\n        } else {\r\n          // the element is NOT in the dom, throw error\r\n          if(!document.documentElement.contains(element.node)) throw new Exception('Element not in the dom')\r\n        }\r\n\r\n        // find native bbox\r\n        box = element.node.getBBox()\r\n      } catch(e) {\r\n        if(element instanceof SVG.Shape){\r\n          var clone = element.clone(SVG.parser.draw.instance).show()\r\n          box = clone.node.getBBox()\r\n          clone.remove()\r\n        }else{\r\n          box = {\r\n            x:      element.node.clientLeft\r\n          , y:      element.node.clientTop\r\n          , width:  element.node.clientWidth\r\n          , height: element.node.clientHeight\r\n          }\r\n        }\r\n      }\r\n\r\n      SVG.Box.call(this, box)\r\n    }\r\n\r\n  }\r\n\r\n  // Define ancestor\r\n, inherit: SVG.Box\r\n\r\n  // Define Parent\r\n, parent: SVG.Element\r\n\r\n  // Constructor\r\n, construct: {\r\n    // Get bounding box\r\n    bbox: function() {\r\n      return new SVG.BBox(this)\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.BBox.prototype.constructor = SVG.BBox\r\n\r\n\r\nSVG.extend(SVG.Element, {\r\n  tbox: function(){\r\n    console.warn('Use of TBox is deprecated and mapped to RBox. Use .rbox() instead.')\r\n    return this.rbox(this.doc())\r\n  }\r\n})\r\n\r\nSVG.RBox = SVG.invent({\r\n  // Initialize\r\n  create: function(element) {\r\n    SVG.Box.apply(this, [].slice.call(arguments))\r\n\r\n    if (element instanceof SVG.Element) {\r\n      SVG.Box.call(this, element.node.getBoundingClientRect())\r\n    }\r\n  }\r\n\r\n, inherit: SVG.Box\r\n\r\n  // define Parent\r\n, parent: SVG.Element\r\n\r\n, extend: {\r\n    addOffset: function() {\r\n      // offset by window scroll position, because getBoundingClientRect changes when window is scrolled\r\n      this.x += window.pageXOffset\r\n      this.y += window.pageYOffset\r\n      return this\r\n    }\r\n  }\r\n\r\n  // Constructor\r\n, construct: {\r\n    // Get rect box\r\n    rbox: function(el) {\r\n      if (el) return new SVG.RBox(this).transform(el.screenCTM().inverse())\r\n      return new SVG.RBox(this).addOffset()\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.RBox.prototype.constructor = SVG.RBox\r\n\nSVG.Matrix = SVG.invent({\r\n  // Initialize\r\n  create: function(source) {\r\n    var i, base = arrayToMatrix([1, 0, 0, 1, 0, 0])\r\n\r\n    // ensure source as object\r\n    source = source instanceof SVG.Element ?\r\n      source.matrixify() :\r\n    typeof source === 'string' ?\r\n      arrayToMatrix(source.split(SVG.regex.delimiter).map(parseFloat)) :\r\n    arguments.length == 6 ?\r\n      arrayToMatrix([].slice.call(arguments)) :\r\n    Array.isArray(source) ?\r\n      arrayToMatrix(source) :\r\n    typeof source === 'object' ?\r\n      source : base\r\n\r\n    // merge source\r\n    for (i = abcdef.length - 1; i >= 0; --i)\r\n      this[abcdef[i]] = source[abcdef[i]] != null ?\r\n        source[abcdef[i]] : base[abcdef[i]]\r\n  }\r\n\r\n  // Add methods\r\n, extend: {\r\n    // Extract individual transformations\r\n    extract: function() {\r\n      // find delta transform points\r\n      var px    = deltaTransformPoint(this, 0, 1)\r\n        , py    = deltaTransformPoint(this, 1, 0)\r\n        , skewX = 180 / Math.PI * Math.atan2(px.y, px.x) - 90\r\n\r\n      return {\r\n        // translation\r\n        x:        this.e\r\n      , y:        this.f\r\n      , transformedX:(this.e * Math.cos(skewX * Math.PI / 180) + this.f * Math.sin(skewX * Math.PI / 180)) / Math.sqrt(this.a * this.a + this.b * this.b)\r\n      , transformedY:(this.f * Math.cos(skewX * Math.PI / 180) + this.e * Math.sin(-skewX * Math.PI / 180)) / Math.sqrt(this.c * this.c + this.d * this.d)\r\n        // skew\r\n      , skewX:    -skewX\r\n      , skewY:    180 / Math.PI * Math.atan2(py.y, py.x)\r\n        // scale\r\n      , scaleX:   Math.sqrt(this.a * this.a + this.b * this.b)\r\n      , scaleY:   Math.sqrt(this.c * this.c + this.d * this.d)\r\n        // rotation\r\n      , rotation: skewX\r\n      , a: this.a\r\n      , b: this.b\r\n      , c: this.c\r\n      , d: this.d\r\n      , e: this.e\r\n      , f: this.f\r\n      , matrix: new SVG.Matrix(this)\r\n      }\r\n    }\r\n    // Clone matrix\r\n  , clone: function() {\r\n      return new SVG.Matrix(this)\r\n    }\r\n    // Morph one matrix into another\r\n  , morph: function(matrix) {\r\n      // store new destination\r\n      this.destination = new SVG.Matrix(matrix)\r\n\r\n      return this\r\n    }\r\n    // Get morphed matrix at a given position\r\n  , at: function(pos) {\r\n      // make sure a destination is defined\r\n      if (!this.destination) return this\r\n\r\n      // calculate morphed matrix at a given position\r\n      var matrix = new SVG.Matrix({\r\n        a: this.a + (this.destination.a - this.a) * pos\r\n      , b: this.b + (this.destination.b - this.b) * pos\r\n      , c: this.c + (this.destination.c - this.c) * pos\r\n      , d: this.d + (this.destination.d - this.d) * pos\r\n      , e: this.e + (this.destination.e - this.e) * pos\r\n      , f: this.f + (this.destination.f - this.f) * pos\r\n      })\r\n\r\n      return matrix\r\n    }\r\n    // Multiplies by given matrix\r\n  , multiply: function(matrix) {\r\n      return new SVG.Matrix(this.native().multiply(parseMatrix(matrix).native()))\r\n    }\r\n    // Inverses matrix\r\n  , inverse: function() {\r\n      return new SVG.Matrix(this.native().inverse())\r\n    }\r\n    // Translate matrix\r\n  , translate: function(x, y) {\r\n      return new SVG.Matrix(this.native().translate(x || 0, y || 0))\r\n    }\r\n    // Scale matrix\r\n  , scale: function(x, y, cx, cy) {\r\n      // support uniformal scale\r\n      if (arguments.length == 1) {\r\n        y = x\r\n      } else if (arguments.length == 3) {\r\n        cy = cx\r\n        cx = y\r\n        y = x\r\n      }\r\n\r\n      return this.around(cx, cy, new SVG.Matrix(x, 0, 0, y, 0, 0))\r\n    }\r\n    // Rotate matrix\r\n  , rotate: function(r, cx, cy) {\r\n      // convert degrees to radians\r\n      r = SVG.utils.radians(r)\r\n\r\n      return this.around(cx, cy, new SVG.Matrix(Math.cos(r), Math.sin(r), -Math.sin(r), Math.cos(r), 0, 0))\r\n    }\r\n    // Flip matrix on x or y, at a given offset\r\n  , flip: function(a, o) {\r\n      return a == 'x' ?\r\n          this.scale(-1, 1, o, 0) :\r\n        a == 'y' ?\r\n          this.scale(1, -1, 0, o) :\r\n          this.scale(-1, -1, a, o != null ? o : a)\r\n    }\r\n    // Skew\r\n  , skew: function(x, y, cx, cy) {\r\n      // support uniformal skew\r\n      if (arguments.length == 1) {\r\n        y = x\r\n      } else if (arguments.length == 3) {\r\n        cy = cx\r\n        cx = y\r\n        y = x\r\n      }\r\n\r\n      // convert degrees to radians\r\n      x = SVG.utils.radians(x)\r\n      y = SVG.utils.radians(y)\r\n\r\n      return this.around(cx, cy, new SVG.Matrix(1, Math.tan(y), Math.tan(x), 1, 0, 0))\r\n    }\r\n    // SkewX\r\n  , skewX: function(x, cx, cy) {\r\n      return this.skew(x, 0, cx, cy)\r\n    }\r\n    // SkewY\r\n  , skewY: function(y, cx, cy) {\r\n      return this.skew(0, y, cx, cy)\r\n    }\r\n    // Transform around a center point\r\n  , around: function(cx, cy, matrix) {\r\n      return this\r\n        .multiply(new SVG.Matrix(1, 0, 0, 1, cx || 0, cy || 0))\r\n        .multiply(matrix)\r\n        .multiply(new SVG.Matrix(1, 0, 0, 1, -cx || 0, -cy || 0))\r\n    }\r\n    // Convert to native SVGMatrix\r\n  , native: function() {\r\n      // create new matrix\r\n      var matrix = SVG.parser.native.createSVGMatrix()\r\n\r\n      // update with current values\r\n      for (var i = abcdef.length - 1; i >= 0; i--)\r\n        matrix[abcdef[i]] = this[abcdef[i]]\r\n\r\n      return matrix\r\n    }\r\n    // Convert matrix to string\r\n  , toString: function() {\r\n      return 'matrix(' + this.a + ',' + this.b + ',' + this.c + ',' + this.d + ',' + this.e + ',' + this.f + ')'\r\n    }\r\n  }\r\n\r\n  // Define parent\r\n, parent: SVG.Element\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Get current matrix\r\n    ctm: function() {\r\n      return new SVG.Matrix(this.node.getCTM())\r\n    },\r\n    // Get current screen matrix\r\n    screenCTM: function() {\r\n      /* https://bugzilla.mozilla.org/show_bug.cgi?id=1344537\r\n         This is needed because FF does not return the transformation matrix\r\n         for the inner coordinate system when getScreenCTM() is called on nested svgs.\r\n         However all other Browsers do that */\r\n      if(this instanceof SVG.Nested) {\r\n        var rect = this.rect(1,1)\r\n        var m = rect.node.getScreenCTM()\r\n        rect.remove()\r\n        return new SVG.Matrix(m)\r\n      }\r\n      return new SVG.Matrix(this.node.getScreenCTM())\r\n    }\r\n\r\n  }\r\n\r\n})\r\n\nSVG.Point = SVG.invent({\r\n  // Initialize\r\n  create: function(x,y) {\r\n    var i, source, base = {x:0, y:0}\r\n\r\n    // ensure source as object\r\n    source = Array.isArray(x) ?\r\n      {x:x[0], y:x[1]} :\r\n    typeof x === 'object' ?\r\n      {x:x.x, y:x.y} :\r\n    x != null ?\r\n      {x:x, y:(y != null ? y : x)} : base // If y has no value, then x is used has its value\r\n\r\n    // merge source\r\n    this.x = source.x\r\n    this.y = source.y\r\n  }\r\n\r\n  // Add methods\r\n, extend: {\r\n    // Clone point\r\n    clone: function() {\r\n      return new SVG.Point(this)\r\n    }\r\n    // Morph one point into another\r\n  , morph: function(x, y) {\r\n      // store new destination\r\n      this.destination = new SVG.Point(x, y)\r\n\r\n      return this\r\n    }\r\n    // Get morphed point at a given position\r\n  , at: function(pos) {\r\n      // make sure a destination is defined\r\n      if (!this.destination) return this\r\n\r\n      // calculate morphed matrix at a given position\r\n      var point = new SVG.Point({\r\n        x: this.x + (this.destination.x - this.x) * pos\r\n      , y: this.y + (this.destination.y - this.y) * pos\r\n      })\r\n\r\n      return point\r\n    }\r\n    // Convert to native SVGPoint\r\n  , native: function() {\r\n      // create new point\r\n      var point = SVG.parser.native.createSVGPoint()\r\n\r\n      // update with current values\r\n      point.x = this.x\r\n      point.y = this.y\r\n\r\n      return point\r\n    }\r\n    // transform point with matrix\r\n  , transform: function(matrix) {\r\n      return new SVG.Point(this.native().matrixTransform(matrix.native()))\r\n    }\r\n\r\n  }\r\n\r\n})\r\n\r\nSVG.extend(SVG.Element, {\r\n\r\n  // Get point\r\n  point: function(x, y) {\r\n    return new SVG.Point(x,y).transform(this.screenCTM().inverse());\r\n  }\r\n\r\n})\r\n\nSVG.extend(SVG.Element, {\r\n  // Set svg element attribute\r\n  attr: function(a, v, n) {\r\n    // act as full getter\r\n    if (a == null) {\r\n      // get an object of attributes\r\n      a = {}\r\n      v = this.node.attributes\r\n      for (n = v.length - 1; n >= 0; n--)\r\n        a[v[n].nodeName] = SVG.regex.isNumber.test(v[n].nodeValue) ? parseFloat(v[n].nodeValue) : v[n].nodeValue\r\n\r\n      return a\r\n\r\n    } else if (typeof a == 'object') {\r\n      // apply every attribute individually if an object is passed\r\n      for (v in a) this.attr(v, a[v])\r\n\r\n    } else if (v === null) {\r\n        // remove value\r\n        this.node.removeAttribute(a)\r\n\r\n    } else if (v == null) {\r\n      // act as a getter if the first and only argument is not an object\r\n      v = this.node.getAttribute(a)\r\n      return v == null ?\r\n        SVG.defaults.attrs[a] :\r\n      SVG.regex.isNumber.test(v) ?\r\n        parseFloat(v) : v\r\n\r\n    } else {\r\n      // BUG FIX: some browsers will render a stroke if a color is given even though stroke width is 0\r\n      if (a == 'stroke-width')\r\n        this.attr('stroke', parseFloat(v) > 0 ? this._stroke : null)\r\n      else if (a == 'stroke')\r\n        this._stroke = v\r\n\r\n      // convert image fill and stroke to patterns\r\n      if (a == 'fill' || a == 'stroke') {\r\n        if (SVG.regex.isImage.test(v))\r\n          v = this.doc().defs().image(v, 0, 0)\r\n\r\n        if (v instanceof SVG.Image)\r\n          v = this.doc().defs().pattern(0, 0, function() {\r\n            this.add(v)\r\n          })\r\n      }\r\n\r\n      // ensure correct numeric values (also accepts NaN and Infinity)\r\n      if (typeof v === 'number')\r\n        v = new SVG.Number(v)\r\n\r\n      // ensure full hex color\r\n      else if (SVG.Color.isColor(v))\r\n        v = new SVG.Color(v)\r\n\r\n      // parse array values\r\n      else if (Array.isArray(v))\r\n        v = new SVG.Array(v)\r\n\r\n      // if the passed attribute is leading...\r\n      if (a == 'leading') {\r\n        // ... call the leading method instead\r\n        if (this.leading)\r\n          this.leading(v)\r\n      } else {\r\n        // set given attribute on node\r\n        typeof n === 'string' ?\r\n          this.node.setAttributeNS(n, a, v.toString()) :\r\n          this.node.setAttribute(a, v.toString())\r\n      }\r\n\r\n      // rebuild if required\r\n      if (this.rebuild && (a == 'font-size' || a == 'x'))\r\n        this.rebuild(a, v)\r\n    }\r\n\r\n    return this\r\n  }\r\n})\nSVG.extend(SVG.Element, {\r\n  // Add transformations\r\n  transform: function(o, relative) {\r\n    // get target in case of the fx module, otherwise reference this\r\n    var target = this\r\n      , matrix, bbox\r\n\r\n    // act as a getter\r\n    if (typeof o !== 'object') {\r\n      // get current matrix\r\n      matrix = new SVG.Matrix(target).extract()\r\n\r\n      return typeof o === 'string' ? matrix[o] : matrix\r\n    }\r\n\r\n    // get current matrix\r\n    matrix = new SVG.Matrix(target)\r\n\r\n    // ensure relative flag\r\n    relative = !!relative || !!o.relative\r\n\r\n    // act on matrix\r\n    if (o.a != null) {\r\n      matrix = relative ?\r\n        // relative\r\n        matrix.multiply(new SVG.Matrix(o)) :\r\n        // absolute\r\n        new SVG.Matrix(o)\r\n\r\n    // act on rotation\r\n    } else if (o.rotation != null) {\r\n      // ensure centre point\r\n      ensureCentre(o, target)\r\n\r\n      // apply transformation\r\n      matrix = relative ?\r\n        // relative\r\n        matrix.rotate(o.rotation, o.cx, o.cy) :\r\n        // absolute\r\n        matrix.rotate(o.rotation - matrix.extract().rotation, o.cx, o.cy)\r\n\r\n    // act on scale\r\n    } else if (o.scale != null || o.scaleX != null || o.scaleY != null) {\r\n      // ensure centre point\r\n      ensureCentre(o, target)\r\n\r\n      // ensure scale values on both axes\r\n      o.scaleX = o.scale != null ? o.scale : o.scaleX != null ? o.scaleX : 1\r\n      o.scaleY = o.scale != null ? o.scale : o.scaleY != null ? o.scaleY : 1\r\n\r\n      if (!relative) {\r\n        // absolute; multiply inversed values\r\n        var e = matrix.extract()\r\n        o.scaleX = o.scaleX * 1 / e.scaleX\r\n        o.scaleY = o.scaleY * 1 / e.scaleY\r\n      }\r\n\r\n      matrix = matrix.scale(o.scaleX, o.scaleY, o.cx, o.cy)\r\n\r\n    // act on skew\r\n    } else if (o.skew != null || o.skewX != null || o.skewY != null) {\r\n      // ensure centre point\r\n      ensureCentre(o, target)\r\n\r\n      // ensure skew values on both axes\r\n      o.skewX = o.skew != null ? o.skew : o.skewX != null ? o.skewX : 0\r\n      o.skewY = o.skew != null ? o.skew : o.skewY != null ? o.skewY : 0\r\n\r\n      if (!relative) {\r\n        // absolute; reset skew values\r\n        var e = matrix.extract()\r\n        matrix = matrix.multiply(new SVG.Matrix().skew(e.skewX, e.skewY, o.cx, o.cy).inverse())\r\n      }\r\n\r\n      matrix = matrix.skew(o.skewX, o.skewY, o.cx, o.cy)\r\n\r\n    // act on flip\r\n    } else if (o.flip) {\r\n      if(o.flip == 'x' || o.flip == 'y') {\r\n        o.offset = o.offset == null ? target.bbox()['c' + o.flip] : o.offset\r\n      } else {\r\n        if(o.offset == null) {\r\n          bbox = target.bbox()\r\n          o.flip = bbox.cx\r\n          o.offset = bbox.cy\r\n        } else {\r\n          o.flip = o.offset\r\n        }\r\n      }\r\n\r\n      matrix = new SVG.Matrix().flip(o.flip, o.offset)\r\n\r\n    // act on translate\r\n    } else if (o.x != null || o.y != null) {\r\n      if (relative) {\r\n        // relative\r\n        matrix = matrix.translate(o.x, o.y)\r\n      } else {\r\n        // absolute\r\n        if (o.x != null) matrix.e = o.x\r\n        if (o.y != null) matrix.f = o.y\r\n      }\r\n    }\r\n\r\n    return this.attr('transform', matrix)\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.FX, {\r\n  transform: function(o, relative) {\r\n    // get target in case of the fx module, otherwise reference this\r\n    var target = this.target()\r\n      , matrix, bbox\r\n\r\n    // act as a getter\r\n    if (typeof o !== 'object') {\r\n      // get current matrix\r\n      matrix = new SVG.Matrix(target).extract()\r\n\r\n      return typeof o === 'string' ? matrix[o] : matrix\r\n    }\r\n\r\n    // ensure relative flag\r\n    relative = !!relative || !!o.relative\r\n\r\n    // act on matrix\r\n    if (o.a != null) {\r\n      matrix = new SVG.Matrix(o)\r\n\r\n    // act on rotation\r\n    } else if (o.rotation != null) {\r\n      // ensure centre point\r\n      ensureCentre(o, target)\r\n\r\n      // apply transformation\r\n      matrix = new SVG.Rotate(o.rotation, o.cx, o.cy)\r\n\r\n    // act on scale\r\n    } else if (o.scale != null || o.scaleX != null || o.scaleY != null) {\r\n      // ensure centre point\r\n      ensureCentre(o, target)\r\n\r\n      // ensure scale values on both axes\r\n      o.scaleX = o.scale != null ? o.scale : o.scaleX != null ? o.scaleX : 1\r\n      o.scaleY = o.scale != null ? o.scale : o.scaleY != null ? o.scaleY : 1\r\n\r\n      matrix = new SVG.Scale(o.scaleX, o.scaleY, o.cx, o.cy)\r\n\r\n    // act on skew\r\n    } else if (o.skewX != null || o.skewY != null) {\r\n      // ensure centre point\r\n      ensureCentre(o, target)\r\n\r\n      // ensure skew values on both axes\r\n      o.skewX = o.skewX != null ? o.skewX : 0\r\n      o.skewY = o.skewY != null ? o.skewY : 0\r\n\r\n      matrix = new SVG.Skew(o.skewX, o.skewY, o.cx, o.cy)\r\n\r\n    // act on flip\r\n    } else if (o.flip) {\r\n      if(o.flip == 'x' || o.flip == 'y') {\r\n        o.offset = o.offset == null ? target.bbox()['c' + o.flip] : o.offset\r\n      } else {\r\n        if(o.offset == null) {\r\n          bbox = target.bbox()\r\n          o.flip = bbox.cx\r\n          o.offset = bbox.cy\r\n        } else {\r\n          o.flip = o.offset\r\n        }\r\n      }\r\n\r\n      matrix = new SVG.Matrix().flip(o.flip, o.offset)\r\n\r\n    // act on translate\r\n    } else if (o.x != null || o.y != null) {\r\n      matrix = new SVG.Translate(o.x, o.y)\r\n    }\r\n\r\n    if(!matrix) return this\r\n\r\n    matrix.relative = relative\r\n\r\n    this.last().transforms.push(matrix)\r\n\r\n    return this._callStart()\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Element, {\r\n  // Reset all transformations\r\n  untransform: function() {\r\n    return this.attr('transform', null)\r\n  },\r\n  // merge the whole transformation chain into one matrix and returns it\r\n  matrixify: function() {\r\n\r\n    var matrix = (this.attr('transform') || '')\r\n      // split transformations\r\n      .split(SVG.regex.transforms).slice(0,-1).map(function(str){\r\n        // generate key => value pairs\r\n        var kv = str.trim().split('(')\r\n        return [kv[0], kv[1].split(SVG.regex.delimiter).map(function(str){ return parseFloat(str) })]\r\n      })\r\n      // merge every transformation into one matrix\r\n      .reduce(function(matrix, transform){\r\n\r\n        if(transform[0] == 'matrix') return matrix.multiply(arrayToMatrix(transform[1]))\r\n        return matrix[transform[0]].apply(matrix, transform[1])\r\n\r\n      }, new SVG.Matrix())\r\n\r\n    return matrix\r\n  },\r\n  // add an element to another parent without changing the visual representation on the screen\r\n  toParent: function(parent) {\r\n    if(this == parent) return this\r\n    var ctm = this.screenCTM()\r\n    var pCtm = parent.screenCTM().inverse()\r\n\r\n    this.addTo(parent).untransform().transform(pCtm.multiply(ctm))\r\n\r\n    return this\r\n  },\r\n  // same as above with parent equals root-svg\r\n  toDoc: function() {\r\n    return this.toParent(this.doc())\r\n  }\r\n\r\n})\r\n\r\nSVG.Transformation = SVG.invent({\r\n\r\n  create: function(source, inversed){\r\n\r\n    if(arguments.length > 1 && typeof inversed != 'boolean'){\r\n      return this.constructor.call(this, [].slice.call(arguments))\r\n    }\r\n\r\n    if(Array.isArray(source)){\r\n      for(var i = 0, len = this.arguments.length; i < len; ++i){\r\n        this[this.arguments[i]] = source[i]\r\n      }\r\n    } else if(typeof source == 'object'){\r\n      for(var i = 0, len = this.arguments.length; i < len; ++i){\r\n        this[this.arguments[i]] = source[this.arguments[i]]\r\n      }\r\n    }\r\n\r\n    this.inversed = false\r\n\r\n    if(inversed === true){\r\n      this.inversed = true\r\n    }\r\n\r\n  }\r\n\r\n, extend: {\r\n\r\n    arguments: []\r\n  , method: ''\r\n\r\n  , at: function(pos){\r\n\r\n      var params = []\r\n\r\n      for(var i = 0, len = this.arguments.length; i < len; ++i){\r\n        params.push(this[this.arguments[i]])\r\n      }\r\n\r\n      var m = this._undo || new SVG.Matrix()\r\n\r\n      m = new SVG.Matrix().morph(SVG.Matrix.prototype[this.method].apply(m, params)).at(pos)\r\n\r\n      return this.inversed ? m.inverse() : m\r\n\r\n    }\r\n\r\n  , undo: function(o){\r\n      for(var i = 0, len = this.arguments.length; i < len; ++i){\r\n        o[this.arguments[i]] = typeof this[this.arguments[i]] == 'undefined' ? 0 : o[this.arguments[i]]\r\n      }\r\n\r\n      // The method SVG.Matrix.extract which was used before calling this\r\n      // method to obtain a value for the parameter o doesn't return a cx and\r\n      // a cy so we use the ones that were provided to this object at its creation\r\n      o.cx = this.cx\r\n      o.cy = this.cy\r\n\r\n      this._undo = new SVG[capitalize(this.method)](o, true).at(1)\r\n\r\n      return this\r\n    }\r\n\r\n  }\r\n\r\n})\r\n\r\nSVG.Translate = SVG.invent({\r\n\r\n  parent: SVG.Matrix\r\n, inherit: SVG.Transformation\r\n\r\n, create: function(source, inversed){\r\n    this.constructor.apply(this, [].slice.call(arguments))\r\n  }\r\n\r\n, extend: {\r\n    arguments: ['transformedX', 'transformedY']\r\n  , method: 'translate'\r\n  }\r\n\r\n})\r\n\r\nSVG.Rotate = SVG.invent({\r\n\r\n  parent: SVG.Matrix\r\n, inherit: SVG.Transformation\r\n\r\n, create: function(source, inversed){\r\n    this.constructor.apply(this, [].slice.call(arguments))\r\n  }\r\n\r\n, extend: {\r\n    arguments: ['rotation', 'cx', 'cy']\r\n  , method: 'rotate'\r\n  , at: function(pos){\r\n      var m = new SVG.Matrix().rotate(new SVG.Number().morph(this.rotation - (this._undo ? this._undo.rotation : 0)).at(pos), this.cx, this.cy)\r\n      return this.inversed ? m.inverse() : m\r\n    }\r\n  , undo: function(o){\r\n      this._undo = o\r\n      return this\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.Scale = SVG.invent({\r\n\r\n  parent: SVG.Matrix\r\n, inherit: SVG.Transformation\r\n\r\n, create: function(source, inversed){\r\n    this.constructor.apply(this, [].slice.call(arguments))\r\n  }\r\n\r\n, extend: {\r\n    arguments: ['scaleX', 'scaleY', 'cx', 'cy']\r\n  , method: 'scale'\r\n  }\r\n\r\n})\r\n\r\nSVG.Skew = SVG.invent({\r\n\r\n  parent: SVG.Matrix\r\n, inherit: SVG.Transformation\r\n\r\n, create: function(source, inversed){\r\n    this.constructor.apply(this, [].slice.call(arguments))\r\n  }\r\n\r\n, extend: {\r\n    arguments: ['skewX', 'skewY', 'cx', 'cy']\r\n  , method: 'skew'\r\n  }\r\n\r\n})\r\n\nSVG.extend(SVG.Element, {\r\n  // Dynamic style generator\r\n  style: function(s, v) {\r\n    if (arguments.length == 0) {\r\n      // get full style\r\n      return this.node.style.cssText || ''\r\n\r\n    } else if (arguments.length < 2) {\r\n      // apply every style individually if an object is passed\r\n      if (typeof s == 'object') {\r\n        for (v in s) this.style(v, s[v])\r\n\r\n      } else if (SVG.regex.isCss.test(s)) {\r\n        // parse css string\r\n        s = s.split(/\\s*;\\s*/)\r\n          // filter out suffix ; and stuff like ;;\r\n          .filter(function(e) { return !!e })\r\n          .map(function(e){ return e.split(/\\s*:\\s*/) })\r\n\r\n        // apply every definition individually\r\n        while (v = s.pop()) {\r\n          this.style(v[0], v[1])\r\n        }\r\n      } else {\r\n        // act as a getter if the first and only argument is not an object\r\n        return this.node.style[camelCase(s)]\r\n      }\r\n\r\n    } else {\r\n      this.node.style[camelCase(s)] = v === null || SVG.regex.isBlank.test(v) ? '' : v\r\n    }\r\n\r\n    return this\r\n  }\r\n})\nSVG.Parent = SVG.invent({\r\n  // Initialize node\r\n  create: function(element) {\r\n    this.constructor.call(this, element)\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Element\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Returns all child elements\r\n    children: function() {\r\n      return SVG.utils.map(SVG.utils.filterSVGElements(this.node.childNodes), function(node) {\r\n        return SVG.adopt(node)\r\n      })\r\n    }\r\n    // Add given element at a position\r\n  , add: function(element, i) {\r\n      if (i == null)\r\n        this.node.appendChild(element.node)\r\n      else if (element.node != this.node.childNodes[i])\r\n        this.node.insertBefore(element.node, this.node.childNodes[i])\r\n\r\n      return this\r\n    }\r\n    // Basically does the same as `add()` but returns the added element instead\r\n  , put: function(element, i) {\r\n      this.add(element, i)\r\n      return element\r\n    }\r\n    // Checks if the given element is a child\r\n  , has: function(element) {\r\n      return this.index(element) >= 0\r\n    }\r\n    // Gets index of given element\r\n  , index: function(element) {\r\n      return [].slice.call(this.node.childNodes).indexOf(element.node)\r\n    }\r\n    // Get a element at the given index\r\n  , get: function(i) {\r\n      return SVG.adopt(this.node.childNodes[i])\r\n    }\r\n    // Get first child\r\n  , first: function() {\r\n      return this.get(0)\r\n    }\r\n    // Get the last child\r\n  , last: function() {\r\n      return this.get(this.node.childNodes.length - 1)\r\n    }\r\n    // Iterates over all children and invokes a given block\r\n  , each: function(block, deep) {\r\n      var i, il\r\n        , children = this.children()\r\n\r\n      for (i = 0, il = children.length; i < il; i++) {\r\n        if (children[i] instanceof SVG.Element)\r\n          block.apply(children[i], [i, children])\r\n\r\n        if (deep && (children[i] instanceof SVG.Container))\r\n          children[i].each(block, deep)\r\n      }\r\n\r\n      return this\r\n    }\r\n    // Remove a given child\r\n  , removeElement: function(element) {\r\n      this.node.removeChild(element.node)\r\n\r\n      return this\r\n    }\r\n    // Remove all elements in this container\r\n  , clear: function() {\r\n      // remove children\r\n      while(this.node.hasChildNodes())\r\n        this.node.removeChild(this.node.lastChild)\r\n\r\n      // remove defs reference\r\n      delete this._defs\r\n\r\n      return this\r\n    }\r\n  , // Get defs\r\n    defs: function() {\r\n      return this.doc().defs()\r\n    }\r\n  }\r\n\r\n})\r\n\nSVG.extend(SVG.Parent, {\r\n\r\n  ungroup: function(parent, depth) {\r\n    if(depth === 0 || this instanceof SVG.Defs || this.node == SVG.parser.draw) return this\r\n\r\n    parent = parent || (this instanceof SVG.Doc ? this : this.parent(SVG.Parent))\r\n    depth = depth || Infinity\r\n\r\n    this.each(function(){\r\n      if(this instanceof SVG.Defs) return this\r\n      if(this instanceof SVG.Parent) return this.ungroup(parent, depth-1)\r\n      return this.toParent(parent)\r\n    })\r\n\r\n    this.node.firstChild || this.remove()\r\n\r\n    return this\r\n  },\r\n\r\n  flatten: function(parent, depth) {\r\n    return this.ungroup(parent, depth)\r\n  }\r\n\r\n})\nSVG.Container = SVG.invent({\r\n  // Initialize node\r\n  create: function(element) {\r\n    this.constructor.call(this, element)\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Parent\r\n\r\n})\n\r\nSVG.ViewBox = SVG.invent({\r\n\r\n  create: function(source) {\r\n    var i, base = [0, 0, 0, 0]\r\n\r\n    var x, y, width, height, box, view, we, he\r\n      , wm   = 1 // width multiplier\r\n      , hm   = 1 // height multiplier\r\n      , reg  = /[+-]?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?/gi\r\n\r\n    if(source instanceof SVG.Element){\r\n\r\n      we = source\r\n      he = source\r\n      view = (source.attr('viewBox') || '').match(reg)\r\n      box = source.bbox\r\n\r\n      // get dimensions of current node\r\n      width  = new SVG.Number(source.width())\r\n      height = new SVG.Number(source.height())\r\n\r\n      // find nearest non-percentual dimensions\r\n      while (width.unit == '%') {\r\n        wm *= width.value\r\n        width = new SVG.Number(we instanceof SVG.Doc ? we.parent().offsetWidth : we.parent().width())\r\n        we = we.parent()\r\n      }\r\n      while (height.unit == '%') {\r\n        hm *= height.value\r\n        height = new SVG.Number(he instanceof SVG.Doc ? he.parent().offsetHeight : he.parent().height())\r\n        he = he.parent()\r\n      }\r\n\r\n      // ensure defaults\r\n      this.x      = 0\r\n      this.y      = 0\r\n      this.width  = width  * wm\r\n      this.height = height * hm\r\n      this.zoom   = 1\r\n\r\n      if (view) {\r\n        // get width and height from viewbox\r\n        x      = parseFloat(view[0])\r\n        y      = parseFloat(view[1])\r\n        width  = parseFloat(view[2])\r\n        height = parseFloat(view[3])\r\n\r\n        // calculate zoom accoring to viewbox\r\n        this.zoom = ((this.width / this.height) > (width / height)) ?\r\n          this.height / height :\r\n          this.width  / width\r\n\r\n        // calculate real pixel dimensions on parent SVG.Doc element\r\n        this.x      = x\r\n        this.y      = y\r\n        this.width  = width\r\n        this.height = height\r\n\r\n      }\r\n\r\n    }else{\r\n\r\n      // ensure source as object\r\n      source = typeof source === 'string' ?\r\n        source.match(reg).map(function(el){ return parseFloat(el) }) :\r\n      Array.isArray(source) ?\r\n        source :\r\n      typeof source == 'object' ?\r\n        [source.x, source.y, source.width, source.height] :\r\n      arguments.length == 4 ?\r\n        [].slice.call(arguments) :\r\n        base\r\n\r\n      this.x = source[0]\r\n      this.y = source[1]\r\n      this.width = source[2]\r\n      this.height = source[3]\r\n    }\r\n\r\n\r\n  }\r\n\r\n, extend: {\r\n\r\n    toString: function() {\r\n      return this.x + ' ' + this.y + ' ' + this.width + ' ' + this.height\r\n    }\r\n  , morph: function(x, y, width, height){\r\n      this.destination = new SVG.ViewBox(x, y, width, height)\r\n      return this\r\n    }\r\n\r\n  , at: function(pos) {\r\n\r\n      if(!this.destination) return this\r\n\r\n      return new SVG.ViewBox([\r\n          this.x + (this.destination.x - this.x) * pos\r\n        , this.y + (this.destination.y - this.y) * pos\r\n        , this.width + (this.destination.width - this.width) * pos\r\n        , this.height + (this.destination.height - this.height) * pos\r\n      ])\r\n\r\n    }\r\n\r\n  }\r\n\r\n  // Define parent\r\n, parent: SVG.Container\r\n\r\n  // Add parent method\r\n, construct: {\r\n\r\n    // get/set viewbox\r\n    viewbox: function(x, y, width, height) {\r\n      if (arguments.length == 0)\r\n        // act as a getter if there are no arguments\r\n        return new SVG.ViewBox(this)\r\n\r\n      // otherwise act as a setter\r\n      return this.attr('viewBox', new SVG.ViewBox(x, y, width, height))\r\n    }\r\n\r\n  }\r\n\r\n})\n// Add events to elements\r\n;[  'click'\r\n  , 'dblclick'\r\n  , 'mousedown'\r\n  , 'mouseup'\r\n  , 'mouseover'\r\n  , 'mouseout'\r\n  , 'mousemove'\r\n  // , 'mouseenter' -> not supported by IE\r\n  // , 'mouseleave' -> not supported by IE\r\n  , 'touchstart'\r\n  , 'touchmove'\r\n  , 'touchleave'\r\n  , 'touchend'\r\n  , 'touchcancel' ].forEach(function(event) {\r\n\r\n  // add event to SVG.Element\r\n  SVG.Element.prototype[event] = function(f) {\r\n    // bind event to element rather than element node\r\n    SVG.on(this.node, event, f)\r\n    return this\r\n  }\r\n})\r\n\r\n// Initialize listeners stack\r\nSVG.listeners = []\r\nSVG.handlerMap = []\r\nSVG.listenerId = 0\r\n\r\n// Add event binder in the SVG namespace\r\nSVG.on = function(node, event, listener, binding, options) {\r\n  // create listener, get object-index\r\n  var l     = listener.bind(binding || node.instance || node)\r\n    , index = (SVG.handlerMap.indexOf(node) + 1 || SVG.handlerMap.push(node)) - 1\r\n    , ev    = event.split('.')[0]\r\n    , ns    = event.split('.')[1] || '*'\r\n\r\n\r\n  // ensure valid object\r\n  SVG.listeners[index]         = SVG.listeners[index]         || {}\r\n  SVG.listeners[index][ev]     = SVG.listeners[index][ev]     || {}\r\n  SVG.listeners[index][ev][ns] = SVG.listeners[index][ev][ns] || {}\r\n\r\n  if(!listener._svgjsListenerId)\r\n    listener._svgjsListenerId = ++SVG.listenerId\r\n\r\n  // reference listener\r\n  SVG.listeners[index][ev][ns][listener._svgjsListenerId] = l\r\n\r\n  // add listener\r\n  node.addEventListener(ev, l, options || false)\r\n}\r\n\r\n// Add event unbinder in the SVG namespace\r\nSVG.off = function(node, event, listener) {\r\n  var index = SVG.handlerMap.indexOf(node)\r\n    , ev    = event && event.split('.')[0]\r\n    , ns    = event && event.split('.')[1]\r\n    , namespace = ''\r\n\r\n  if(index == -1) return\r\n\r\n  if (listener) {\r\n    if(typeof listener == 'function') listener = listener._svgjsListenerId\r\n    if(!listener) return\r\n\r\n    // remove listener reference\r\n    if (SVG.listeners[index][ev] && SVG.listeners[index][ev][ns || '*']) {\r\n      // remove listener\r\n      node.removeEventListener(ev, SVG.listeners[index][ev][ns || '*'][listener], false)\r\n\r\n      delete SVG.listeners[index][ev][ns || '*'][listener]\r\n    }\r\n\r\n  } else if (ns && ev) {\r\n    // remove all listeners for a namespaced event\r\n    if (SVG.listeners[index][ev] && SVG.listeners[index][ev][ns]) {\r\n      for (listener in SVG.listeners[index][ev][ns])\r\n        SVG.off(node, [ev, ns].join('.'), listener)\r\n\r\n      delete SVG.listeners[index][ev][ns]\r\n    }\r\n\r\n  } else if (ns){\r\n    // remove all listeners for a specific namespace\r\n    for(event in SVG.listeners[index]){\r\n        for(namespace in SVG.listeners[index][event]){\r\n            if(ns === namespace){\r\n                SVG.off(node, [event, ns].join('.'))\r\n            }\r\n        }\r\n    }\r\n\r\n  } else if (ev) {\r\n    // remove all listeners for the event\r\n    if (SVG.listeners[index][ev]) {\r\n      for (namespace in SVG.listeners[index][ev])\r\n        SVG.off(node, [ev, namespace].join('.'))\r\n\r\n      delete SVG.listeners[index][ev]\r\n    }\r\n\r\n  } else {\r\n    // remove all listeners on a given node\r\n    for (event in SVG.listeners[index])\r\n      SVG.off(node, event)\r\n\r\n    delete SVG.listeners[index]\r\n    delete SVG.handlerMap[index]\r\n\r\n  }\r\n}\r\n\r\n//\r\nSVG.extend(SVG.Element, {\r\n  // Bind given event to listener\r\n  on: function(event, listener, binding, options) {\r\n    SVG.on(this.node, event, listener, binding, options)\r\n\r\n    return this\r\n  }\r\n  // Unbind event from listener\r\n, off: function(event, listener) {\r\n    SVG.off(this.node, event, listener)\r\n\r\n    return this\r\n  }\r\n  // Fire given event\r\n, fire: function(event, data) {\r\n\r\n    // Dispatch event\r\n    if(event instanceof window.Event){\r\n        this.node.dispatchEvent(event)\r\n    }else{\r\n        this.node.dispatchEvent(event = new window.CustomEvent(event, {detail:data, cancelable: true}))\r\n    }\r\n\r\n    this._event = event\r\n    return this\r\n  }\r\n, event: function() {\r\n    return this._event\r\n  }\r\n})\r\n\n\r\nSVG.Defs = SVG.invent({\r\n  // Initialize node\r\n  create: 'defs'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n})\nSVG.G = SVG.invent({\r\n  // Initialize node\r\n  create: 'g'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Move over x-axis\r\n    x: function(x) {\r\n      return x == null ? this.transform('x') : this.transform({ x: x - this.x() }, true)\r\n    }\r\n    // Move over y-axis\r\n  , y: function(y) {\r\n      return y == null ? this.transform('y') : this.transform({ y: y - this.y() }, true)\r\n    }\r\n    // Move by center over x-axis\r\n  , cx: function(x) {\r\n      return x == null ? this.gbox().cx : this.x(x - this.gbox().width / 2)\r\n    }\r\n    // Move by center over y-axis\r\n  , cy: function(y) {\r\n      return y == null ? this.gbox().cy : this.y(y - this.gbox().height / 2)\r\n    }\r\n  , gbox: function() {\r\n\r\n      var bbox  = this.bbox()\r\n        , trans = this.transform()\r\n\r\n      bbox.x  += trans.x\r\n      bbox.x2 += trans.x\r\n      bbox.cx += trans.x\r\n\r\n      bbox.y  += trans.y\r\n      bbox.y2 += trans.y\r\n      bbox.cy += trans.y\r\n\r\n      return bbox\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a group element\r\n    group: function() {\r\n      return this.put(new SVG.G)\r\n    }\r\n  }\r\n})\r\n\n// ### This module adds backward / forward functionality to elements.\r\n\r\n//\r\nSVG.extend(SVG.Element, {\r\n  // Get all siblings, including myself\r\n  siblings: function() {\r\n    return this.parent().children()\r\n  }\r\n  // Get the curent position siblings\r\n, position: function() {\r\n    return this.parent().index(this)\r\n  }\r\n  // Get the next element (will return null if there is none)\r\n, next: function() {\r\n    return this.siblings()[this.position() + 1]\r\n  }\r\n  // Get the next element (will return null if there is none)\r\n, previous: function() {\r\n    return this.siblings()[this.position() - 1]\r\n  }\r\n  // Send given element one step forward\r\n, forward: function() {\r\n    var i = this.position() + 1\r\n      , p = this.parent()\r\n\r\n    // move node one step forward\r\n    p.removeElement(this).add(this, i)\r\n\r\n    // make sure defs node is always at the top\r\n    if (p instanceof SVG.Doc)\r\n      p.node.appendChild(p.defs().node)\r\n\r\n    return this\r\n  }\r\n  // Send given element one step backward\r\n, backward: function() {\r\n    var i = this.position()\r\n\r\n    if (i > 0)\r\n      this.parent().removeElement(this).add(this, i - 1)\r\n\r\n    return this\r\n  }\r\n  // Send given element all the way to the front\r\n, front: function() {\r\n    var p = this.parent()\r\n\r\n    // Move node forward\r\n    p.node.appendChild(this.node)\r\n\r\n    // Make sure defs node is always at the top\r\n    if (p instanceof SVG.Doc)\r\n      p.node.appendChild(p.defs().node)\r\n\r\n    return this\r\n  }\r\n  // Send given element all the way to the back\r\n, back: function() {\r\n    if (this.position() > 0)\r\n      this.parent().removeElement(this).add(this, 0)\r\n\r\n    return this\r\n  }\r\n  // Inserts a given element before the targeted element\r\n, before: function(element) {\r\n    element.remove()\r\n\r\n    var i = this.position()\r\n\r\n    this.parent().add(element, i)\r\n\r\n    return this\r\n  }\r\n  // Insters a given element after the targeted element\r\n, after: function(element) {\r\n    element.remove()\r\n\r\n    var i = this.position()\r\n\r\n    this.parent().add(element, i + 1)\r\n\r\n    return this\r\n  }\r\n\r\n})\nSVG.Mask = SVG.invent({\r\n  // Initialize node\r\n  create: function() {\r\n    this.constructor.call(this, SVG.create('mask'))\r\n\r\n    // keep references to masked elements\r\n    this.targets = []\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Unmask all masked elements and remove itself\r\n    remove: function() {\r\n      // unmask all targets\r\n      for (var i = this.targets.length - 1; i >= 0; i--)\r\n        if (this.targets[i])\r\n          this.targets[i].unmask()\r\n      this.targets = []\r\n\r\n      // remove mask from parent\r\n      this.parent().removeElement(this)\r\n\r\n      return this\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create masking element\r\n    mask: function() {\r\n      return this.defs().put(new SVG.Mask)\r\n    }\r\n  }\r\n})\r\n\r\n\r\nSVG.extend(SVG.Element, {\r\n  // Distribute mask to svg element\r\n  maskWith: function(element) {\r\n    // use given mask or create a new one\r\n    this.masker = element instanceof SVG.Mask ? element : this.parent().mask().add(element)\r\n\r\n    // store reverence on self in mask\r\n    this.masker.targets.push(this)\r\n\r\n    // apply mask\r\n    return this.attr('mask', 'url(\"#' + this.masker.attr('id') + '\")')\r\n  }\r\n  // Unmask element\r\n, unmask: function() {\r\n    delete this.masker\r\n    return this.attr('mask', null)\r\n  }\r\n\r\n})\r\n\nSVG.ClipPath = SVG.invent({\r\n  // Initialize node\r\n  create: function() {\r\n    this.constructor.call(this, SVG.create('clipPath'))\r\n\r\n    // keep references to clipped elements\r\n    this.targets = []\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Unclip all clipped elements and remove itself\r\n    remove: function() {\r\n      // unclip all targets\r\n      for (var i = this.targets.length - 1; i >= 0; i--)\r\n        if (this.targets[i])\r\n          this.targets[i].unclip()\r\n      this.targets = []\r\n\r\n      // remove clipPath from parent\r\n      this.parent().removeElement(this)\r\n\r\n      return this\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create clipping element\r\n    clip: function() {\r\n      return this.defs().put(new SVG.ClipPath)\r\n    }\r\n  }\r\n})\r\n\r\n//\r\nSVG.extend(SVG.Element, {\r\n  // Distribute clipPath to svg element\r\n  clipWith: function(element) {\r\n    // use given clip or create a new one\r\n    this.clipper = element instanceof SVG.ClipPath ? element : this.parent().clip().add(element)\r\n\r\n    // store reverence on self in mask\r\n    this.clipper.targets.push(this)\r\n\r\n    // apply mask\r\n    return this.attr('clip-path', 'url(\"#' + this.clipper.attr('id') + '\")')\r\n  }\r\n  // Unclip element\r\n, unclip: function() {\r\n    delete this.clipper\r\n    return this.attr('clip-path', null)\r\n  }\r\n\r\n})\nSVG.Gradient = SVG.invent({\r\n  // Initialize node\r\n  create: function(type) {\r\n    this.constructor.call(this, SVG.create(type + 'Gradient'))\r\n\r\n    // store type\r\n    this.type = type\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Add a color stop\r\n    at: function(offset, color, opacity) {\r\n      return this.put(new SVG.Stop).update(offset, color, opacity)\r\n    }\r\n    // Update gradient\r\n  , update: function(block) {\r\n      // remove all stops\r\n      this.clear()\r\n\r\n      // invoke passed block\r\n      if (typeof block == 'function')\r\n        block.call(this, this)\r\n\r\n      return this\r\n    }\r\n    // Return the fill id\r\n  , fill: function() {\r\n      return 'url(#' + this.id() + ')'\r\n    }\r\n    // Alias string convertion to fill\r\n  , toString: function() {\r\n      return this.fill()\r\n    }\r\n    // custom attr to handle transform\r\n  , attr: function(a, b, c) {\r\n      if(a == 'transform') a = 'gradientTransform'\r\n      return SVG.Container.prototype.attr.call(this, a, b, c)\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create gradient element in defs\r\n    gradient: function(type, block) {\r\n      return this.defs().gradient(type, block)\r\n    }\r\n  }\r\n})\r\n\r\n// Add animatable methods to both gradient and fx module\r\nSVG.extend(SVG.Gradient, SVG.FX, {\r\n  // From position\r\n  from: function(x, y) {\r\n    return (this._target || this).type == 'radial' ?\r\n      this.attr({ fx: new SVG.Number(x), fy: new SVG.Number(y) }) :\r\n      this.attr({ x1: new SVG.Number(x), y1: new SVG.Number(y) })\r\n  }\r\n  // To position\r\n, to: function(x, y) {\r\n    return (this._target || this).type == 'radial' ?\r\n      this.attr({ cx: new SVG.Number(x), cy: new SVG.Number(y) }) :\r\n      this.attr({ x2: new SVG.Number(x), y2: new SVG.Number(y) })\r\n  }\r\n})\r\n\r\n// Base gradient generation\r\nSVG.extend(SVG.Defs, {\r\n  // define gradient\r\n  gradient: function(type, block) {\r\n    return this.put(new SVG.Gradient(type)).update(block)\r\n  }\r\n\r\n})\r\n\r\nSVG.Stop = SVG.invent({\r\n  // Initialize node\r\n  create: 'stop'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Element\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // add color stops\r\n    update: function(o) {\r\n      if (typeof o == 'number' || o instanceof SVG.Number) {\r\n        o = {\r\n          offset:  arguments[0]\r\n        , color:   arguments[1]\r\n        , opacity: arguments[2]\r\n        }\r\n      }\r\n\r\n      // set attributes\r\n      if (o.opacity != null) this.attr('stop-opacity', o.opacity)\r\n      if (o.color   != null) this.attr('stop-color', o.color)\r\n      if (o.offset  != null) this.attr('offset', new SVG.Number(o.offset))\r\n\r\n      return this\r\n    }\r\n  }\r\n\r\n})\r\n\nSVG.Pattern = SVG.invent({\r\n  // Initialize node\r\n  create: 'pattern'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Return the fill id\r\n    fill: function() {\r\n      return 'url(#' + this.id() + ')'\r\n    }\r\n    // Update pattern by rebuilding\r\n  , update: function(block) {\r\n      // remove content\r\n      this.clear()\r\n\r\n      // invoke passed block\r\n      if (typeof block == 'function')\r\n        block.call(this, this)\r\n\r\n      return this\r\n    }\r\n    // Alias string convertion to fill\r\n  , toString: function() {\r\n      return this.fill()\r\n    }\r\n    // custom attr to handle transform\r\n  , attr: function(a, b, c) {\r\n      if(a == 'transform') a = 'patternTransform'\r\n      return SVG.Container.prototype.attr.call(this, a, b, c)\r\n    }\r\n\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create pattern element in defs\r\n    pattern: function(width, height, block) {\r\n      return this.defs().pattern(width, height, block)\r\n    }\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Defs, {\r\n  // Define gradient\r\n  pattern: function(width, height, block) {\r\n    return this.put(new SVG.Pattern).update(block).attr({\r\n      x:            0\r\n    , y:            0\r\n    , width:        width\r\n    , height:       height\r\n    , patternUnits: 'userSpaceOnUse'\r\n    })\r\n  }\r\n\r\n})\nSVG.Doc = SVG.invent({\r\n  // Initialize node\r\n  create: function(element) {\r\n    if (element) {\r\n      // ensure the presence of a dom element\r\n      element = typeof element == 'string' ?\r\n        document.getElementById(element) :\r\n        element\r\n\r\n      // If the target is an svg element, use that element as the main wrapper.\r\n      // This allows svg.js to work with svg documents as well.\r\n      if (element.nodeName == 'svg') {\r\n        this.constructor.call(this, element)\r\n      } else {\r\n        this.constructor.call(this, SVG.create('svg'))\r\n        element.appendChild(this.node)\r\n        this.size('100%', '100%')\r\n      }\r\n\r\n      // set svg element attributes and ensure defs node\r\n      this.namespace().defs()\r\n    }\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Add namespaces\r\n    namespace: function() {\r\n      return this\r\n        .attr({ xmlns: SVG.ns, version: '1.1' })\r\n        .attr('xmlns:xlink', SVG.xlink, SVG.xmlns)\r\n        .attr('xmlns:svgjs', SVG.svgjs, SVG.xmlns)\r\n    }\r\n    // Creates and returns defs element\r\n  , defs: function() {\r\n      if (!this._defs) {\r\n        var defs\r\n\r\n        // Find or create a defs element in this instance\r\n        if (defs = this.node.getElementsByTagName('defs')[0])\r\n          this._defs = SVG.adopt(defs)\r\n        else\r\n          this._defs = new SVG.Defs\r\n\r\n        // Make sure the defs node is at the end of the stack\r\n        this.node.appendChild(this._defs.node)\r\n      }\r\n\r\n      return this._defs\r\n    }\r\n    // custom parent method\r\n  , parent: function() {\r\n      return this.node.parentNode.nodeName == '#document' ? null : this.node.parentNode\r\n    }\r\n    // Fix for possible sub-pixel offset. See:\r\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=608812\r\n  , spof: function() {\r\n      var pos = this.node.getScreenCTM()\r\n\r\n      if (pos)\r\n        this\r\n          .style('left', (-pos.e % 1) + 'px')\r\n          .style('top',  (-pos.f % 1) + 'px')\r\n\r\n      return this\r\n    }\r\n\r\n      // Removes the doc from the DOM\r\n  , remove: function() {\r\n      if(this.parent()) {\r\n        this.parent().removeChild(this.node)\r\n      }\r\n\r\n      return this\r\n    }\r\n  , clear: function() {\r\n      // remove children\r\n      while(this.node.hasChildNodes())\r\n        this.node.removeChild(this.node.lastChild)\r\n\r\n      // remove defs reference\r\n      delete this._defs\r\n\r\n      // add back parser\r\n      if(!SVG.parser.draw.parentNode)\r\n        this.node.appendChild(SVG.parser.draw)\r\n\r\n      return this\r\n    }\r\n  }\r\n\r\n})\r\n\nSVG.Shape = SVG.invent({\r\n  // Initialize node\r\n  create: function(element) {\r\n    this.constructor.call(this, element)\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Element\r\n\r\n})\n\r\nSVG.Bare = SVG.invent({\r\n  // Initialize\r\n  create: function(element, inherit) {\r\n    // construct element\r\n    this.constructor.call(this, SVG.create(element))\r\n\r\n    // inherit custom methods\r\n    if (inherit)\r\n      for (var method in inherit.prototype)\r\n        if (typeof inherit.prototype[method] === 'function')\r\n          this[method] = inherit.prototype[method]\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Element\r\n\r\n  // Add methods\r\n, extend: {\r\n    // Insert some plain text\r\n    words: function(text) {\r\n      // remove contents\r\n      while (this.node.hasChildNodes())\r\n        this.node.removeChild(this.node.lastChild)\r\n\r\n      // create text node\r\n      this.node.appendChild(document.createTextNode(text))\r\n\r\n      return this\r\n    }\r\n  }\r\n})\r\n\r\n\r\nSVG.extend(SVG.Parent, {\r\n  // Create an element that is not described by SVG.js\r\n  element: function(element, inherit) {\r\n    return this.put(new SVG.Bare(element, inherit))\r\n  }\r\n})\r\n\nSVG.Symbol = SVG.invent({\r\n  // Initialize node\r\n  create: 'symbol'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n, construct: {\r\n    // create symbol\r\n    symbol: function() {\r\n      return this.put(new SVG.Symbol)\r\n    }\r\n  }\r\n})\r\n\nSVG.Use = SVG.invent({\r\n  // Initialize node\r\n  create: 'use'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Use element as a reference\r\n    element: function(element, file) {\r\n      // Set lined element\r\n      return this.attr('href', (file || '') + '#' + element, SVG.xlink)\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a use element\r\n    use: function(element, file) {\r\n      return this.put(new SVG.Use).element(element, file)\r\n    }\r\n  }\r\n})\nSVG.Rect = SVG.invent({\r\n  // Initialize node\r\n  create: 'rect'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a rect element\r\n    rect: function(width, height) {\r\n      return this.put(new SVG.Rect()).size(width, height)\r\n    }\r\n  }\r\n})\nSVG.Circle = SVG.invent({\r\n  // Initialize node\r\n  create: 'circle'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create circle element, based on ellipse\r\n    circle: function(size) {\r\n      return this.put(new SVG.Circle).rx(new SVG.Number(size).divide(2)).move(0, 0)\r\n    }\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Circle, SVG.FX, {\r\n  // Radius x value\r\n  rx: function(rx) {\r\n    return this.attr('r', rx)\r\n  }\r\n  // Alias radius x value\r\n, ry: function(ry) {\r\n    return this.rx(ry)\r\n  }\r\n})\r\n\r\nSVG.Ellipse = SVG.invent({\r\n  // Initialize node\r\n  create: 'ellipse'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create an ellipse\r\n    ellipse: function(width, height) {\r\n      return this.put(new SVG.Ellipse).size(width, height).move(0, 0)\r\n    }\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Ellipse, SVG.Rect, SVG.FX, {\r\n  // Radius x value\r\n  rx: function(rx) {\r\n    return this.attr('rx', rx)\r\n  }\r\n  // Radius y value\r\n, ry: function(ry) {\r\n    return this.attr('ry', ry)\r\n  }\r\n})\r\n\r\n// Add common method\r\nSVG.extend(SVG.Circle, SVG.Ellipse, {\r\n    // Move over x-axis\r\n    x: function(x) {\r\n      return x == null ? this.cx() - this.rx() : this.cx(x + this.rx())\r\n    }\r\n    // Move over y-axis\r\n  , y: function(y) {\r\n      return y == null ? this.cy() - this.ry() : this.cy(y + this.ry())\r\n    }\r\n    // Move by center over x-axis\r\n  , cx: function(x) {\r\n      return x == null ? this.attr('cx') : this.attr('cx', x)\r\n    }\r\n    // Move by center over y-axis\r\n  , cy: function(y) {\r\n      return y == null ? this.attr('cy') : this.attr('cy', y)\r\n    }\r\n    // Set width of element\r\n  , width: function(width) {\r\n      return width == null ? this.rx() * 2 : this.rx(new SVG.Number(width).divide(2))\r\n    }\r\n    // Set height of element\r\n  , height: function(height) {\r\n      return height == null ? this.ry() * 2 : this.ry(new SVG.Number(height).divide(2))\r\n    }\r\n    // Custom size function\r\n  , size: function(width, height) {\r\n      var p = proportionalSize(this, width, height)\r\n\r\n      return this\r\n        .rx(new SVG.Number(p.width).divide(2))\r\n        .ry(new SVG.Number(p.height).divide(2))\r\n    }\r\n})\nSVG.Line = SVG.invent({\r\n  // Initialize node\r\n  create: 'line'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Get array\r\n    array: function() {\r\n      return new SVG.PointArray([\r\n        [ this.attr('x1'), this.attr('y1') ]\r\n      , [ this.attr('x2'), this.attr('y2') ]\r\n      ])\r\n    }\r\n    // Overwrite native plot() method\r\n  , plot: function(x1, y1, x2, y2) {\r\n      if (x1 == null)\r\n        return this.array()\r\n      else if (typeof y1 !== 'undefined')\r\n        x1 = { x1: x1, y1: y1, x2: x2, y2: y2 }\r\n      else\r\n        x1 = new SVG.PointArray(x1).toLine()\r\n\r\n      return this.attr(x1)\r\n    }\r\n    // Move by left top corner\r\n  , move: function(x, y) {\r\n      return this.attr(this.array().move(x, y).toLine())\r\n    }\r\n    // Set element size to given width and height\r\n  , size: function(width, height) {\r\n      var p = proportionalSize(this, width, height)\r\n\r\n      return this.attr(this.array().size(p.width, p.height).toLine())\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a line element\r\n    line: function(x1, y1, x2, y2) {\r\n      // make sure plot is called as a setter\r\n      // x1 is not necessarily a number, it can also be an array, a string and a SVG.PointArray\r\n      return SVG.Line.prototype.plot.apply(\r\n        this.put(new SVG.Line)\r\n      , x1 != null ? [x1, y1, x2, y2] : [0, 0, 0, 0]\r\n      )\r\n    }\r\n  }\r\n})\r\n\nSVG.Polyline = SVG.invent({\r\n  // Initialize node\r\n  create: 'polyline'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a wrapped polyline element\r\n    polyline: function(p) {\r\n      // make sure plot is called as a setter\r\n      return this.put(new SVG.Polyline).plot(p || new SVG.PointArray)\r\n    }\r\n  }\r\n})\r\n\r\nSVG.Polygon = SVG.invent({\r\n  // Initialize node\r\n  create: 'polygon'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a wrapped polygon element\r\n    polygon: function(p) {\r\n      // make sure plot is called as a setter\r\n      return this.put(new SVG.Polygon).plot(p || new SVG.PointArray)\r\n    }\r\n  }\r\n})\r\n\r\n// Add polygon-specific functions\r\nSVG.extend(SVG.Polyline, SVG.Polygon, {\r\n  // Get array\r\n  array: function() {\r\n    return this._array || (this._array = new SVG.PointArray(this.attr('points')))\r\n  }\r\n  // Plot new path\r\n, plot: function(p) {\r\n    return (p == null) ?\r\n      this.array() :\r\n      this.clear().attr('points', typeof p == 'string' ? p : (this._array = new SVG.PointArray(p)))\r\n  }\r\n  // Clear array cache\r\n, clear: function() {\r\n    delete this._array\r\n    return this\r\n  }\r\n  // Move by left top corner\r\n, move: function(x, y) {\r\n    return this.attr('points', this.array().move(x, y))\r\n  }\r\n  // Set element size to given width and height\r\n, size: function(width, height) {\r\n    var p = proportionalSize(this, width, height)\r\n\r\n    return this.attr('points', this.array().size(p.width, p.height))\r\n  }\r\n\r\n})\r\n\n// unify all point to point elements\r\nSVG.extend(SVG.Line, SVG.Polyline, SVG.Polygon, {\r\n  // Define morphable array\r\n  morphArray:  SVG.PointArray\r\n  // Move by left top corner over x-axis\r\n, x: function(x) {\r\n    return x == null ? this.bbox().x : this.move(x, this.bbox().y)\r\n  }\r\n  // Move by left top corner over y-axis\r\n, y: function(y) {\r\n    return y == null ? this.bbox().y : this.move(this.bbox().x, y)\r\n  }\r\n  // Set width of element\r\n, width: function(width) {\r\n    var b = this.bbox()\r\n\r\n    return width == null ? b.width : this.size(width, b.height)\r\n  }\r\n  // Set height of element\r\n, height: function(height) {\r\n    var b = this.bbox()\r\n\r\n    return height == null ? b.height : this.size(b.width, height)\r\n  }\r\n})\nSVG.Path = SVG.invent({\r\n  // Initialize node\r\n  create: 'path'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Define morphable array\r\n    morphArray:  SVG.PathArray\r\n    // Get array\r\n  , array: function() {\r\n      return this._array || (this._array = new SVG.PathArray(this.attr('d')))\r\n    }\r\n    // Plot new path\r\n  , plot: function(d) {\r\n      return (d == null) ?\r\n        this.array() :\r\n        this.clear().attr('d', typeof d == 'string' ? d : (this._array = new SVG.PathArray(d)))\r\n    }\r\n    // Clear array cache\r\n  , clear: function() {\r\n      delete this._array\r\n      return this\r\n    }\r\n    // Move by left top corner\r\n  , move: function(x, y) {\r\n      return this.attr('d', this.array().move(x, y))\r\n    }\r\n    // Move by left top corner over x-axis\r\n  , x: function(x) {\r\n      return x == null ? this.bbox().x : this.move(x, this.bbox().y)\r\n    }\r\n    // Move by left top corner over y-axis\r\n  , y: function(y) {\r\n      return y == null ? this.bbox().y : this.move(this.bbox().x, y)\r\n    }\r\n    // Set element size to given width and height\r\n  , size: function(width, height) {\r\n      var p = proportionalSize(this, width, height)\r\n\r\n      return this.attr('d', this.array().size(p.width, p.height))\r\n    }\r\n    // Set width of element\r\n  , width: function(width) {\r\n      return width == null ? this.bbox().width : this.size(width, this.bbox().height)\r\n    }\r\n    // Set height of element\r\n  , height: function(height) {\r\n      return height == null ? this.bbox().height : this.size(this.bbox().width, height)\r\n    }\r\n\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a wrapped path element\r\n    path: function(d) {\r\n      // make sure plot is called as a setter\r\n      return this.put(new SVG.Path).plot(d || new SVG.PathArray)\r\n    }\r\n  }\r\n})\r\n\nSVG.Image = SVG.invent({\r\n  // Initialize node\r\n  create: 'image'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // (re)load image\r\n    load: function(url) {\r\n      if (!url) return this\r\n\r\n      var self = this\r\n        , img  = new window.Image()\r\n\r\n      // preload image\r\n      SVG.on(img, 'load', function() {\r\n        SVG.off(img)\r\n\r\n        var p = self.parent(SVG.Pattern)\r\n\r\n        if(p === null) return\r\n\r\n        // ensure image size\r\n        if (self.width() == 0 && self.height() == 0)\r\n          self.size(img.width, img.height)\r\n\r\n        // ensure pattern size if not set\r\n        if (p && p.width() == 0 && p.height() == 0)\r\n          p.size(self.width(), self.height())\r\n\r\n        // callback\r\n        if (typeof self._loaded === 'function')\r\n          self._loaded.call(self, {\r\n            width:  img.width\r\n          , height: img.height\r\n          , ratio:  img.width / img.height\r\n          , url:    url\r\n          })\r\n      })\r\n\r\n      SVG.on(img, 'error', function(e){\r\n        SVG.off(img)\r\n\r\n        if (typeof self._error === 'function'){\r\n            self._error.call(self, e)\r\n        }\r\n      })\r\n\r\n      return this.attr('href', (img.src = this.src = url), SVG.xlink)\r\n    }\r\n    // Add loaded callback\r\n  , loaded: function(loaded) {\r\n      this._loaded = loaded\r\n      return this\r\n    }\r\n\r\n  , error: function(error) {\r\n      this._error = error\r\n      return this\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // create image element, load image and set its size\r\n    image: function(source, width, height) {\r\n      return this.put(new SVG.Image).load(source).size(width || 0, height || width || 0)\r\n    }\r\n  }\r\n\r\n})\nSVG.Text = SVG.invent({\r\n  // Initialize node\r\n  create: function() {\r\n    this.constructor.call(this, SVG.create('text'))\r\n\r\n    this.dom.leading = new SVG.Number(1.3)    // store leading value for rebuilding\r\n    this._rebuild = true                      // enable automatic updating of dy values\r\n    this._build   = false                     // disable build mode for adding multiple lines\r\n\r\n    // set default font\r\n    this.attr('font-family', SVG.defaults.attrs['font-family'])\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Move over x-axis\r\n    x: function(x) {\r\n      // act as getter\r\n      if (x == null)\r\n        return this.attr('x')\r\n\r\n      return this.attr('x', x)\r\n    }\r\n    // Move over y-axis\r\n  , y: function(y) {\r\n      var oy = this.attr('y')\r\n        , o  = typeof oy === 'number' ? oy - this.bbox().y : 0\r\n\r\n      // act as getter\r\n      if (y == null)\r\n        return typeof oy === 'number' ? oy - o : oy\r\n\r\n      return this.attr('y', typeof y === 'number' ? y + o : y)\r\n    }\r\n    // Move center over x-axis\r\n  , cx: function(x) {\r\n      return x == null ? this.bbox().cx : this.x(x - this.bbox().width / 2)\r\n    }\r\n    // Move center over y-axis\r\n  , cy: function(y) {\r\n      return y == null ? this.bbox().cy : this.y(y - this.bbox().height / 2)\r\n    }\r\n    // Set the text content\r\n  , text: function(text) {\r\n      // act as getter\r\n      if (typeof text === 'undefined'){\r\n        var text = ''\r\n        var children = this.node.childNodes\r\n        for(var i = 0, len = children.length; i < len; ++i){\r\n\r\n          // add newline if its not the first child and newLined is set to true\r\n          if(i != 0 && children[i].nodeType != 3 && SVG.adopt(children[i]).dom.newLined == true){\r\n            text += '\\n'\r\n          }\r\n\r\n          // add content of this node\r\n          text += children[i].textContent\r\n        }\r\n\r\n        return text\r\n      }\r\n\r\n      // remove existing content\r\n      this.clear().build(true)\r\n\r\n      if (typeof text === 'function') {\r\n        // call block\r\n        text.call(this, this)\r\n\r\n      } else {\r\n        // store text and make sure text is not blank\r\n        text = text.split('\\n')\r\n\r\n        // build new lines\r\n        for (var i = 0, il = text.length; i < il; i++)\r\n          this.tspan(text[i]).newLine()\r\n      }\r\n\r\n      // disable build mode and rebuild lines\r\n      return this.build(false).rebuild()\r\n    }\r\n    // Set font size\r\n  , size: function(size) {\r\n      return this.attr('font-size', size).rebuild()\r\n    }\r\n    // Set / get leading\r\n  , leading: function(value) {\r\n      // act as getter\r\n      if (value == null)\r\n        return this.dom.leading\r\n\r\n      // act as setter\r\n      this.dom.leading = new SVG.Number(value)\r\n\r\n      return this.rebuild()\r\n    }\r\n    // Get all the first level lines\r\n  , lines: function() {\r\n      var node = (this.textPath && this.textPath() || this).node\r\n\r\n      // filter tspans and map them to SVG.js instances\r\n      var lines = SVG.utils.map(SVG.utils.filterSVGElements(node.childNodes), function(el){\r\n        return SVG.adopt(el)\r\n      })\r\n\r\n      // return an instance of SVG.set\r\n      return new SVG.Set(lines)\r\n    }\r\n    // Rebuild appearance type\r\n  , rebuild: function(rebuild) {\r\n      // store new rebuild flag if given\r\n      if (typeof rebuild == 'boolean')\r\n        this._rebuild = rebuild\r\n\r\n      // define position of all lines\r\n      if (this._rebuild) {\r\n        var self = this\r\n          , blankLineOffset = 0\r\n          , dy = this.dom.leading * new SVG.Number(this.attr('font-size'))\r\n\r\n        this.lines().each(function() {\r\n          if (this.dom.newLined) {\r\n            if (!self.textPath())\r\n              this.attr('x', self.attr('x'))\r\n            if(this.text() == '\\n') {\r\n              blankLineOffset += dy\r\n            }else{\r\n              this.attr('dy', dy + blankLineOffset)\r\n              blankLineOffset = 0\r\n            }\r\n          }\r\n        })\r\n\r\n        this.fire('rebuild')\r\n      }\r\n\r\n      return this\r\n    }\r\n    // Enable / disable build mode\r\n  , build: function(build) {\r\n      this._build = !!build\r\n      return this\r\n    }\r\n    // overwrite method from parent to set data properly\r\n  , setData: function(o){\r\n      this.dom = o\r\n      this.dom.leading = new SVG.Number(o.leading || 1.3)\r\n      return this\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create text element\r\n    text: function(text) {\r\n      return this.put(new SVG.Text).text(text)\r\n    }\r\n    // Create plain text element\r\n  , plain: function(text) {\r\n      return this.put(new SVG.Text).plain(text)\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.Tspan = SVG.invent({\r\n  // Initialize node\r\n  create: 'tspan'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Set text content\r\n    text: function(text) {\r\n      if(text == null) return this.node.textContent + (this.dom.newLined ? '\\n' : '')\r\n\r\n      typeof text === 'function' ? text.call(this, this) : this.plain(text)\r\n\r\n      return this\r\n    }\r\n    // Shortcut dx\r\n  , dx: function(dx) {\r\n      return this.attr('dx', dx)\r\n    }\r\n    // Shortcut dy\r\n  , dy: function(dy) {\r\n      return this.attr('dy', dy)\r\n    }\r\n    // Create new line\r\n  , newLine: function() {\r\n      // fetch text parent\r\n      var t = this.parent(SVG.Text)\r\n\r\n      // mark new line\r\n      this.dom.newLined = true\r\n\r\n      // apply new hy¡n\r\n      return this.dy(t.dom.leading * t.attr('font-size')).attr('x', t.x())\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.extend(SVG.Text, SVG.Tspan, {\r\n  // Create plain text node\r\n  plain: function(text) {\r\n    // clear if build mode is disabled\r\n    if (this._build === false)\r\n      this.clear()\r\n\r\n    // create text node\r\n    this.node.appendChild(document.createTextNode(text))\r\n\r\n    return this\r\n  }\r\n  // Create a tspan\r\n, tspan: function(text) {\r\n    var node  = (this.textPath && this.textPath() || this).node\r\n      , tspan = new SVG.Tspan\r\n\r\n    // clear if build mode is disabled\r\n    if (this._build === false)\r\n      this.clear()\r\n\r\n    // add new tspan\r\n    node.appendChild(tspan.node)\r\n\r\n    return tspan.text(text)\r\n  }\r\n  // Clear all lines\r\n, clear: function() {\r\n    var node = (this.textPath && this.textPath() || this).node\r\n\r\n    // remove existing child nodes\r\n    while (node.hasChildNodes())\r\n      node.removeChild(node.lastChild)\r\n\r\n    return this\r\n  }\r\n  // Get length of text element\r\n, length: function() {\r\n    return this.node.getComputedTextLength()\r\n  }\r\n})\r\n\nSVG.TextPath = SVG.invent({\r\n  // Initialize node\r\n  create: 'textPath'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Parent\r\n\r\n  // Define parent class\r\n, parent: SVG.Text\r\n\r\n  // Add parent method\r\n, construct: {\r\n    morphArray: SVG.PathArray\r\n    // Create path for text to run on\r\n  , path: function(d) {\r\n      // create textPath element\r\n      var path  = new SVG.TextPath\r\n        , track = this.doc().defs().path(d)\r\n\r\n      // move lines to textpath\r\n      while (this.node.hasChildNodes())\r\n        path.node.appendChild(this.node.firstChild)\r\n\r\n      // add textPath element as child node\r\n      this.node.appendChild(path.node)\r\n\r\n      // link textPath to path and add content\r\n      path.attr('href', '#' + track, SVG.xlink)\r\n\r\n      return this\r\n    }\r\n    // return the array of the path track element\r\n  , array: function() {\r\n      var track = this.track()\r\n\r\n      return track ? track.array() : null\r\n    }\r\n    // Plot path if any\r\n  , plot: function(d) {\r\n      var track = this.track()\r\n        , pathArray = null\r\n\r\n      if (track) {\r\n        pathArray = track.plot(d)\r\n      }\r\n\r\n      return (d == null) ? pathArray : this\r\n    }\r\n    // Get the path track element\r\n  , track: function() {\r\n      var path = this.textPath()\r\n\r\n      if (path)\r\n        return path.reference('href')\r\n    }\r\n    // Get the textPath child\r\n  , textPath: function() {\r\n      if (this.node.firstChild && this.node.firstChild.nodeName == 'textPath')\r\n        return SVG.adopt(this.node.firstChild)\r\n    }\r\n  }\r\n})\r\n\nSVG.Nested = SVG.invent({\r\n  // Initialize node\r\n  create: function() {\r\n    this.constructor.call(this, SVG.create('svg'))\r\n\r\n    this.style('overflow', 'visible')\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create nested svg document\r\n    nested: function() {\r\n      return this.put(new SVG.Nested)\r\n    }\r\n  }\r\n})\nSVG.A = SVG.invent({\r\n  // Initialize node\r\n  create: 'a'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Link url\r\n    to: function(url) {\r\n      return this.attr('href', url, SVG.xlink)\r\n    }\r\n    // Link show attribute\r\n  , show: function(target) {\r\n      return this.attr('show', target, SVG.xlink)\r\n    }\r\n    // Link target attribute\r\n  , target: function(target) {\r\n      return this.attr('target', target)\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a hyperlink element\r\n    link: function(url) {\r\n      return this.put(new SVG.A).to(url)\r\n    }\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Element, {\r\n  // Create a hyperlink element\r\n  linkTo: function(url) {\r\n    var link = new SVG.A\r\n\r\n    if (typeof url == 'function')\r\n      url.call(link, link)\r\n    else\r\n      link.to(url)\r\n\r\n    return this.parent().put(link).put(this)\r\n  }\r\n\r\n})\nSVG.Marker = SVG.invent({\r\n  // Initialize node\r\n  create: 'marker'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Set width of element\r\n    width: function(width) {\r\n      return this.attr('markerWidth', width)\r\n    }\r\n    // Set height of element\r\n  , height: function(height) {\r\n      return this.attr('markerHeight', height)\r\n    }\r\n    // Set marker refX and refY\r\n  , ref: function(x, y) {\r\n      return this.attr('refX', x).attr('refY', y)\r\n    }\r\n    // Update marker\r\n  , update: function(block) {\r\n      // remove all content\r\n      this.clear()\r\n\r\n      // invoke passed block\r\n      if (typeof block == 'function')\r\n        block.call(this, this)\r\n\r\n      return this\r\n    }\r\n    // Return the fill id\r\n  , toString: function() {\r\n      return 'url(#' + this.id() + ')'\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    marker: function(width, height, block) {\r\n      // Create marker element in defs\r\n      return this.defs().marker(width, height, block)\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.extend(SVG.Defs, {\r\n  // Create marker\r\n  marker: function(width, height, block) {\r\n    // Set default viewbox to match the width and height, set ref to cx and cy and set orient to auto\r\n    return this.put(new SVG.Marker)\r\n      .size(width, height)\r\n      .ref(width / 2, height / 2)\r\n      .viewbox(0, 0, width, height)\r\n      .attr('orient', 'auto')\r\n      .update(block)\r\n  }\r\n\r\n})\r\n\r\nSVG.extend(SVG.Line, SVG.Polyline, SVG.Polygon, SVG.Path, {\r\n  // Create and attach markers\r\n  marker: function(marker, width, height, block) {\r\n    var attr = ['marker']\r\n\r\n    // Build attribute name\r\n    if (marker != 'all') attr.push(marker)\r\n    attr = attr.join('-')\r\n\r\n    // Set marker attribute\r\n    marker = arguments[1] instanceof SVG.Marker ?\r\n      arguments[1] :\r\n      this.doc().marker(width, height, block)\r\n\r\n    return this.attr(attr, marker)\r\n  }\r\n\r\n})\n// Define list of available attributes for stroke and fill\r\nvar sugar = {\r\n  stroke: ['color', 'width', 'opacity', 'linecap', 'linejoin', 'miterlimit', 'dasharray', 'dashoffset']\r\n, fill:   ['color', 'opacity', 'rule']\r\n, prefix: function(t, a) {\r\n    return a == 'color' ? t : t + '-' + a\r\n  }\r\n}\r\n\r\n// Add sugar for fill and stroke\r\n;['fill', 'stroke'].forEach(function(m) {\r\n  var i, extension = {}\r\n\r\n  extension[m] = function(o) {\r\n    if (typeof o == 'undefined')\r\n      return this\r\n    if (typeof o == 'string' || SVG.Color.isRgb(o) || (o && typeof o.fill === 'function'))\r\n      this.attr(m, o)\r\n\r\n    else\r\n      // set all attributes from sugar.fill and sugar.stroke list\r\n      for (i = sugar[m].length - 1; i >= 0; i--)\r\n        if (o[sugar[m][i]] != null)\r\n          this.attr(sugar.prefix(m, sugar[m][i]), o[sugar[m][i]])\r\n\r\n    return this\r\n  }\r\n\r\n  SVG.extend(SVG.Element, SVG.FX, extension)\r\n\r\n})\r\n\r\nSVG.extend(SVG.Element, SVG.FX, {\r\n  // Map rotation to transform\r\n  rotate: function(d, cx, cy) {\r\n    return this.transform({ rotation: d, cx: cx, cy: cy })\r\n  }\r\n  // Map skew to transform\r\n, skew: function(x, y, cx, cy) {\r\n    return arguments.length == 1  || arguments.length == 3 ?\r\n      this.transform({ skew: x, cx: y, cy: cx }) :\r\n      this.transform({ skewX: x, skewY: y, cx: cx, cy: cy })\r\n  }\r\n  // Map scale to transform\r\n, scale: function(x, y, cx, cy) {\r\n    return arguments.length == 1  || arguments.length == 3 ?\r\n      this.transform({ scale: x, cx: y, cy: cx }) :\r\n      this.transform({ scaleX: x, scaleY: y, cx: cx, cy: cy })\r\n  }\r\n  // Map translate to transform\r\n, translate: function(x, y) {\r\n    return this.transform({ x: x, y: y })\r\n  }\r\n  // Map flip to transform\r\n, flip: function(a, o) {\r\n    o = typeof a == 'number' ? a : o\r\n    return this.transform({ flip: a || 'both', offset: o })\r\n  }\r\n  // Map matrix to transform\r\n, matrix: function(m) {\r\n    return this.attr('transform', new SVG.Matrix(arguments.length == 6 ? [].slice.call(arguments) : m))\r\n  }\r\n  // Opacity\r\n, opacity: function(value) {\r\n    return this.attr('opacity', value)\r\n  }\r\n  // Relative move over x axis\r\n, dx: function(x) {\r\n    return this.x(new SVG.Number(x).plus(this instanceof SVG.FX ? 0 : this.x()), true)\r\n  }\r\n  // Relative move over y axis\r\n, dy: function(y) {\r\n    return this.y(new SVG.Number(y).plus(this instanceof SVG.FX ? 0 : this.y()), true)\r\n  }\r\n  // Relative move over x and y axes\r\n, dmove: function(x, y) {\r\n    return this.dx(x).dy(y)\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Rect, SVG.Ellipse, SVG.Circle, SVG.Gradient, SVG.FX, {\r\n  // Add x and y radius\r\n  radius: function(x, y) {\r\n    var type = (this._target || this).type;\r\n    return type == 'radial' || type == 'circle' ?\r\n      this.attr('r', new SVG.Number(x)) :\r\n      this.rx(x).ry(y == null ? x : y)\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Path, {\r\n  // Get path length\r\n  length: function() {\r\n    return this.node.getTotalLength()\r\n  }\r\n  // Get point at length\r\n, pointAt: function(length) {\r\n    return this.node.getPointAtLength(length)\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Parent, SVG.Text, SVG.Tspan, SVG.FX, {\r\n  // Set font\r\n  font: function(a, v) {\r\n    if (typeof a == 'object') {\r\n      for (v in a) this.font(v, a[v])\r\n    }\r\n\r\n    return a == 'leading' ?\r\n        this.leading(v) :\r\n      a == 'anchor' ?\r\n        this.attr('text-anchor', v) :\r\n      a == 'size' || a == 'family' || a == 'weight' || a == 'stretch' || a == 'variant' || a == 'style' ?\r\n        this.attr('font-'+ a, v) :\r\n        this.attr(a, v)\r\n  }\r\n})\r\n\nSVG.Set = SVG.invent({\r\n  // Initialize\r\n  create: function(members) {\r\n    // Set initial state\r\n    Array.isArray(members) ? this.members = members : this.clear()\r\n  }\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Add element to set\r\n    add: function() {\r\n      var i, il, elements = [].slice.call(arguments)\r\n\r\n      for (i = 0, il = elements.length; i < il; i++)\r\n        this.members.push(elements[i])\r\n\r\n      return this\r\n    }\r\n    // Remove element from set\r\n  , remove: function(element) {\r\n      var i = this.index(element)\r\n\r\n      // remove given child\r\n      if (i > -1)\r\n        this.members.splice(i, 1)\r\n\r\n      return this\r\n    }\r\n    // Iterate over all members\r\n  , each: function(block) {\r\n      for (var i = 0, il = this.members.length; i < il; i++)\r\n        block.apply(this.members[i], [i, this.members])\r\n\r\n      return this\r\n    }\r\n    // Restore to defaults\r\n  , clear: function() {\r\n      // initialize store\r\n      this.members = []\r\n\r\n      return this\r\n    }\r\n    // Get the length of a set\r\n  , length: function() {\r\n      return this.members.length\r\n    }\r\n    // Checks if a given element is present in set\r\n  , has: function(element) {\r\n      return this.index(element) >= 0\r\n    }\r\n    // retuns index of given element in set\r\n  , index: function(element) {\r\n      return this.members.indexOf(element)\r\n    }\r\n    // Get member at given index\r\n  , get: function(i) {\r\n      return this.members[i]\r\n    }\r\n    // Get first member\r\n  , first: function() {\r\n      return this.get(0)\r\n    }\r\n    // Get last member\r\n  , last: function() {\r\n      return this.get(this.members.length - 1)\r\n    }\r\n    // Default value\r\n  , valueOf: function() {\r\n      return this.members\r\n    }\r\n    // Get the bounding box of all members included or empty box if set has no items\r\n  , bbox: function(){\r\n      // return an empty box of there are no members\r\n      if (this.members.length == 0)\r\n        return new SVG.RBox()\r\n\r\n      // get the first rbox and update the target bbox\r\n      var rbox = this.members[0].rbox(this.members[0].doc())\r\n\r\n      this.each(function() {\r\n        // user rbox for correct position and visual representation\r\n        rbox = rbox.merge(this.rbox(this.doc()))\r\n      })\r\n\r\n      return rbox\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a new set\r\n    set: function(members) {\r\n      return new SVG.Set(members)\r\n    }\r\n  }\r\n})\r\n\r\nSVG.FX.Set = SVG.invent({\r\n  // Initialize node\r\n  create: function(set) {\r\n    // store reference to set\r\n    this.set = set\r\n  }\r\n\r\n})\r\n\r\n// Alias methods\r\nSVG.Set.inherit = function() {\r\n  var m\r\n    , methods = []\r\n\r\n  // gather shape methods\r\n  for(var m in SVG.Shape.prototype)\r\n    if (typeof SVG.Shape.prototype[m] == 'function' && typeof SVG.Set.prototype[m] != 'function')\r\n      methods.push(m)\r\n\r\n  // apply shape aliasses\r\n  methods.forEach(function(method) {\r\n    SVG.Set.prototype[method] = function() {\r\n      for (var i = 0, il = this.members.length; i < il; i++)\r\n        if (this.members[i] && typeof this.members[i][method] == 'function')\r\n          this.members[i][method].apply(this.members[i], arguments)\r\n\r\n      return method == 'animate' ? (this.fx || (this.fx = new SVG.FX.Set(this))) : this\r\n    }\r\n  })\r\n\r\n  // clear methods for the next round\r\n  methods = []\r\n\r\n  // gather fx methods\r\n  for(var m in SVG.FX.prototype)\r\n    if (typeof SVG.FX.prototype[m] == 'function' && typeof SVG.FX.Set.prototype[m] != 'function')\r\n      methods.push(m)\r\n\r\n  // apply fx aliasses\r\n  methods.forEach(function(method) {\r\n    SVG.FX.Set.prototype[method] = function() {\r\n      for (var i = 0, il = this.set.members.length; i < il; i++)\r\n        this.set.members[i].fx[method].apply(this.set.members[i].fx, arguments)\r\n\r\n      return this\r\n    }\r\n  })\r\n}\r\n\r\n\r\n\n\r\nSVG.extend(SVG.Element, {\r\n  // Store data values on svg nodes\r\n  data: function(a, v, r) {\r\n    if (typeof a == 'object') {\r\n      for (v in a)\r\n        this.data(v, a[v])\r\n\r\n    } else if (arguments.length < 2) {\r\n      try {\r\n        return JSON.parse(this.attr('data-' + a))\r\n      } catch(e) {\r\n        return this.attr('data-' + a)\r\n      }\r\n\r\n    } else {\r\n      this.attr(\r\n        'data-' + a\r\n      , v === null ?\r\n          null :\r\n        r === true || typeof v === 'string' || typeof v === 'number' ?\r\n          v :\r\n          JSON.stringify(v)\r\n      )\r\n    }\r\n\r\n    return this\r\n  }\r\n})\nSVG.extend(SVG.Element, {\r\n  // Remember arbitrary data\r\n  remember: function(k, v) {\r\n    // remember every item in an object individually\r\n    if (typeof arguments[0] == 'object')\r\n      for (var v in k)\r\n        this.remember(v, k[v])\r\n\r\n    // retrieve memory\r\n    else if (arguments.length == 1)\r\n      return this.memory()[k]\r\n\r\n    // store memory\r\n    else\r\n      this.memory()[k] = v\r\n\r\n    return this\r\n  }\r\n\r\n  // Erase a given memory\r\n, forget: function() {\r\n    if (arguments.length == 0)\r\n      this._memory = {}\r\n    else\r\n      for (var i = arguments.length - 1; i >= 0; i--)\r\n        delete this.memory()[arguments[i]]\r\n\r\n    return this\r\n  }\r\n\r\n  // Initialize or return local memory object\r\n, memory: function() {\r\n    return this._memory || (this._memory = {})\r\n  }\r\n\r\n})\n// Method for getting an element by id\r\nSVG.get = function(id) {\r\n  var node = document.getElementById(idFromReference(id) || id)\r\n  return SVG.adopt(node)\r\n}\r\n\r\n// Select elements by query string\r\nSVG.select = function(query, parent) {\r\n  return new SVG.Set(\r\n    SVG.utils.map((parent || document).querySelectorAll(query), function(node) {\r\n      return SVG.adopt(node)\r\n    })\r\n  )\r\n}\r\n\r\nSVG.extend(SVG.Parent, {\r\n  // Scoped select method\r\n  select: function(query) {\r\n    return SVG.select(query, this.node)\r\n  }\r\n\r\n})\nfunction pathRegReplace(a, b, c, d) {\r\n  return c + d.replace(SVG.regex.dots, ' .')\r\n}\r\n\r\n// creates deep clone of array\r\nfunction array_clone(arr){\r\n  var clone = arr.slice(0)\r\n  for(var i = clone.length; i--;){\r\n    if(Array.isArray(clone[i])){\r\n      clone[i] = array_clone(clone[i])\r\n    }\r\n  }\r\n  return clone\r\n}\r\n\r\n// tests if a given element is instance of an object\r\nfunction is(el, obj){\r\n  return el instanceof obj\r\n}\r\n\r\n// tests if a given selector matches an element\r\nfunction matches(el, selector) {\r\n  return (el.matches || el.matchesSelector || el.msMatchesSelector || el.mozMatchesSelector || el.webkitMatchesSelector || el.oMatchesSelector).call(el, selector);\r\n}\r\n\r\n// Convert dash-separated-string to camelCase\r\nfunction camelCase(s) {\r\n  return s.toLowerCase().replace(/-(.)/g, function(m, g) {\r\n    return g.toUpperCase()\r\n  })\r\n}\r\n\r\n// Capitalize first letter of a string\r\nfunction capitalize(s) {\r\n  return s.charAt(0).toUpperCase() + s.slice(1)\r\n}\r\n\r\n// Ensure to six-based hex\r\nfunction fullHex(hex) {\r\n  return hex.length == 4 ?\r\n    [ '#',\r\n      hex.substring(1, 2), hex.substring(1, 2)\r\n    , hex.substring(2, 3), hex.substring(2, 3)\r\n    , hex.substring(3, 4), hex.substring(3, 4)\r\n    ].join('') : hex\r\n}\r\n\r\n// Component to hex value\r\nfunction compToHex(comp) {\r\n  var hex = comp.toString(16)\r\n  return hex.length == 1 ? '0' + hex : hex\r\n}\r\n\r\n// Calculate proportional width and height values when necessary\r\nfunction proportionalSize(element, width, height) {\r\n  if (width == null || height == null) {\r\n    var box = element.bbox()\r\n\r\n    if (width == null)\r\n      width = box.width / box.height * height\r\n    else if (height == null)\r\n      height = box.height / box.width * width\r\n  }\r\n\r\n  return {\r\n    width:  width\r\n  , height: height\r\n  }\r\n}\r\n\r\n// Delta transform point\r\nfunction deltaTransformPoint(matrix, x, y) {\r\n  return {\r\n    x: x * matrix.a + y * matrix.c + 0\r\n  , y: x * matrix.b + y * matrix.d + 0\r\n  }\r\n}\r\n\r\n// Map matrix array to object\r\nfunction arrayToMatrix(a) {\r\n  return { a: a[0], b: a[1], c: a[2], d: a[3], e: a[4], f: a[5] }\r\n}\r\n\r\n// Parse matrix if required\r\nfunction parseMatrix(matrix) {\r\n  if (!(matrix instanceof SVG.Matrix))\r\n    matrix = new SVG.Matrix(matrix)\r\n\r\n  return matrix\r\n}\r\n\r\n// Add centre point to transform object\r\nfunction ensureCentre(o, target) {\r\n  o.cx = o.cx == null ? target.bbox().cx : o.cx\r\n  o.cy = o.cy == null ? target.bbox().cy : o.cy\r\n}\r\n\r\n// PathArray Helpers\r\nfunction arrayToString(a) {\r\n  for (var i = 0, il = a.length, s = ''; i < il; i++) {\r\n    s += a[i][0]\r\n\r\n    if (a[i][1] != null) {\r\n      s += a[i][1]\r\n\r\n      if (a[i][2] != null) {\r\n        s += ' '\r\n        s += a[i][2]\r\n\r\n        if (a[i][3] != null) {\r\n          s += ' '\r\n          s += a[i][3]\r\n          s += ' '\r\n          s += a[i][4]\r\n\r\n          if (a[i][5] != null) {\r\n            s += ' '\r\n            s += a[i][5]\r\n            s += ' '\r\n            s += a[i][6]\r\n\r\n            if (a[i][7] != null) {\r\n              s += ' '\r\n              s += a[i][7]\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return s + ' '\r\n}\r\n\r\n// Deep new id assignment\r\nfunction assignNewId(node) {\r\n  // do the same for SVG child nodes as well\r\n  for (var i = node.childNodes.length - 1; i >= 0; i--)\r\n    if (node.childNodes[i] instanceof window.SVGElement)\r\n      assignNewId(node.childNodes[i])\r\n\r\n  return SVG.adopt(node).id(SVG.eid(node.nodeName))\r\n}\r\n\r\n// Add more bounding box properties\r\nfunction fullBox(b) {\r\n  if (b.x == null) {\r\n    b.x      = 0\r\n    b.y      = 0\r\n    b.width  = 0\r\n    b.height = 0\r\n  }\r\n\r\n  b.w  = b.width\r\n  b.h  = b.height\r\n  b.x2 = b.x + b.width\r\n  b.y2 = b.y + b.height\r\n  b.cx = b.x + b.width / 2\r\n  b.cy = b.y + b.height / 2\r\n\r\n  return b\r\n}\r\n\r\n// Get id from reference string\r\nfunction idFromReference(url) {\r\n  var m = url.toString().match(SVG.regex.reference)\r\n\r\n  if (m) return m[1]\r\n}\r\n\r\n// Create matrix array for looping\r\nvar abcdef = 'abcdef'.split('')\n// Add CustomEvent to IE9 and IE10\r\nif (typeof window.CustomEvent !== 'function') {\r\n  // Code from: https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent\r\n  var CustomEvent = function(event, options) {\r\n    options = options || { bubbles: false, cancelable: false, detail: undefined }\r\n    var e = document.createEvent('CustomEvent')\r\n    e.initCustomEvent(event, options.bubbles, options.cancelable, options.detail)\r\n    return e\r\n  }\r\n\r\n  CustomEvent.prototype = window.Event.prototype\r\n\r\n  window.CustomEvent = CustomEvent\r\n}\r\n\r\n// requestAnimationFrame / cancelAnimationFrame Polyfill with fallback based on Paul Irish\r\n(function(w) {\r\n  var lastTime = 0\r\n  var vendors = ['moz', 'webkit']\r\n\r\n  for(var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\r\n    w.requestAnimationFrame = w[vendors[x] + 'RequestAnimationFrame']\r\n    w.cancelAnimationFrame  = w[vendors[x] + 'CancelAnimationFrame'] ||\r\n                              w[vendors[x] + 'CancelRequestAnimationFrame']\r\n  }\r\n\r\n  w.requestAnimationFrame = w.requestAnimationFrame ||\r\n    function(callback) {\r\n      var currTime = new Date().getTime()\r\n      var timeToCall = Math.max(0, 16 - (currTime - lastTime))\r\n\r\n      var id = w.setTimeout(function() {\r\n        callback(currTime + timeToCall)\r\n      }, timeToCall)\r\n\r\n      lastTime = currTime + timeToCall\r\n      return id\r\n    }\r\n\r\n  w.cancelAnimationFrame = w.cancelAnimationFrame || w.clearTimeout;\r\n\r\n}(window))\r\n\r\nreturn SVG\r\n\r\n}));\r\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/svg.js/dist/svg.js\n// module id = 441\n// module chunks = 114276838955818","import React from 'react'\nimport Link from 'gatsby-link'\n\nimport Logo from '../Logo/'\nimport '../../scss/header.scss';\n\nconst Header = () => (\n  <nav className=\"navbar is-black is-transparent\">\n    <div className=\"navbar-brand\">\n      <a className=\"navbar-item\" href=\"/\">\n        <Logo/>\n      </a>\n      <div className=\"navbar-burger burger\" data-target=\"navbarMobile\">\n        <span></span>\n        <span></span>\n        <span></span>\n      </div>\n    </div>\n\n    <div id=\"navbarMobile\" className=\"navbar-menu\">\n      <div className=\"navbar-end\">\n        <Link className=\"navbar-item\" to=\"/about/\">\n          About\n        </Link>\n        <Link className=\"navbar-item\" to=\"/blog/\">\n          Blog\n        </Link>\n      </div>\n    </div>\n  </nav>\n)\n\nexport default Header\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/Header/index.js","import React from 'react'\nimport SVG from 'svg.js'\n\n// Butterfly Logo\nconst Header = () => {\n  const butterfly = SVG.select('svg')\n  const rightWing = SVG.select('#right-wing')\n  const leftWing = SVG.select('#left-wing')\n\n  butterfly.click(() => {\n    rightWing.animate({ ease: '<>' }).transform({ scaleX: 0.2, cx: 34.18762969970703 }).transform({ rotation: -20, cx: 34.18762969970703, relative: true })\n    rightWing.animate({ ease: '<>' }).transform({ a: 1 }).transform({ b: 0 }).transform({ c: 0 }).transform({ d: 1 }).transform({ e: 0 }).transform({ f: 0 }).transform({ rotation: 0, cx: 34.18762969970703 }).transform({ scaleX: 1, cx: 34.18762969970703 }).transform({ scaleY: 1 }).transform({ skewX: -0 }).transform({ skewY: 0 }).transform({ transformedX: 0 }).transform({ transformedY: 0 }).transform({ x: 0 }).transform({ y: 0 })\n\n    leftWing.animate({ ease: '<>' }).transform({ scaleX: 0.2, cx: 34.444305419921875 }).transform({ rotation: 30, cx: 34.444305419921875 })\n    leftWing.animate({ ease: '<>' }).transform({ a: 1 }).transform({ b: 0 }).transform({ c: 0 }).transform({ d: 1 }).transform({ e: 0 }).transform({ f: 0 }).transform({ rotation: 0, cx: 34.444305419921875 }).transform({ scaleX: 1, cx: 34.444305419921875 }).transform({ scaleY: 1 }).transform({ skewX: -0 }).transform({ skewY: 0 }).transform({ transformedX: 0 }).transform({ transformedY: 0 }).transform({ x: 0 }).transform({ y: 0 })\n\n    butterfly.off()\n  })\n  \n  return (   \n    <svg width=\"65px\" height=\"58px\" viewBox=\"0 0 65 58\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\">\n        <g id=\"Page-1\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n            <g id=\"logo\" transform=\"translate(2.000000, 1.000000)\">\n                <path d=\"M34.533543,30.7976939 C36.3207547,30.0020964 37.6236897,29.6792453 38.269392,29.6100629 C39.2148847,29.5062893 40.1603774,29.3448637 41.048218,29.0104822 C41.7400419,28.7222222 43.9077568,27.2348008 45.8563941,26.7044025 C51.6792453,23.3951782 59.3354298,15.8197065 56.5104822,9.09748428 C52.9591195,0.645702306 35.2023061,-1.44129979 34.187631,13.6981132 C34.8448637,19.9245283 42.5702306,35.7327044 42.5702306,35.7327044 C42.5702306,35.7327044 46.0293501,41.8553459 55.2767296,40.2180294 C57.4213836,39.7568134 62.1373166,36.8280922 60.730608,32.2389937 C60.730608,32.2389937 60.730608,32.2389937 60.730608,32.2389937 C59.370021,29.3218029 56.5566038,27.2463312 53.3396226,27.0157233 C49.1656184,26.7159329 45.8102725,28.629979 44.4612159,29.2410901 L40.3448637,30.9706499\" id=\"right-wing\" stroke=\"#F9B6B4\" strokeWidth=\"3\"></path>\n                <path d=\"M28.7683438,31.697065 C20.0167715,45.3144654 4.1048218,42.9161426 1.02620545,37.1624738 C-2.0524109,31.408805 2.14465409,14.7589099 16.8343816,21.1928721 C31.524109,27.6268344 34.8333333,44.0807128 30.2442348,51.7714885 C25.6551363,59.4622642 11.4266247,51.990566 19.8207547,43.1121593 C25.5744235,35.8710692 30.9821803,32.3888889 34.5220126,30.7976939\" id=\"left-wing\" stroke=\"#F9B6B4\" strokeWidth=\"3\"></path>\n                <path d=\"M34.2683438,30.2557652 C34.2683438,30.2557652 34.533543,30.7746331 35.0062893,31.6740042 C35.4675052,32.5849057 36.1477987,33.8647799 36.9779874,35.3983229 C37.3930818,36.1708595 37.8427673,36.9895178 38.3155136,37.8888889 L38.4884696,38.2463312 C38.5115304,38.3039832 38.5461216,38.3731656 38.5691824,38.4538784 L38.5922432,38.5230608 L38.6037736,38.5922432 C38.5922432,38.6268344 38.6498952,38.5807128 38.5461216,38.8459119 C38.6844864,38.8920335 38.1194969,39.0649895 38.1886792,39.0303983 L38.1771488,39.0303983 C38.1540881,39.0303983 38.0618449,39.0073375 38.0041929,38.9727463 C37.8542977,38.8574423 37.8888889,38.8689727 37.8658281,38.8459119 C37.6582809,38.5922432 37.5314465,38.3962264 37.3815514,38.1656184 C37.0932914,37.7159329 36.793501,37.2662474 36.5052411,36.8050314 C35.9287212,35.8710692 35.3522013,34.9025157 34.7987421,33.8993711 C34.2222222,32.9077568 33.7033543,31.8584906 33.1614256,30.8322851 C32.6540881,29.7830189 32.1236897,28.745283 31.6740042,27.6960168 C31.2012579,26.6582809 30.7631027,25.6090147 30.3595388,24.5943396 C30.1519916,24.0870021 29.9675052,23.5796646 29.7830189,23.0838574 C29.6907757,22.8186583 29.6100629,22.6111111 29.5293501,22.28826 C29.5293501,22.2651992 29.5178197,22.2536688 29.5178197,22.1844864 C29.5178197,22.1383648 29.5062893,22.172956 29.5178197,22.0691824 C29.5293501,21.9769392 29.5985325,21.8616352 29.6677149,21.8039832 C29.7253669,21.7348008 30.0828092,21.71174 29.932914,21.7348008 C29.9213836,21.7348008 30.0020964,21.7463312 30.0597484,21.7809224 C30.1174004,21.8039832 30.1865828,21.8616352 30.221174,21.8962264 L30.2672956,21.9538784 C30.3134172,22.0230608 30.3480084,22.0807128 30.3825996,22.1383648 L30.567086,22.4842767 C31.0167715,23.3951782 31.408805,24.2484277 31.7777778,25.0440252 C32.5157233,26.6236897 33.1268344,27.9381551 33.5880503,28.8490566 C34.0146751,29.7368973 34.2683438,30.2557652 34.2683438,30.2557652 Z M34.2683438,30.2557652 C34.2683438,30.2557652 34.0031447,29.7368973 33.5303983,28.8375262 C33.2997904,28.3878407 33.0115304,27.8459119 32.6540881,27.2232704 C32.3081761,26.6121593 31.9161426,25.908805 31.466457,25.1708595 C31.0167715,24.4213836 30.5209644,23.6142558 29.9675052,22.7955975 L29.7599581,22.4958071 C29.7253669,22.4496855 29.6907757,22.4035639 29.6561845,22.3689727 L29.6446541,22.3574423 C29.6677149,22.3805031 29.7138365,22.4266247 29.7714885,22.4381551 C29.8291405,22.4612159 29.8983229,22.4496855 29.8637317,22.4496855 C29.7023061,22.4727463 30.048218,22.4266247 30.10587,22.3805031 C30.1750524,22.3343816 30.2442348,22.230608 30.2557652,22.1383648 L30.2557652,22.0691824 C30.2557652,22.0345912 30.2557652,22.057652 30.2557652,22.057652 C30.3249476,22.230608 30.451782,22.4842767 30.567086,22.7033543 C30.8092243,23.1645702 31.0628931,23.6373166 31.3165618,24.1100629 C31.8354298,25.067086 32.3658281,26.0587002 32.9077568,27.0618449 C33.4612159,28.0649895 33.9570231,29.1027254 34.4989518,30.1289308 C34.9947589,31.1781971 35.5366876,32.2044025 36.009434,33.2421384 C36.4937107,34.2798742 36.966457,35.2945493 37.427673,36.2746331 C37.6582809,36.7589099 37.8888889,37.2431866 38.1079665,37.7159329 C38.2232704,37.9350105 38.3501048,38.2002096 38.442348,38.3501048 C38.4308176,38.3501048 38.5,38.384696 38.3616352,38.2924528 C38.3155136,38.269392 38.2348008,38.2578616 38.2232704,38.2578616 L38.2348008,38.2578616 C38.3155136,38.2348008 37.7505241,38.384696 37.8888889,38.4308176 C37.7966457,38.672956 37.8542977,38.615304 37.8427673,38.6268344 C37.8427673,38.6383648 37.8427673,38.6498952 37.8427673,38.6498952 L37.8427673,38.6268344 C37.8312369,38.5807128 37.8197065,38.5230608 37.7966457,38.4769392 L37.6813417,38.1310273 C37.3584906,37.197065 37.0010482,36.3207547 36.6666667,35.5136268 C36.3438155,34.706499 36.009434,33.9800839 35.721174,33.3343816 C35.432914,32.6886792 35.1677149,32.1352201 34.9486373,31.6740042 C34.5220126,30.7746331 34.2683438,30.2557652 34.2683438,30.2557652 Z\" id=\"Shape\" fill=\"#F9B6B4\" fillRule=\"nonzero\"></path>\n                <path d=\"M29.8752621,22.0807128 C29.8752621,22.0807128 23.4297694,3.67819706 31.466457,1.26834382\" id=\"antenna-1\" stroke=\"#F9B6B4\" strokeWidth=\"0.25\"></path>\n                <path d=\"M30.2327044,23.0838574 C30.2327044,23.0838574 21.6194969,5.59224319 14.2631027,9.639413\" id=\"antenna-2\" stroke=\"#F9B6B4\" strokeWidth=\"0.25\"></path>\n                <circle id=\"point-1\" stroke=\"#F9B6B4\" fill=\"#F9B6B4\" fillRule=\"nonzero\" cx=\"42.4779874\" cy=\"47.5628931\" r=\"1.19916143\"></circle>\n                <circle id=\"point-2\" stroke=\"#F9B6B4\" fill=\"#F9B6B4\" fillRule=\"nonzero\" cx=\"13.6519916\" cy=\"10.2274633\" r=\"1.19916143\"></circle>\n                <circle id=\"point-3\" stroke=\"#F9B6B4\" fill=\"#F9B6B4\" fillRule=\"nonzero\" cx=\"32.6540881\" cy=\"1.26834382\" r=\"1.19916143\"></circle>\n            </g>\n        </g>       \n    </svg>\n  )\n}\n\nexport default Header\n\n\n// WEBPACK FOOTER //\n// ./src/components/Logo/index.js","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\n\n//import Header from '../components/Header'\nimport '../scss/main.scss'\nimport Header from '../components/Header';\n\nconst Layout = ({ children }) => (\n  <div>\n    <Helmet\n      title=\"Heba El-Shimy's Portfolio & Blog\"\n      meta={[\n        { name: 'description', content: 'Portfolio' },\n        { name: 'keywords', content: 'portfolio, blog' },\n        { name: 'theme-color', content: '#000000' },\n        { httpEquiv: 'cleartype', content: 'on' },\n        { name: 'HandheldFriendly', content: 'True' },\n        { name: 'MobileOptimized', content: '320' },\n        { name: 'apple-mobile-web-app-title', content: 'Portfolio'},\n        { name: 'apple-mobile-web-app-capable', content: 'Yes'},\n        { name: 'apple-mobile-web-app-status-bar-style', content: 'black' }\n      ]}\n      link={[\n        { rel: 'shortcut icon', href: '/favicon.ico' },\n        { rel: 'apple-touch-startup-image', media: '(device-width: 320px) and (device-height: 568px)    (-webkit-device-pixel-ratio: 2) and (orientation: portrait)', href: '/images/launch/apple-touch-startup-image-640x1136.png' },\n        { rel: 'apple-touch-startup-image', media: '(device-width: 375px) and (device-height: 667px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)', href: '/images/launch/apple-touch-startup-image-750x1334.png' },\n        { rel: 'apple-touch-startup-image', media: '(device-width: 414px) and (device-height: 736px) and (-webkit-device-pixel-ratio: 3) and (orientation: portrait)', href: '/images/launch/apple-touch-startup-image-1242x2208.png' },\n        { rel: 'apple-touch-startup-image', media: '(device-width: 375px) and (device-height: 812px) and (-webkit-device-pixel-ratio: 3) and (orientation: portrait)', href: '/images/launch/apple-touch-startup-image-1125x2436.png' },\n        { rel: 'apple-touch-startup-image', media: '(device-width: 768px) and (device-height: 1024px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)', href: '/images/launch/apple-touch-startup-image-1536x2048.png' },\n        { rel: 'apple-touch-startup-image', media: '(device-width: 834px) and (device-height: 1112px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)', href: '/images/launch/apple-touch-startup-image-1668x2224.png' },\n        { rel: 'apple-touch-startup-image', media: '(device-width: 1024px) and (device-height: 1366px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)', href: '/images/launch/apple-touch-startup-image-2048x2732.png' },\n        { rel: 'apple-touch-icon', href: '/images/touch/apple-touch-icon.png' },\n        { rel: 'apple-touch-icon', sizes: '57x57', href: '/images/touch/apple-touch-icon-57x57.png' },\n        { rel: 'apple-touch-icon', sizes: '72x72', href: '/images/touch/apple-touch-icon-72x72.png' },\n        { rel: 'apple-touch-icon', sizes: '114x114', href: '/images/touch/apple-touch-icon-114x114.png' },\n        { rel: 'apple-touch-icon', sizes: '120x120', href: '/images/touch/apple-touch-icon-120x120.png' },\n        { rel: 'apple-touch-icon', sizes: '144x144', href: '/images/touch/apple-touch-icon-144x144.png' },\n        { rel: 'apple-touch-icon', sizes: '152x152', href: '/images/touch/apple-touch-icon-152x152.png' }\n      ]}\n    />\n    <Header/>\n    <div\n      style={{\n        margin: '0 auto',\n        maxWidth: 960,\n        padding: '0px 1.0875rem 1.45rem',\n        paddingTop: 0,\n      }}\n    >\n      {children()}\n    </div>\n  </div>\n)\n\nLayout.propTypes = {\n  children: PropTypes.func,\n}\n\nexport default Layout\n\n\n\n// WEBPACK FOOTER //\n// ./src/layouts/index.js"],"sourceRoot":""}